# linked from mrmSoftSeq.template
# $(P)InitSeq$(s=:)Cont-FOut_
record(fanout, "$(P)TrigSrc$(s=:)Init-FOut_") {
  field(ASG, "private")
  field(LNK1, "$(P)TrigSrc-Sel_")
}

record(mbbo, "$(P)TrigSrc-Sel") {
  field(DTYP, "Raw Soft Channel")
  field(OUT , "$(P)TrigSrc-Sel_ PP")
  field(UDF,  "0")
  field(ZRST, "None")
  field(ONST, "Mxc0")
  field(TWST, "Mxc1")
  field(THST, "Mxc2")
  field(FRST, "Mxc3")
  field(FVST, "Mxc4")
  field(SXST, "Mxc5")
  field(SVST, "Mxc6")
  field(EIST, "Mxc7")
  field(NIST, "AC")
  field(TEST, "Software")
  field(ELST, "Front0")
  field(TVST, "Front1")
  field(TTST, "Front2")
  field(ZRVL, "0x03000000")
  field(ONVL, "0")
  field(TWVL, "1")
  field(THVL, "2")
  field(FRVL, "3")
  field(FVVL, "4")
  field(SXVL, "5")
  field(SVVL, "6")
  field(EIVL, "7")
  field(NIVL, "16")
  field(TEVL, "0x01000000")
  field(ELVL, "0x02010000")
  field(TVVL, "0x02010001")
  field(TTVL, "0x02010002")
  info(autosaveFields_pass0, "VAL")
    alias("$(P)TrigSrc$(s=:)0-Sel")
}

record(mbbo, "$(P)TrigSrc$(s=:)1-Sel") {
  field(DTYP, "Raw Soft Channel")
  field(OUT , "$(P)TrigSrc$(s=:)-Sel_ PP")
  field(UDF,  "0")
  field(ZRST, "Univ0")
  field(ONST, "Univ1")
  field(TWST, "Univ2")
  field(THST, "Univ3")
  field(FRST, "Univ4")
  field(FVST, "Univ5")
  field(SXST, "Univ6")
  field(SVST, "Univ7")
  field(EIST, "Univ8")
  field(NIST, "Univ9")
  field(TEST, "Univ10")
  field(ELST, "Univ11")
  field(TVST, "Univ12")
  field(TTST, "Univ13")
  field(FTST, "Univ14")
  field(FFST, "Univ15")
  field(ZRVL, "0x02020000")
  field(ONVL, "0x02020001")
  field(TWVL, "0x02020002")
  field(THVL, "0x02020003")
  field(FRVL, "0x02020004")
  field(FVVL, "0x02020005")
  field(SXVL, "0x02020006")
  field(SVVL, "0x02020007")
  field(EIVL, "0x02020008")
  field(NIVL, "0x02020009")
  field(TEVL, "0x0202000a")
  field(ELVL, "0x0202000b")
  field(TVVL, "0x0202000c")
  field(TTVL, "0x0202000d")
  field(FTVL, "0x0202000e")
  field(FFVL, "0x0202000f")
  info(autosaveFields_pass0, "VAL")
}

# placeholder to OPIs
record(mbbo, "$(P)TrigSrc$(s=:)2-Sel") {
  field(DTYP, "Raw Soft Channel")
  field(OUT , "$(P)TrigSrc$(s=:)-Sel_ PP")
  field(UDF,  "0")
  field(ZRST, "Rear0")
  field(ONST, "Rear1")
  field(TWST, "Rear2")
  field(THST, "Rear3")
  field(FRST, "Rear4")
  field(FVST, "Rear5")
  field(SXST, "Rear6")
  field(SVST, "Rear7")
  field(EIST, "Rear8")
  field(NIST, "Rear9")
  field(TEST, "Rear10")
  field(ELST, "Rear11")
  field(TVST, "Rear12")
  field(TTST, "Rear13")
  field(FTST, "Rear14")
  field(FFST, "Rear15")
  field(ZRVL, "0x02030000")
  field(ONVL, "0x02030001")
  field(TWVL, "0x02030002")
  field(THVL, "0x02030003")
  field(FRVL, "0x02030004")
  field(FVVL, "0x02030005")
  field(SXVL, "0x02030006")
  field(SVVL, "0x02030007")
  field(EIVL, "0x02030008")
  field(NIVL, "0x02030009")
  field(TEVL, "0x0203000a")
  field(ELVL, "0x0203000b")
  field(TVVL, "0x0203000c")
  field(TTVL, "0x0203000d")
  field(FTVL, "0x0203000e")
  field(FFVL, "0x0203000f")
  info(autosaveFields_pass0, "VAL")
}

record(longout, "$(P)TrigSrc-Sel_") {
  field(ASG, "private")
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):SEQ$(seqNum), CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=TRIG_SRC")
  field(VAL , "0x03000000") # default to None
  info(autosaveFields_pass0, "VAL")
}

record(longin, "$(P)TrigSrc-RB_") {
  field(ASG, "private")
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):SEQ$(seqNum), CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=TRIG_SRC")
  field(SCAN, "I/O Intr")
  field(FLNK, "$(P)TrigSrc-RB")
}

record(stringin, "$(P)TrigSrc-RB") {
  field(DTYP, "LUT uint32 -> string")
  field(INP, "$(P)TrigSrc-RB_")
  info(lut0 , " 0  = Mxc0")
  info(lut1 , " 1  = Mxc1")
  info(lut2 , " 2  = Mxc2")
  info(lut3 , " 3  = Mxc3")
  info(lut4 , " 4  = Mxc4")
  info(lut5 , " 5  = Mxc5")
  info(lut6 , " 6  = Mxc6")
  info(lut7 , " 7  = Mxc7")
  info(lut8 , " 16 = AC")
  info(lut9 , " 0x01000000 = Software")
  info(luta , " 0x02010000 = Front0")
  info(lutb , " 0x02010001 = Front1")
  info(lutc , " 0x02020000 = Univ0")
  info(lutd , " 0x02020001 = Univ1")
  info(lute , " 0x02020002 = Univ2")
  info(lutf , " 0x02020003 = Univ3")
  info(lutg , " 0x02020004 = Univ4")
  info(luth , " 0x02020005 = Univ5")
  info(luti , " 0x02020006 = Univ6")
  info(lutj , " 0x02020007 = Univ7")
  info(lutk , " 0x02020008 = Univ8")
  info(lutl , " 0x02020009 = Univ9")
  info(lutm , " 0x0202000a = Univ10")
  info(lutn , " 0x0202000b = Univ11")
  info(luto , " 0x0202000c = Univ12")
  info(lutp , " 0x0202000d = Univ13")
  info(lutq , " 0x0202000e = Univ14")
  info(lutr , " 0x0202000f = Univ15")
  info(luts , " 0x02010002 = Front2")
  info(lutt , " 0x02030000 = Rear0")
  info(lutu , " 0x02030001 = Rear1")
  info(lutv , " 0x02030002 = Rear2")
  info(lutw , " 0x02030003 = Rear3")
  info(lutx , " 0x02030004 = Rear4")
  info(luty , " 0x02030005 = Rear5")
  info(lutz , " 0x02030006 = Rear6")
  info(lutA , " 0x02030007 = Rear7")
  info(lutB , " 0x02030008 = Rear8")
  info(lutC , " 0x02030009 = Rear9")
  info(lutD , " 0x0203000a = Rear10")
  info(lutE , " 0x0203000b = Rear11")
  info(lutF , " 0x0203000c = Rear12")
  info(lutG , " 0x0203000d = Rear13")
  info(lutH , " 0x0203000e = Rear14")
  info(lutI , " 0x0203000f = Rear15")
  info(lutY , " 0x03000000 = None")
}

#
# When Evt Clock Frequency changes, Sequencer Timestamp changes
#(only if TsInpMode = EGU).
#
record(ai, "$(P)EvtClkFreq-RB_") {
  field(ASG, "private")
  field(INP,  "$(PP=$(SYS){$(D)-)EvtClk$(s=})Frequency-RB CP")
  field(FLNK, "$(P)EvtClkFreq$(s=:)Cont-RB_")
}

record(ao, "$(P)EvtClkFreq$(s=:)Cont-RB_") {
  field(ASG, "private")
  field(OUT,  "$(P)Timestamp-RB.PROC")
  field(VAL,  "1")
}
