# Record set for an EVR's physical output
#
# Macros:
#  ON = record name prefix
#  OBJ = devObj name
#  DESC = Physical label found on output jack


record(bo, "$(ON)Ena-SP") {
  field( DTYP, "Obj Prop bool")
  field( DESC, "Output $(DESC)")
  field( OUT , "@OBJ=$(OBJ), PROP=Enable")
  field( PINI, "YES")
  field( ZNAM, "Disabled")
  field( ONAM, "Enabled")
  field( VAL , "1") # Default to enabled
  info(autosaveFields_pass0, "VAL")
}

record(longout, "$(ON)Src-SP") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "$(DESC)")
  field( OUT , "@OBJ=$(OBJ), PROP=Map")
  field( FLNK, "$(ON)Src-FOut_")
  field( PINI, "YES")
  field( VAL , "63")
  info(autosaveFields_pass0, "VAL HOPR LOPR DRVH DRVL")
}

# Settings
# Users use will set one of these at a time.

record(mbbo, "$(ON)Src$(s=:)Pulse-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(ON)Src-SP PP")
  field( ZRST, "Pulser 0")
  field( ONST, "Pulser 1")
  field( VAL , "2")
  field( ZRVL, "2")
  field( ONVL, "3")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(ON)Src$(s=:)DBus-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(ON)Src-SP PP")
  field( ZRST, "N/A")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(ON)Src$(s=:)Scale-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(ON)Src-SP PP")
  field( ZRST, "Prescaler 0")
  field( ZRVL, "1")
  field( FVSV, "INVALID")
  field( SXSV, "INVALID")
  field( SVSV, "INVALID")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

# Mapping readback

record(fanout, "$(ON)Src-FOut_") {
  field(ASG, "private")
  field(LNK1, "$(ON)Src-RB_")
  field(LNK2, "$(ON)Src$(s=:)Pulse-RB")
  field(LNK3, "$(ON)Src$(s=:)DBus-RB")
  field(LNK4, "$(ON)Src$(s=:)Scale-RB")
  field(LNK5, "$(ON)Src-Calc_")
}

record(longin, "$(ON)Src-RB_") {
  field(ASG, "private")
  field( DTYP, "Obj Prop uint32")
  field( DESC, "$(DESC)")
  field( INP , "@OBJ=$(OBJ), PROP=Map")
}

record(mbbi, "$(ON)Src$(s=:)Pulse-RB") {
  field( DTYP, "Raw Soft Channel")
  field( INP , "$(ON)Src-RB_")
  field( ZRST, "Pulser 0")
  field( ONST, "Pulser 1")
  field( ZRVL, "2")
  field( ONVL, "3")
  field( UNSV, "MAJOR")
}

record(mbbi, "$(ON)Src$(s=:)DBus-RB") {
  field( DTYP, "Raw Soft Channel")
  field( INP , "$(ON)Src-RB_")
  field( ZRST, "N/A")
  field( ZRVL, "32")
  field( EISV, "MAJOR")
  field( NISV, "MAJOR")
  field( TESV, "MAJOR")
  field( ELSV, "MAJOR")
  field( TVSV, "MAJOR")
  field( TTSV, "MAJOR")
  field( FTSV, "MAJOR")
  field( FFSV, "MAJOR")
  field( UNSV, "MAJOR")
}

record(mbbi, "$(ON)Src$(s=:)Scale-RB") {
  field( DTYP, "Raw Soft Channel")
  field( INP , "$(ON)Src-RB_")
  field( ZRST, "Prescaler 0")
  field( ZRVL, "1")
  field( FVSV, "MAJOR")
  field( SXSV, "MAJOR")
  field( SVSV, "MAJOR")
  field( EISV, "MAJOR")
  field( NISV, "MAJOR")
  field( TESV, "MAJOR")
  field( ELSV, "MAJOR")
  field( TVSV, "MAJOR")
  field( TTSV, "MAJOR")
  field( FTSV, "MAJOR")
  field( FFSV, "MAJOR")
  field( UNSV, "MAJOR")
  field( UNSV, "MAJOR")
}

record(aSub, "$(ON)Src-Calc_") {
  field(ASG, "private")
  field(SNAM, "Select String")
  field(FTA , "STRING")
  field(FTB , "STRING")
  field(FTC , "STRING")
  field(FTVA, "STRING")
  field(INPA, "$(ON)Src$(s=:)Pulse-RB")
  field(INPB, "$(ON)Src$(s=:)DBus-RB")
  field(INPC, "$(ON)Src$(s=:)Scale-RB")
  field(OUTA, "$(ON)Src-RB PP")
}

record(stringin, "$(ON)Src-RB") {}

# Select which is displayed

record(waveform, "$(ON)Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
  alias("$(ON)User-SP")
}
