# Base record set for an EVR
#
# Macros-
#  SYS = System name
#  EVR = EVR devObj name
#  EVNT1HZ = DB event number for the 1 second tick


record(bo, "$(SYS,recursive)-$(EVR,recursive):Ena-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVR,recursive), PROP=Enable")
  field(DESC, "Master enable for EVR device")
  field(MASK, "1")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
  field( VAL , "$(Ena-Sel=0,undefined)")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "$(SYS,recursive)-$(EVR,recursive):Cnt-LinkTimo-I") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVR,recursive), PROP=HB Timeout Count")
  field(SCAN, "I/O Intr")
  field(DESC, "# of heartbeat timeout")
}

record(bo, "$(SYS,recursive)-$(EVR,recursive):ExtInhib-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVR,recursive), PROP=External Inhibit")
  field(PINI, "YES")
  field(DESC, "Use HW trigger inhibit (EVRTG only)")
  field(MASK, "1")
  field(ZNAM, "Use Inhibit")
  field(ONAM, "Always Permit")
  field(OSV, "MINOR")
  field( VAL , "$(ExtInhib-Sel=0,undefined)")
  info(autosaveFields_pass0, "VAL")
}

record(bi, "$(SYS,recursive)-$(EVR,recursive):Link-Sts") {
  field(DTYP, "Obj Prop bool")
  field(INP , "@OBJ=$(EVR,recursive), PROP=Link Status")
  field(DESC, "Status of event link")
  field(SCAN, "1 second")
  field(ZNAM, "Fail")
  field(ONAM, "OK")
  field(ZSV , "MAJOR")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Cnt-RxErr-I")
}

record(longin, "$(SYS,recursive)-$(EVR,recursive):Cnt-RxErr-I") {
  field(DTYP, "Obj Prop uint32")
  field(DESC, "Receive Error Count")
  field(INP , "@OBJ=$(EVR,recursive), PROP=Receive Error Count")
  field(TSEL, "$(SYS,recursive)-$(EVR,recursive):Link-Sts.TIME")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Cnt-HwOflw-I")
}

record(calc, "$(SYS,recursive)-$(EVR,recursive):Cnt-RxErr-Rate-I") {
  field(DESC, "Counts errors in time interval")
  field(SCAN, "10 second")
  field(CALC, "A-B")
  field(HIHI, "1")
  field(HHSV, "MAJOR")
  field(LOLO, "-1")
  field(LLSV, "MAJOR")
  field(INPA, "$(SYS,recursive)-$(EVR,recursive):Cnt-RxErr-I")
  field(INPB, "$(SYS,recursive)-$(EVR,recursive):Cnt-RxErr-Last_")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Cnt-RxErr-Last_")
}

record(longin, "$(SYS,recursive)-$(EVR,recursive):Cnt-RxErr-Last_"){
  field(DESC, "RxErr count for last period")
  field(SCAN, "Passive")
  field(INP, "$(SYS,recursive)-$(EVR,recursive):Cnt-RxErr-I")
}

record(longin, "$(SYS,recursive)-$(EVR,recursive):Cnt-HwOflw-I") {
  field(DTYP, "Obj Prop uint32")
  field(DESC, "FIFO Hw Overflow Count")
  field(INP , "@OBJ=$(EVR,recursive), PROP=FIFO Overflow Count")
  field(TSEL, "$(SYS,recursive)-$(EVR,recursive):Cnt-RxErr-I.TIME")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Cnt-SwOflw-I")
}

record(longin, "$(SYS,recursive)-$(EVR,recursive):Cnt-SwOflw-I") {
  field(DTYP, "Obj Prop uint32")
  field(DESC, "FIFO Sw Overrate Count")
  field(INP , "@OBJ=$(EVR,recursive), PROP=FIFO Over rate")
  field(TSEL, "$(SYS,recursive)-$(EVR,recursive):Cnt-RxErr-I.TIME")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Link-Init-FO_")
}

# Detect the first time the event link
# is online.  Then set master enable.
record(calcout, "$(SYS,recursive)-$(EVR,recursive):Link-Init-FO_") {
  field(DESC, "Detect initial link up")
  field(INPA, "$(SYS,recursive)-$(EVR,recursive):Link-Sts")
  field(CALC, "A")
  field(OUT , "$(SYS,recursive)-$(EVR,recursive):Ena-Sel PP")
  field(OOPT, "Transition To Non-zero")
  field(ODLY, "1.0")
  field(TSEL, "$(SYS,recursive)-$(EVR,recursive):Link-Sts.TIME")
}

record(ao, "$(SYS,recursive)-$(EVR,recursive):Link-Clk-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVR,recursive), PROP=Clock")
  field(PINI, "YES")
  field(DESC, "Event Link speed")
  field( VAL , "$(Link-Clk-SP=124.916,undefined)")
  field(EGU , "MHz")
  field(LINR, "LINEAR")
  field(ESLO, "1e-6")
  field(HOPR, "150")
  field(LOPR, "50")
  field(DRVH, "150")
  field(DRVL, "50")
  field(PREC, "3")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Link-Clk-I")
  info(autosaveFields_pass0, "VAL EGU ESLO HOPR LOPR DRVH DRVL PREC")
}

record(ai, "$(SYS,recursive)-$(EVR,recursive):Link-Clk-I") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVR,recursive), PROP=Clock")
  field(DESC, "Event Link speed")
  field(PINI, "YES")
  field(UDF , "0")
  field(EGU , "MHz")
  field(LINR, "LINEAR")
  field(ESLO, "1e-6")
  field(PREC, "3")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Link-ClkErr-I")
  info(autosaveFields_pass0, "EGU ESLO HOPR LOPR PREC")
}

record(calc, "$(SYS,recursive)-$(EVR,recursive):Link-ClkErr-I") {
  field(CALC, "(A-B)*1000")
  field(EGU , "KHz")
  field(PREC, "3")
  field(INPA, "$(SYS,recursive)-$(EVR,recursive):Link-Clk-SP")
  field(INPB, "$(SYS,recursive)-$(EVR,recursive):Link-Clk-I")
  field(TSEL, "$(SYS,recursive)-$(EVR,recursive):Link-Clk-I.TIME")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Link-ClkPeriod-I")
  info(autosaveFields_pass0, "EGU CALC PREC")
}

# Intended for use in calculations
record(calc, "$(SYS,recursive)-$(EVR,recursive):Link-ClkPeriod-I") {
  field(DESC, "Event period")
  field(CALC, "B/A")
  field(EGU , "s")
  field(PREC, "3")
  field(INPA, "$(SYS,recursive)-$(EVR,recursive):Link-Clk-SP")
  field(INPB, "$(SYS,recursive)-$(EVR,recursive):Link-Clk-SP.ESLO")
  field(TSEL, "$(SYS,recursive)-$(EVR,recursive):Link-Clk-I.TIME")
}

record(bi, "$(SYS,recursive)-$(EVR,recursive):Pll-Sts") {
  field(DTYP, "Obj Prop bool")
  field(INP , "@OBJ=$(EVR,recursive), PROP=PLL Lock Status")
  field(SCAN, "1 second")
  field(PINI, "YES")
  field(DESC, "Status of PLL")
  field(ZNAM, "Error")
  field(ONAM, "OK")
  field(ZSV , "MAJOR")
}

record(longin, "$(SYS,recursive)-$(EVR,recursive):HwType-I") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVR,recursive), PROP=Model")
  field(PINI, "YES")
  field(DESC, "Hardware type code")
}

record(longin, "$(SYS,recursive)-$(EVR,recursive):FwVer-I") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVR,recursive), PROP=Version")
  field(PINI, "YES")
  field(DESC, "Firmware version")
}

record(stringin, "$(SYS,recursive)-$(EVR,recursive):SwVer-I") {
  field(DTYP, "Obj Prop string")
  field(INP , "@OBJ=$(EVR,recursive), PROP=Sw Version")
  field(PINI, "YES")
  field(DESC, "Software version")
}

record(stringin, "$(SYS,recursive)-$(EVR,recursive):Pos-I") {
  field(DTYP, "Obj Prop string")
  field(INP , "@OBJ=$(EVR,recursive), PROP=Position")
  field(PINI, "YES")
  field(DESC, "Card position in system")
}

record(fanout, "$(SYS,recursive)-$(EVR,recursive):Time-Init-FO_") {
  field(PINI, "YES")
  field(LNK1, "$(SYS,recursive)-$(EVR,recursive):Time-Clock-SP")
  field(LNK2, "$(SYS,recursive)-$(EVR,recursive):Time-Src-Sel")
}

record(bi, "$(SYS,recursive)-$(EVR,recursive):Time-Valid-Sts") {
  field(DTYP, "Obj Prop bool")
  field(INP , "@OBJ=$(EVR,recursive), PROP=Timestamp Valid")
  field(PINI, "YES")
  field(SCAN, "I/O Intr")
  field(ZSV , "MAJOR")
  field(ZNAM, "Invalid")
  field(ONAM, "Valid")
}

record(mbbo, "$(SYS,recursive)-$(EVR,recursive):Time-Src-Sel") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS,recursive)-$(EVR,recursive):Time-Src-Sel_")
  field( PINI, "YES")
  field( VAL , "$(Time-Src-Sel=0,undefined)")
  field( ZRST, "Event clock")
  field( ONST, "Mapped code(s)")
  field( TWST, "DBus 4")
  field( ZRVL, "0")
  field( ONVL, "1")
  field( TWVL, "2")
  field( THSV, "INVALID")
  field( FRSV, "INVALID")
  field( FVSV, "INVALID")
  field( SXSV, "INVALID")
  field( SVSV, "INVALID")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Time-Src-Sel_")
  info(autosaveFields_pass0, "VAL")
}

record(longout, "$(SYS,recursive)-$(EVR,recursive):Time-Src-Sel_") {
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVR,recursive), PROP=Timestamp Source")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Time-Clock-I")
}

record(ao, "$(SYS,recursive)-$(EVR,recursive):Time-Clock-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVR,recursive), PROP=Timestamp Clock")
  field(DESC, "Timestamp tick rate")
  field( VAL , "$(Time-Clock-SP=0.0,undefined)")
  field(EGU , "MHz")
  field(LINR, "LINEAR")
  field(ESLO, "1e-6")
  field(HOPR, "150")
  field(LOPR, "0")
  field(DRVH, "150")
  field(DRVL, "0")
  field(PREC, "3")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Time-Clock-I")
  info(autosaveFields_pass0, "VAL EGU ESLO HOPR LOPR DRVH DRVL PREC")
}

record(ai, "$(SYS,recursive)-$(EVR,recursive):Time-Clock-I") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVR,recursive), PROP=Timestamp Clock")
  field(SCAN, "1 second")
  field(DESC, "Timestamp tick rate")
  field(PINI, "YES")
  field(UDF , "0")
  field(EGU , "MHz")
  field(LINR, "LINEAR")
  field(ESLO, "1e-6")
  field(HOPR, "150")
  field(LOPR, "0")
  field(PREC, "3")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Time-Div-I")
}

record(longin, "$(SYS,recursive)-$(EVR,recursive):Time-Div-I") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVR,recursive), PROP=Timestamp Prescaler")
  field(DESC, "Timestamp divider")
}

record(stringin, "$(SYS,recursive)-$(EVR,recursive):Time-I") {
  field(DTYP, "EVR Timestamp")
  field(INP , "@OBJ=$(EVR,recursive)")
  field(SCAN, "Event")
  field(EVNT, "125")
  field(TSE , "125")
}

record(bo, "$(SYS,recursive)-$(EVR,recursive):Link-RxMode-Sel") {
  field(DESC, "Downstream data mode")
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVR,recursive):BUFRX, PROP=Enable")
  field(PINI, "YES")
  field( VAL , "$(Link-RxMode-Sel=1,undefined)")
  field(ZNAM, "DBus only")
  field(ONAM, "DBus+Buffer")
  info(autosaveFields_pass0, "VAL")
}



record(bo, "$(SYS,recursive)-$(EVR,recursive):SFP-Update-Cmd") {
  field(DTYP, "Obj Prop bool")
  field(SCAN, "10 second")
  field(OUT , "@OBJ=$(EVR,recursive):SFP, PROP=Update")
  field(ZNAM, "Update")
  field(ONAM, "Update")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):SFP-T-I")
}

record(ai, "$(SYS,recursive)-$(EVR,recursive):SFP-T-I") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVR,recursive):SFP, PROP=Temperature")
  field(DESC, "Tranceiver Temperature")
  field(ADEL, "0.5")
  field(HIGH, "40")
  field(HSV , "MINOR")
  field(HIHI, "50")
  field(HHSV, "MAJOR")
  field(LOW , "0")
  field(LSV , "INVALID")
  field(EGU , "C")
  field(PREC, "1")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):SFP-Pwr-TX-I")
}

record(ai, "$(SYS,recursive)-$(EVR,recursive):SFP-Pwr-TX-I") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVR,recursive):SFP, PROP=Power TX")
  field(DESC, "Tranceiver Output Power")
  field(ADEL, "5")
  field(HIGH, "400")
  field(HSV , "MINOR")
  field(LOW , "200")
  field(LSV , "MAJOR")
  field(LOLO, "-0.1") # SFP module removed
  field(LLSV, "INVALID")
  field(EGU , "uW")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "1")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):SFP-Pwr-RX-I")
  info(autosaveFields_pass0, "LOW")
}

record(ai, "$(SYS,recursive)-$(EVR,recursive):SFP-Pwr-RX-I") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVR,recursive):SFP, PROP=Power RX")
  field(DESC, "Tranceiver Input Power")
  field(ADEL, "5")
  field(HIGH, "600")
  field(HSV , "MINOR")
  field(LOW , "100")
  field(LSV , "MAJOR")
  field(LOLO, "-0.1") # SFP module removed
  field(LLSV, "INVALID")
  field(EGU , "uW")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "1")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):SFP-Speed-Link-I")
  info(autosaveFields_pass0, "LOW")
}

record(ai, "$(SYS,recursive)-$(EVR,recursive):SFP-Speed-Link-I") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVR,recursive):SFP, PROP=Link Speed")
  field(DESC, "Tranceiver Line Rate")
  field(HIGH, "5000")
  field(HSV , "MAJOR")
  field(LOW , "3000")
  field(LSV , "MAJOR")
  field(LOLO, "-0.1")
  field(LLSV, "INVALID")
  field(EGU , "Mb/s")
  field(PREC, "0")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):SFP-Vendor-I")
}

record(stringin, "$(SYS,recursive)-$(EVR,recursive):SFP-Vendor-I") {
  field(DTYP, "Obj Prop string")
  field(DESC, "Vendor name")
  field(INP , "@OBJ=$(EVR,recursive):SFP, PROP=Vendor")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):SFP-Part-I")
}

record(stringin, "$(SYS,recursive)-$(EVR,recursive):SFP-Part-I") {
  field(DTYP, "Obj Prop string")
  field(DESC, "Vendor part number")
  field(INP , "@OBJ=$(EVR,recursive):SFP, PROP=Part")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):SFP-Rev-I")
}

record(stringin, "$(SYS,recursive)-$(EVR,recursive):SFP-Rev-I") {
  field(DTYP, "Obj Prop string")
  field(DESC, "Vendor part revision")
  field(INP , "@OBJ=$(EVR,recursive):SFP, PROP=Rev")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):SFP-Serial-I")
}

record(stringin, "$(SYS,recursive)-$(EVR,recursive):SFP-Serial-I") {
  field(DTYP, "Obj Prop string")
  field(DESC, "SFP serial number")
  field(INP , "@OBJ=$(EVR,recursive):SFP, PROP=Serial")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):SFP-Date-Manu-I")
}

record(stringin, "$(SYS,recursive)-$(EVR,recursive):SFP-Date-Manu-I") {
  field(DTYP, "Obj Prop string")
  field(DESC, "Manufactored date")
  field(INP , "@OBJ=$(EVR,recursive):SFP, PROP=Date")
}
# Record set for an EVR's programable frequency divider
#
# Macros:
#  SYS = System name
#  EVR = EVR devObj name
#  OBJ = Prefix for devObj name
#  IDX = ID # corresponding to output mapping codes
#  MAX = Maximum division

record(longout, "$(SYS,recursive)-$(EVR,recursive):PS0-Div-SP") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "Prescaler 0")
  field( OUT , "@OBJ=$(EVR,recursive):PS0, PROP=Divide")
  field( PINI, "YES")
  field( VAL , "$(PS0-Div-SP=2,undefined)") #Integer divisor between the Event Clock and the sub-unit output.
  field( HOPR, "0xffff")
  field( LOPR, "2")
  field( DRVH, "0xffff")
  field( DRVL, "2")
  field( FLNK, "$(SYS,recursive)-$(EVR,recursive):PS0-Rate-I")
  info(autosaveFields_pass0, "VAL")
}

record(calc, "$(SYS,recursive)-$(EVR,recursive):PS0-Rate-I") {
  field(DESC, "Output frequency")
  field(INPA, "$(SYS,recursive)-$(EVR,recursive):PS0-Div-SP NPP")
  field(INPB, "$(SYS,recursive)-$(EVR,recursive):Link-Clk-I CP")
  field(CALC, "B/A")
  field(EGU, "MHz")
  field(PREC, "2")
}
# Record set for an EVR's programable frequency divider
#
# Macros:
#  SYS = System name
#  EVR = EVR devObj name
#  OBJ = Prefix for devObj name
#  IDX = ID # corresponding to output mapping codes
#  MAX = Maximum division

record(longout, "$(SYS,recursive)-$(EVR,recursive):PS1-Div-SP") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "Prescaler 1")
  field( OUT , "@OBJ=$(EVR,recursive):PS1, PROP=Divide")
  field( PINI, "YES")
  field( VAL , "$(PS1-Div-SP=2,undefined)") #Integer divisor between the Event Clock and the sub-unit output.
  field( HOPR, "0xffff")
  field( LOPR, "2")
  field( DRVH, "0xffff")
  field( DRVL, "2")
  field( FLNK, "$(SYS,recursive)-$(EVR,recursive):PS1-Rate-I")
  info(autosaveFields_pass0, "VAL")
}

record(calc, "$(SYS,recursive)-$(EVR,recursive):PS1-Rate-I") {
  field(DESC, "Output frequency")
  field(INPA, "$(SYS,recursive)-$(EVR,recursive):PS1-Div-SP NPP")
  field(INPB, "$(SYS,recursive)-$(EVR,recursive):Link-Clk-I CP")
  field(CALC, "B/A")
  field(EGU, "MHz")
  field(PREC, "2")
}
# Record set for an EVR's programable frequency divider
#
# Macros:
#  SYS = System name
#  EVR = EVR devObj name
#  OBJ = Prefix for devObj name
#  IDX = ID # corresponding to output mapping codes
#  MAX = Maximum division

record(longout, "$(SYS,recursive)-$(EVR,recursive):PS2-Div-SP") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "Prescaler 2")
  field( OUT , "@OBJ=$(EVR,recursive):PS2, PROP=Divide")
  field( PINI, "YES")
  field( VAL , "$(PS2-Div-SP=2,undefined)") #Integer divisor between the Event Clock and the sub-unit output.
  field( HOPR, "0xffff")
  field( LOPR, "2")
  field( DRVH, "0xffff")
  field( DRVL, "2")
  field( FLNK, "$(SYS,recursive)-$(EVR,recursive):PS2-Rate-I")
  info(autosaveFields_pass0, "VAL")
}

record(calc, "$(SYS,recursive)-$(EVR,recursive):PS2-Rate-I") {
  field(DESC, "Output frequency")
  field(INPA, "$(SYS,recursive)-$(EVR,recursive):PS2-Div-SP NPP")
  field(INPB, "$(SYS,recursive)-$(EVR,recursive):Link-Clk-I CP")
  field(CALC, "B/A")
  field(EGU, "MHz")
  field(PREC, "2")
}
# Record set for an EVR's programmable pulse generator
#
# Macros:
#  SYS = System name
#  EVR = EVR devObj
#  OBJ = devObj name prefix
#  ID = Pulse gen ID number (corresponds to output mappings)
#  DMAX = Max delay setting
#  WMAX = Max width setting
#  PMAX = Max prescaler (divider) setting
#  NOPS = 0 - enable prescaler, 1 - disable prescaler

record(bo, "$(SYS,recursive)-$(EVR,recursive):Pul0-Ena-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVR,recursive):Pul0, PROP=Enable")
  field(PINI, "YES")
  field(VAL , "$(Pul0-Ena-Sel=1,undefined)")
  field(MASK, "1")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(SYS,recursive)-$(EVR,recursive):Pul0-Polarity-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVR,recursive):Pul0, PROP=Polarity")
  field(PINI, "YES")
  field(VAL , "$(Pul0-Polarity-Sel=0,undefined)")
  field(MASK, "1")
  field(ZNAM, "Active High")
  field(ONAM, "Active Low")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(SYS,recursive)-$(EVR,recursive):Pul0-Delay-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVR,recursive):Pul0, PROP=Delay")
  field(PINI, "YES")
  field(DESC, "Pulse Generator 0")
  field(VAL , "$(Pul0-Delay-SP=0,undefined)")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(LOPR, "0")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul0-Delay-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS,recursive)-$(EVR,recursive):Pul0-Delay-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVR,recursive):Pul0, PROP=Delay")
  field(VAL , 0)
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul0-Delay-Raw-RB")
}

record(longin, "$(SYS,recursive)-$(EVR,recursive):Pul0-Delay-Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVR,recursive):Pul0, PROP=Delay")
  field(EGU , "cnts")
  field(HOPR, "0xffffffff")
  field(LOPR, "0")
  field(HIGH, "0xffffffff")
  field( HSV, "MAJOR")
}

record(ao, "$(SYS,recursive)-$(EVR,recursive):Pul0-Width-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVR,recursive):Pul0, PROP=Width")
  field(PINI, "YES")
  field(DESC, "Pulser pulse width")
  field(VAL , "$(Pul0-Width-SP=0,undefined)")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(LOPR, "0")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul0-Width-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS,recursive)-$(EVR,recursive):Pul0-Width-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVR,recursive):Pul0, PROP=Width")
  field(VAL , 0)
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul0-Width-Raw-RB")
}

record(longin, "$(SYS,recursive)-$(EVR,recursive):Pul0-Width-Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVR,recursive):Pul0, PROP=Width")
  field(PINI, "YES")
  field(HOPR, "0xffffffff")
  field(LOPR, "0")
  field(HIGH, "0xffffffff")
  field( HSV, "MAJOR")
}

record(longout, "$(SYS,recursive)-$(EVR,recursive):Pul0-Prescaler-SP") {
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVR,recursive):Pul0, PROP=Prescaler")
  field(DESC, "Pulser prescaler")
  field(PINI, "YES")
  field(HOPR, "0xffff")
  field(LOPR, "1")
  field(DRVH, "0xffff")
  field(DRVL, "1")
  field(VAL , "$(Pul0-Prescaler-SP=1,undefined)")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul0-Prescaler-RB")
  field(DISP, "0")
  field(DISA, "0")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "$(SYS,recursive)-$(EVR,recursive):Pul0-Prescaler-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVR,recursive):Pul0, PROP=Prescaler")
  field(HOPR, "0xffff")
  field(LOPR, "1")
  field(HIGH, "0xffff")
  field( HSV, "MAJOR")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul0-Res-I")
}

record(calc, "$(SYS,recursive)-$(EVR,recursive):Pul0-Res-I") {
  field(DESC, "Resolution")
  field(INPA, "$(SYS,recursive)-$(EVR,recursive):Pul0-Prescaler-RB MS")
  field(INPB, "$(SYS,recursive)-$(EVR,recursive):Link-ClkPeriod-I CP")
  field(CALC, "1e9*(A?A:1)*B")
  field(EGU, "ns")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul0-Res-FO_")
}

record(fanout, "$(SYS,recursive)-$(EVR,recursive):Pul0-Res-FO_") {
  field(DESC, "Clock change resync")
  field(LNK1, "$(SYS,recursive)-$(EVR,recursive):Pul0-Delay-SP")
  field(LNK2, "$(SYS,recursive)-$(EVR,recursive):Pul0-Width-SP")
}
# Record set for an EVR's programmable pulse generator
#
# Macros:
#  SYS = System name
#  EVR = EVR devObj
#  OBJ = devObj name prefix
#  ID = Pulse gen ID number (corresponds to output mappings)
#  DMAX = Max delay setting
#  WMAX = Max width setting
#  PMAX = Max prescaler (divider) setting
#  NOPS = 0 - enable prescaler, 1 - disable prescaler

record(bo, "$(SYS,recursive)-$(EVR,recursive):Pul1-Ena-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVR,recursive):Pul1, PROP=Enable")
  field(PINI, "YES")
  field(VAL , "$(Pul1-Ena-Sel=1,undefined)")
  field(MASK, "1")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(SYS,recursive)-$(EVR,recursive):Pul1-Polarity-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVR,recursive):Pul1, PROP=Polarity")
  field(PINI, "YES")
  field(VAL , "$(Pul1-Polarity-Sel=0,undefined)")
  field(MASK, "1")
  field(ZNAM, "Active High")
  field(ONAM, "Active Low")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(SYS,recursive)-$(EVR,recursive):Pul1-Delay-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVR,recursive):Pul1, PROP=Delay")
  field(PINI, "YES")
  field(DESC, "Pulse Generator 1")
  field(VAL , "$(Pul1-Delay-SP=0,undefined)")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(LOPR, "0")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul1-Delay-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS,recursive)-$(EVR,recursive):Pul1-Delay-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVR,recursive):Pul1, PROP=Delay")
  field(VAL , 0)
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul1-Delay-Raw-RB")
}

record(longin, "$(SYS,recursive)-$(EVR,recursive):Pul1-Delay-Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVR,recursive):Pul1, PROP=Delay")
  field(EGU , "cnts")
  field(HOPR, "0xffffffff")
  field(LOPR, "0")
  field(HIGH, "0xffffffff")
  field( HSV, "MAJOR")
}

record(ao, "$(SYS,recursive)-$(EVR,recursive):Pul1-Width-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVR,recursive):Pul1, PROP=Width")
  field(PINI, "YES")
  field(DESC, "Pulser pulse width")
  field(VAL , "$(Pul1-Width-SP=0,undefined)")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(LOPR, "0")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul1-Width-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS,recursive)-$(EVR,recursive):Pul1-Width-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVR,recursive):Pul1, PROP=Width")
  field(VAL , 0)
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul1-Width-Raw-RB")
}

record(longin, "$(SYS,recursive)-$(EVR,recursive):Pul1-Width-Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVR,recursive):Pul1, PROP=Width")
  field(PINI, "YES")
  field(HOPR, "0xffffffff")
  field(LOPR, "0")
  field(HIGH, "0xffffffff")
  field( HSV, "MAJOR")
}

record(longout, "$(SYS,recursive)-$(EVR,recursive):Pul1-Prescaler-SP") {
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVR,recursive):Pul1, PROP=Prescaler")
  field(DESC, "Pulser prescaler")
  field(PINI, "YES")
  field(HOPR, "0xffff")
  field(LOPR, "1")
  field(DRVH, "0xffff")
  field(DRVL, "1")
  field(VAL , "$(Pul1-Prescaler-SP=1,undefined)")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul1-Prescaler-RB")
  field(DISP, "0")
  field(DISA, "0")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "$(SYS,recursive)-$(EVR,recursive):Pul1-Prescaler-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVR,recursive):Pul1, PROP=Prescaler")
  field(HOPR, "0xffff")
  field(LOPR, "1")
  field(HIGH, "0xffff")
  field( HSV, "MAJOR")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul1-Res-I")
}

record(calc, "$(SYS,recursive)-$(EVR,recursive):Pul1-Res-I") {
  field(DESC, "Resolution")
  field(INPA, "$(SYS,recursive)-$(EVR,recursive):Pul1-Prescaler-RB MS")
  field(INPB, "$(SYS,recursive)-$(EVR,recursive):Link-ClkPeriod-I CP")
  field(CALC, "1e9*(A?A:1)*B")
  field(EGU, "ns")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul1-Res-FO_")
}

record(fanout, "$(SYS,recursive)-$(EVR,recursive):Pul1-Res-FO_") {
  field(DESC, "Clock change resync")
  field(LNK1, "$(SYS,recursive)-$(EVR,recursive):Pul1-Delay-SP")
  field(LNK2, "$(SYS,recursive)-$(EVR,recursive):Pul1-Width-SP")
}
# Record set for an EVR's programmable pulse generator
#
# Macros:
#  SYS = System name
#  EVR = EVR devObj
#  OBJ = devObj name prefix
#  ID = Pulse gen ID number (corresponds to output mappings)
#  DMAX = Max delay setting
#  WMAX = Max width setting
#  PMAX = Max prescaler (divider) setting
#  NOPS = 0 - enable prescaler, 1 - disable prescaler

record(bo, "$(SYS,recursive)-$(EVR,recursive):Pul2-Ena-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVR,recursive):Pul2, PROP=Enable")
  field(PINI, "YES")
  field(VAL , "$(Pul2-Ena-Sel=1,undefined)")
  field(MASK, "1")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(SYS,recursive)-$(EVR,recursive):Pul2-Polarity-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVR,recursive):Pul2, PROP=Polarity")
  field(PINI, "YES")
  field(VAL , "$(Pul2-Polarity-Sel=0,undefined)")
  field(MASK, "1")
  field(ZNAM, "Active High")
  field(ONAM, "Active Low")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(SYS,recursive)-$(EVR,recursive):Pul2-Delay-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVR,recursive):Pul2, PROP=Delay")
  field(PINI, "YES")
  field(DESC, "Pulse Generator 2")
  field(VAL , "$(Pul2-Delay-SP=0,undefined)")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(LOPR, "0")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul2-Delay-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS,recursive)-$(EVR,recursive):Pul2-Delay-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVR,recursive):Pul2, PROP=Delay")
  field(VAL , 0)
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul2-Delay-Raw-RB")
}

record(longin, "$(SYS,recursive)-$(EVR,recursive):Pul2-Delay-Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVR,recursive):Pul2, PROP=Delay")
  field(EGU , "cnts")
  field(HOPR, "0xffffffff")
  field(LOPR, "0")
  field(HIGH, "0xffffffff")
  field( HSV, "MAJOR")
}

record(ao, "$(SYS,recursive)-$(EVR,recursive):Pul2-Width-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVR,recursive):Pul2, PROP=Width")
  field(PINI, "YES")
  field(DESC, "Pulser pulse width")
  field(VAL , "$(Pul2-Width-SP=0,undefined)")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(LOPR, "0")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul2-Width-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS,recursive)-$(EVR,recursive):Pul2-Width-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVR,recursive):Pul2, PROP=Width")
  field(VAL , 0)
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul2-Width-Raw-RB")
}

record(longin, "$(SYS,recursive)-$(EVR,recursive):Pul2-Width-Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVR,recursive):Pul2, PROP=Width")
  field(PINI, "YES")
  field(HOPR, "0xffffffff")
  field(LOPR, "0")
  field(HIGH, "0xffffffff")
  field( HSV, "MAJOR")
}

record(longout, "$(SYS,recursive)-$(EVR,recursive):Pul2-Prescaler-SP") {
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVR,recursive):Pul2, PROP=Prescaler")
  field(DESC, "Pulser prescaler")
  field(PINI, "YES")
  field(HOPR, "0xffff")
  field(LOPR, "1")
  field(DRVH, "0xffff")
  field(DRVL, "1")
  field(VAL , "$(Pul2-Prescaler-SP=1,undefined)")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul2-Prescaler-RB")
  field(DISP, "0")
  field(DISA, "0")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "$(SYS,recursive)-$(EVR,recursive):Pul2-Prescaler-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVR,recursive):Pul2, PROP=Prescaler")
  field(HOPR, "0xffff")
  field(LOPR, "1")
  field(HIGH, "0xffff")
  field( HSV, "MAJOR")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul2-Res-I")
}

record(calc, "$(SYS,recursive)-$(EVR,recursive):Pul2-Res-I") {
  field(DESC, "Resolution")
  field(INPA, "$(SYS,recursive)-$(EVR,recursive):Pul2-Prescaler-RB MS")
  field(INPB, "$(SYS,recursive)-$(EVR,recursive):Link-ClkPeriod-I CP")
  field(CALC, "1e9*(A?A:1)*B")
  field(EGU, "ns")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul2-Res-FO_")
}

record(fanout, "$(SYS,recursive)-$(EVR,recursive):Pul2-Res-FO_") {
  field(DESC, "Clock change resync")
  field(LNK1, "$(SYS,recursive)-$(EVR,recursive):Pul2-Delay-SP")
  field(LNK2, "$(SYS,recursive)-$(EVR,recursive):Pul2-Width-SP")
}
# Record set for an EVR's programmable pulse generator
#
# Macros:
#  SYS = System name
#  EVR = EVR devObj
#  OBJ = devObj name prefix
#  ID = Pulse gen ID number (corresponds to output mappings)
#  DMAX = Max delay setting
#  WMAX = Max width setting
#  PMAX = Max prescaler (divider) setting
#  NOPS = 0 - enable prescaler, 1 - disable prescaler

record(bo, "$(SYS,recursive)-$(EVR,recursive):Pul3-Ena-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVR,recursive):Pul3, PROP=Enable")
  field(PINI, "YES")
  field(VAL , "$(Pul3-Ena-Sel=1,undefined)")
  field(MASK, "1")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(SYS,recursive)-$(EVR,recursive):Pul3-Polarity-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVR,recursive):Pul3, PROP=Polarity")
  field(PINI, "YES")
  field(VAL , "$(Pul3-Polarity-Sel=0,undefined)")
  field(MASK, "1")
  field(ZNAM, "Active High")
  field(ONAM, "Active Low")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(SYS,recursive)-$(EVR,recursive):Pul3-Delay-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVR,recursive):Pul3, PROP=Delay")
  field(PINI, "YES")
  field(DESC, "Pulse Generator 3")
  field(VAL , "$(Pul3-Delay-SP=0,undefined)")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(LOPR, "0")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul3-Delay-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS,recursive)-$(EVR,recursive):Pul3-Delay-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVR,recursive):Pul3, PROP=Delay")
  field(VAL , 0)
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul3-Delay-Raw-RB")
}

record(longin, "$(SYS,recursive)-$(EVR,recursive):Pul3-Delay-Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVR,recursive):Pul3, PROP=Delay")
  field(EGU , "cnts")
  field(HOPR, "0xffffffff")
  field(LOPR, "0")
  field(HIGH, "0xffffffff")
  field( HSV, "MAJOR")
}

record(ao, "$(SYS,recursive)-$(EVR,recursive):Pul3-Width-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVR,recursive):Pul3, PROP=Width")
  field(PINI, "YES")
  field(DESC, "Pulser pulse width")
  field(VAL , "$(Pul3-Width-SP=0,undefined)")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(LOPR, "0")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul3-Width-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS,recursive)-$(EVR,recursive):Pul3-Width-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVR,recursive):Pul3, PROP=Width")
  field(VAL , 0)
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul3-Width-Raw-RB")
}

record(longin, "$(SYS,recursive)-$(EVR,recursive):Pul3-Width-Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVR,recursive):Pul3, PROP=Width")
  field(PINI, "YES")
  field(HOPR, "0xffffffff")
  field(LOPR, "0")
  field(HIGH, "0xffffffff")
  field( HSV, "MAJOR")
}

record(longout, "$(SYS,recursive)-$(EVR,recursive):Pul3-Prescaler-SP") {
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVR,recursive):Pul3, PROP=Prescaler")
  field(DESC, "Pulser prescaler")
  field(PINI, "YES")
  field(HOPR, "0xffff")
  field(LOPR, "1")
  field(DRVH, "0xffff")
  field(DRVL, "1")
  field(VAL , "$(Pul3-Prescaler-SP=1,undefined)")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul3-Prescaler-RB")
  field(DISP, "0")
  field(DISA, "0")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "$(SYS,recursive)-$(EVR,recursive):Pul3-Prescaler-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVR,recursive):Pul3, PROP=Prescaler")
  field(HOPR, "0xffff")
  field(LOPR, "1")
  field(HIGH, "0xffff")
  field( HSV, "MAJOR")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul3-Res-I")
}

record(calc, "$(SYS,recursive)-$(EVR,recursive):Pul3-Res-I") {
  field(DESC, "Resolution")
  field(INPA, "$(SYS,recursive)-$(EVR,recursive):Pul3-Prescaler-RB MS")
  field(INPB, "$(SYS,recursive)-$(EVR,recursive):Link-ClkPeriod-I CP")
  field(CALC, "1e9*(A?A:1)*B")
  field(EGU, "ns")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul3-Res-FO_")
}

record(fanout, "$(SYS,recursive)-$(EVR,recursive):Pul3-Res-FO_") {
  field(DESC, "Clock change resync")
  field(LNK1, "$(SYS,recursive)-$(EVR,recursive):Pul3-Delay-SP")
  field(LNK2, "$(SYS,recursive)-$(EVR,recursive):Pul3-Width-SP")
}
# Record set for an EVR's programmable pulse generator
#
# Macros:
#  SYS = System name
#  EVR = EVR devObj
#  OBJ = devObj name prefix
#  ID = Pulse gen ID number (corresponds to output mappings)
#  DMAX = Max delay setting
#  WMAX = Max width setting
#  PMAX = Max prescaler (divider) setting
#  NOPS = 0 - enable prescaler, 1 - disable prescaler

record(bo, "$(SYS,recursive)-$(EVR,recursive):Pul4-Ena-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVR,recursive):Pul4, PROP=Enable")
  field(PINI, "YES")
  field(VAL , "$(Pul4-Ena-Sel=1,undefined)")
  field(MASK, "1")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(SYS,recursive)-$(EVR,recursive):Pul4-Polarity-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVR,recursive):Pul4, PROP=Polarity")
  field(PINI, "YES")
  field(VAL , "$(Pul4-Polarity-Sel=0,undefined)")
  field(MASK, "1")
  field(ZNAM, "Active High")
  field(ONAM, "Active Low")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(SYS,recursive)-$(EVR,recursive):Pul4-Delay-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVR,recursive):Pul4, PROP=Delay")
  field(PINI, "YES")
  field(DESC, "Pulse Generator 4")
  field(VAL , "$(Pul4-Delay-SP=0,undefined)")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(LOPR, "0")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul4-Delay-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS,recursive)-$(EVR,recursive):Pul4-Delay-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVR,recursive):Pul4, PROP=Delay")
  field(VAL , 0)
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul4-Delay-Raw-RB")
}

record(longin, "$(SYS,recursive)-$(EVR,recursive):Pul4-Delay-Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVR,recursive):Pul4, PROP=Delay")
  field(EGU , "cnts")
  field(HOPR, "0xffffffff")
  field(LOPR, "0")
  field(HIGH, "0xffffffff")
  field( HSV, "MAJOR")
}

record(ao, "$(SYS,recursive)-$(EVR,recursive):Pul4-Width-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVR,recursive):Pul4, PROP=Width")
  field(PINI, "YES")
  field(DESC, "Pulser pulse width")
  field(VAL , "$(Pul4-Width-SP=0,undefined)")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(LOPR, "0")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul4-Width-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS,recursive)-$(EVR,recursive):Pul4-Width-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVR,recursive):Pul4, PROP=Width")
  field(VAL , 0)
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul4-Width-Raw-RB")
}

record(longin, "$(SYS,recursive)-$(EVR,recursive):Pul4-Width-Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVR,recursive):Pul4, PROP=Width")
  field(PINI, "YES")
  field(HOPR, "0xffff")
  field(LOPR, "0")
  field(HIGH, "0xffff")
  field( HSV, "MAJOR")
}

record(longout, "$(SYS,recursive)-$(EVR,recursive):Pul4-Prescaler-SP") {
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVR,recursive):Pul4, PROP=Prescaler")
  field(DESC, "Pulser prescaler")
  field(PINI, "YES")
  field(HOPR, "1")
  field(LOPR, "1")
  field(DRVH, "1")
  field(DRVL, "1")
  field(VAL , "$(Pul4-Prescaler-SP=1,undefined)")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul4-Prescaler-RB")
  field(DISP, "1")
  field(DISA, "1")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "$(SYS,recursive)-$(EVR,recursive):Pul4-Prescaler-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVR,recursive):Pul4, PROP=Prescaler")
  field(HOPR, "1")
  field(LOPR, "1")
  field(HIGH, "1")
  field( HSV, "MAJOR")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul4-Res-I")
}

record(calc, "$(SYS,recursive)-$(EVR,recursive):Pul4-Res-I") {
  field(DESC, "Resolution")
  field(INPA, "$(SYS,recursive)-$(EVR,recursive):Pul4-Prescaler-RB MS")
  field(INPB, "$(SYS,recursive)-$(EVR,recursive):Link-ClkPeriod-I CP")
  field(CALC, "1e9*(A?A:1)*B")
  field(EGU, "ns")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul4-Res-FO_")
}

record(fanout, "$(SYS,recursive)-$(EVR,recursive):Pul4-Res-FO_") {
  field(DESC, "Clock change resync")
  field(LNK1, "$(SYS,recursive)-$(EVR,recursive):Pul4-Delay-SP")
  field(LNK2, "$(SYS,recursive)-$(EVR,recursive):Pul4-Width-SP")
}
# Record set for an EVR's programmable pulse generator
#
# Macros:
#  SYS = System name
#  EVR = EVR devObj
#  OBJ = devObj name prefix
#  ID = Pulse gen ID number (corresponds to output mappings)
#  DMAX = Max delay setting
#  WMAX = Max width setting
#  PMAX = Max prescaler (divider) setting
#  NOPS = 0 - enable prescaler, 1 - disable prescaler

record(bo, "$(SYS,recursive)-$(EVR,recursive):Pul5-Ena-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVR,recursive):Pul5, PROP=Enable")
  field(PINI, "YES")
  field(VAL , "$(Pul5-Ena-Sel=1,undefined)")
  field(MASK, "1")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(SYS,recursive)-$(EVR,recursive):Pul5-Polarity-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVR,recursive):Pul5, PROP=Polarity")
  field(PINI, "YES")
  field(VAL , "$(Pul5-Polarity-Sel=0,undefined)")
  field(MASK, "1")
  field(ZNAM, "Active High")
  field(ONAM, "Active Low")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(SYS,recursive)-$(EVR,recursive):Pul5-Delay-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVR,recursive):Pul5, PROP=Delay")
  field(PINI, "YES")
  field(DESC, "Pulse Generator 5")
  field(VAL , "$(Pul5-Delay-SP=0,undefined)")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(LOPR, "0")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul5-Delay-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS,recursive)-$(EVR,recursive):Pul5-Delay-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVR,recursive):Pul5, PROP=Delay")
  field(VAL , 0)
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul5-Delay-Raw-RB")
}

record(longin, "$(SYS,recursive)-$(EVR,recursive):Pul5-Delay-Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVR,recursive):Pul5, PROP=Delay")
  field(EGU , "cnts")
  field(HOPR, "0xffffffff")
  field(LOPR, "0")
  field(HIGH, "0xffffffff")
  field( HSV, "MAJOR")
}

record(ao, "$(SYS,recursive)-$(EVR,recursive):Pul5-Width-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVR,recursive):Pul5, PROP=Width")
  field(PINI, "YES")
  field(DESC, "Pulser pulse width")
  field(VAL , "$(Pul5-Width-SP=0,undefined)")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(LOPR, "0")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul5-Width-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS,recursive)-$(EVR,recursive):Pul5-Width-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVR,recursive):Pul5, PROP=Width")
  field(VAL , 0)
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul5-Width-Raw-RB")
}

record(longin, "$(SYS,recursive)-$(EVR,recursive):Pul5-Width-Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVR,recursive):Pul5, PROP=Width")
  field(PINI, "YES")
  field(HOPR, "0xffff")
  field(LOPR, "0")
  field(HIGH, "0xffff")
  field( HSV, "MAJOR")
}

record(longout, "$(SYS,recursive)-$(EVR,recursive):Pul5-Prescaler-SP") {
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVR,recursive):Pul5, PROP=Prescaler")
  field(DESC, "Pulser prescaler")
  field(PINI, "YES")
  field(HOPR, "1")
  field(LOPR, "1")
  field(DRVH, "1")
  field(DRVL, "1")
  field(VAL , "$(Pul5-Prescaler-SP=1,undefined)")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul5-Prescaler-RB")
  field(DISP, "1")
  field(DISA, "1")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "$(SYS,recursive)-$(EVR,recursive):Pul5-Prescaler-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVR,recursive):Pul5, PROP=Prescaler")
  field(HOPR, "1")
  field(LOPR, "1")
  field(HIGH, "1")
  field( HSV, "MAJOR")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul5-Res-I")
}

record(calc, "$(SYS,recursive)-$(EVR,recursive):Pul5-Res-I") {
  field(DESC, "Resolution")
  field(INPA, "$(SYS,recursive)-$(EVR,recursive):Pul5-Prescaler-RB MS")
  field(INPB, "$(SYS,recursive)-$(EVR,recursive):Link-ClkPeriod-I CP")
  field(CALC, "1e9*(A?A:1)*B")
  field(EGU, "ns")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul5-Res-FO_")
}

record(fanout, "$(SYS,recursive)-$(EVR,recursive):Pul5-Res-FO_") {
  field(DESC, "Clock change resync")
  field(LNK1, "$(SYS,recursive)-$(EVR,recursive):Pul5-Delay-SP")
  field(LNK2, "$(SYS,recursive)-$(EVR,recursive):Pul5-Width-SP")
}
# Record set for an EVR's programmable pulse generator
#
# Macros:
#  SYS = System name
#  EVR = EVR devObj
#  OBJ = devObj name prefix
#  ID = Pulse gen ID number (corresponds to output mappings)
#  DMAX = Max delay setting
#  WMAX = Max width setting
#  PMAX = Max prescaler (divider) setting
#  NOPS = 0 - enable prescaler, 1 - disable prescaler

record(bo, "$(SYS,recursive)-$(EVR,recursive):Pul6-Ena-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVR,recursive):Pul6, PROP=Enable")
  field(PINI, "YES")
  field(VAL , "$(Pul6-Ena-Sel=1,undefined)")
  field(MASK, "1")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(SYS,recursive)-$(EVR,recursive):Pul6-Polarity-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVR,recursive):Pul6, PROP=Polarity")
  field(PINI, "YES")
  field(VAL , "$(Pul6-Polarity-Sel=0,undefined)")
  field(MASK, "1")
  field(ZNAM, "Active High")
  field(ONAM, "Active Low")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(SYS,recursive)-$(EVR,recursive):Pul6-Delay-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVR,recursive):Pul6, PROP=Delay")
  field(PINI, "YES")
  field(DESC, "Pulse Generator 6")
  field(VAL , "$(Pul6-Delay-SP=0,undefined)")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(LOPR, "0")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul6-Delay-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS,recursive)-$(EVR,recursive):Pul6-Delay-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVR,recursive):Pul6, PROP=Delay")
  field(VAL , 0)
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul6-Delay-Raw-RB")
}

record(longin, "$(SYS,recursive)-$(EVR,recursive):Pul6-Delay-Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVR,recursive):Pul6, PROP=Delay")
  field(EGU , "cnts")
  field(HOPR, "0xffffffff")
  field(LOPR, "0")
  field(HIGH, "0xffffffff")
  field( HSV, "MAJOR")
}

record(ao, "$(SYS,recursive)-$(EVR,recursive):Pul6-Width-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVR,recursive):Pul6, PROP=Width")
  field(PINI, "YES")
  field(DESC, "Pulser pulse width")
  field(VAL , "$(Pul6-Width-SP=0,undefined)")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(LOPR, "0")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul6-Width-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS,recursive)-$(EVR,recursive):Pul6-Width-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVR,recursive):Pul6, PROP=Width")
  field(VAL , 0)
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul6-Width-Raw-RB")
}

record(longin, "$(SYS,recursive)-$(EVR,recursive):Pul6-Width-Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVR,recursive):Pul6, PROP=Width")
  field(PINI, "YES")
  field(HOPR, "0xffff")
  field(LOPR, "0")
  field(HIGH, "0xffff")
  field( HSV, "MAJOR")
}

record(longout, "$(SYS,recursive)-$(EVR,recursive):Pul6-Prescaler-SP") {
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVR,recursive):Pul6, PROP=Prescaler")
  field(DESC, "Pulser prescaler")
  field(PINI, "YES")
  field(HOPR, "1")
  field(LOPR, "1")
  field(DRVH, "1")
  field(DRVL, "1")
  field(VAL , "$(Pul6-Prescaler-SP=1,undefined)")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul6-Prescaler-RB")
  field(DISP, "1")
  field(DISA, "1")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "$(SYS,recursive)-$(EVR,recursive):Pul6-Prescaler-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVR,recursive):Pul6, PROP=Prescaler")
  field(HOPR, "1")
  field(LOPR, "1")
  field(HIGH, "1")
  field( HSV, "MAJOR")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul6-Res-I")
}

record(calc, "$(SYS,recursive)-$(EVR,recursive):Pul6-Res-I") {
  field(DESC, "Resolution")
  field(INPA, "$(SYS,recursive)-$(EVR,recursive):Pul6-Prescaler-RB MS")
  field(INPB, "$(SYS,recursive)-$(EVR,recursive):Link-ClkPeriod-I CP")
  field(CALC, "1e9*(A?A:1)*B")
  field(EGU, "ns")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul6-Res-FO_")
}

record(fanout, "$(SYS,recursive)-$(EVR,recursive):Pul6-Res-FO_") {
  field(DESC, "Clock change resync")
  field(LNK1, "$(SYS,recursive)-$(EVR,recursive):Pul6-Delay-SP")
  field(LNK2, "$(SYS,recursive)-$(EVR,recursive):Pul6-Width-SP")
}
# Record set for an EVR's programmable pulse generator
#
# Macros:
#  SYS = System name
#  EVR = EVR devObj
#  OBJ = devObj name prefix
#  ID = Pulse gen ID number (corresponds to output mappings)
#  DMAX = Max delay setting
#  WMAX = Max width setting
#  PMAX = Max prescaler (divider) setting
#  NOPS = 0 - enable prescaler, 1 - disable prescaler

record(bo, "$(SYS,recursive)-$(EVR,recursive):Pul7-Ena-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVR,recursive):Pul7, PROP=Enable")
  field(PINI, "YES")
  field(VAL , "$(Pul7-Ena-Sel=1,undefined)")
  field(MASK, "1")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(SYS,recursive)-$(EVR,recursive):Pul7-Polarity-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVR,recursive):Pul7, PROP=Polarity")
  field(PINI, "YES")
  field(VAL , "$(Pul7-Polarity-Sel=0,undefined)")
  field(MASK, "1")
  field(ZNAM, "Active High")
  field(ONAM, "Active Low")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(SYS,recursive)-$(EVR,recursive):Pul7-Delay-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVR,recursive):Pul7, PROP=Delay")
  field(PINI, "YES")
  field(DESC, "Pulse Generator 7")
  field(VAL , "$(Pul7-Delay-SP=0,undefined)")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(LOPR, "0")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul7-Delay-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS,recursive)-$(EVR,recursive):Pul7-Delay-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVR,recursive):Pul7, PROP=Delay")
  field(VAL , 0)
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul7-Delay-Raw-RB")
}

record(longin, "$(SYS,recursive)-$(EVR,recursive):Pul7-Delay-Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVR,recursive):Pul7, PROP=Delay")
  field(EGU , "cnts")
  field(HOPR, "0xffffffff")
  field(LOPR, "0")
  field(HIGH, "0xffffffff")
  field( HSV, "MAJOR")
}

record(ao, "$(SYS,recursive)-$(EVR,recursive):Pul7-Width-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVR,recursive):Pul7, PROP=Width")
  field(PINI, "YES")
  field(DESC, "Pulser pulse width")
  field(VAL , "$(Pul7-Width-SP=0,undefined)")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(LOPR, "0")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul7-Width-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS,recursive)-$(EVR,recursive):Pul7-Width-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVR,recursive):Pul7, PROP=Width")
  field(VAL , 0)
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul7-Width-Raw-RB")
}

record(longin, "$(SYS,recursive)-$(EVR,recursive):Pul7-Width-Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVR,recursive):Pul7, PROP=Width")
  field(PINI, "YES")
  field(HOPR, "0xffff")
  field(LOPR, "0")
  field(HIGH, "0xffff")
  field( HSV, "MAJOR")
}

record(longout, "$(SYS,recursive)-$(EVR,recursive):Pul7-Prescaler-SP") {
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVR,recursive):Pul7, PROP=Prescaler")
  field(DESC, "Pulser prescaler")
  field(PINI, "YES")
  field(HOPR, "1")
  field(LOPR, "1")
  field(DRVH, "1")
  field(DRVL, "1")
  field(VAL , "$(Pul7-Prescaler-SP=1,undefined)")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul7-Prescaler-RB")
  field(DISP, "1")
  field(DISA, "1")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "$(SYS,recursive)-$(EVR,recursive):Pul7-Prescaler-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVR,recursive):Pul7, PROP=Prescaler")
  field(HOPR, "1")
  field(LOPR, "1")
  field(HIGH, "1")
  field( HSV, "MAJOR")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul7-Res-I")
}

record(calc, "$(SYS,recursive)-$(EVR,recursive):Pul7-Res-I") {
  field(DESC, "Resolution")
  field(INPA, "$(SYS,recursive)-$(EVR,recursive):Pul7-Prescaler-RB MS")
  field(INPB, "$(SYS,recursive)-$(EVR,recursive):Link-ClkPeriod-I CP")
  field(CALC, "1e9*(A?A:1)*B")
  field(EGU, "ns")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul7-Res-FO_")
}

record(fanout, "$(SYS,recursive)-$(EVR,recursive):Pul7-Res-FO_") {
  field(DESC, "Clock change resync")
  field(LNK1, "$(SYS,recursive)-$(EVR,recursive):Pul7-Delay-SP")
  field(LNK2, "$(SYS,recursive)-$(EVR,recursive):Pul7-Width-SP")
}
# Record set for an EVR's programmable pulse generator
#
# Macros:
#  SYS = System name
#  EVR = EVR devObj
#  OBJ = devObj name prefix
#  ID = Pulse gen ID number (corresponds to output mappings)
#  DMAX = Max delay setting
#  WMAX = Max width setting
#  PMAX = Max prescaler (divider) setting
#  NOPS = 0 - enable prescaler, 1 - disable prescaler

record(bo, "$(SYS,recursive)-$(EVR,recursive):Pul8-Ena-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVR,recursive):Pul8, PROP=Enable")
  field(PINI, "YES")
  field(VAL , "$(Pul8-Ena-Sel=1,undefined)")
  field(MASK, "1")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(SYS,recursive)-$(EVR,recursive):Pul8-Polarity-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVR,recursive):Pul8, PROP=Polarity")
  field(PINI, "YES")
  field(VAL , "$(Pul8-Polarity-Sel=0,undefined)")
  field(MASK, "1")
  field(ZNAM, "Active High")
  field(ONAM, "Active Low")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(SYS,recursive)-$(EVR,recursive):Pul8-Delay-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVR,recursive):Pul8, PROP=Delay")
  field(PINI, "YES")
  field(DESC, "Pulse Generator 8")
  field(VAL , "$(Pul8-Delay-SP=0,undefined)")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(LOPR, "0")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul8-Delay-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS,recursive)-$(EVR,recursive):Pul8-Delay-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVR,recursive):Pul8, PROP=Delay")
  field(VAL , 0)
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul8-Delay-Raw-RB")
}

record(longin, "$(SYS,recursive)-$(EVR,recursive):Pul8-Delay-Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVR,recursive):Pul8, PROP=Delay")
  field(EGU , "cnts")
  field(HOPR, "0xffffffff")
  field(LOPR, "0")
  field(HIGH, "0xffffffff")
  field( HSV, "MAJOR")
}

record(ao, "$(SYS,recursive)-$(EVR,recursive):Pul8-Width-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVR,recursive):Pul8, PROP=Width")
  field(PINI, "YES")
  field(DESC, "Pulser pulse width")
  field(VAL , "$(Pul8-Width-SP=0,undefined)")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(LOPR, "0")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul8-Width-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS,recursive)-$(EVR,recursive):Pul8-Width-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVR,recursive):Pul8, PROP=Width")
  field(VAL , 0)
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul8-Width-Raw-RB")
}

record(longin, "$(SYS,recursive)-$(EVR,recursive):Pul8-Width-Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVR,recursive):Pul8, PROP=Width")
  field(PINI, "YES")
  field(HOPR, "0xffff")
  field(LOPR, "0")
  field(HIGH, "0xffff")
  field( HSV, "MAJOR")
}

record(longout, "$(SYS,recursive)-$(EVR,recursive):Pul8-Prescaler-SP") {
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVR,recursive):Pul8, PROP=Prescaler")
  field(DESC, "Pulser prescaler")
  field(PINI, "YES")
  field(HOPR, "1")
  field(LOPR, "1")
  field(DRVH, "1")
  field(DRVL, "1")
  field(VAL , "$(Pul8-Prescaler-SP=1,undefined)")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul8-Prescaler-RB")
  field(DISP, "1")
  field(DISA, "1")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "$(SYS,recursive)-$(EVR,recursive):Pul8-Prescaler-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVR,recursive):Pul8, PROP=Prescaler")
  field(HOPR, "1")
  field(LOPR, "1")
  field(HIGH, "1")
  field( HSV, "MAJOR")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul8-Res-I")
}

record(calc, "$(SYS,recursive)-$(EVR,recursive):Pul8-Res-I") {
  field(DESC, "Resolution")
  field(INPA, "$(SYS,recursive)-$(EVR,recursive):Pul8-Prescaler-RB MS")
  field(INPB, "$(SYS,recursive)-$(EVR,recursive):Link-ClkPeriod-I CP")
  field(CALC, "1e9*(A?A:1)*B")
  field(EGU, "ns")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul8-Res-FO_")
}

record(fanout, "$(SYS,recursive)-$(EVR,recursive):Pul8-Res-FO_") {
  field(DESC, "Clock change resync")
  field(LNK1, "$(SYS,recursive)-$(EVR,recursive):Pul8-Delay-SP")
  field(LNK2, "$(SYS,recursive)-$(EVR,recursive):Pul8-Width-SP")
}
# Record set for an EVR's programmable pulse generator
#
# Macros:
#  SYS = System name
#  EVR = EVR devObj
#  OBJ = devObj name prefix
#  ID = Pulse gen ID number (corresponds to output mappings)
#  DMAX = Max delay setting
#  WMAX = Max width setting
#  PMAX = Max prescaler (divider) setting
#  NOPS = 0 - enable prescaler, 1 - disable prescaler

record(bo, "$(SYS,recursive)-$(EVR,recursive):Pul9-Ena-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVR,recursive):Pul9, PROP=Enable")
  field(PINI, "YES")
  field(VAL , "$(Pul9-Ena-Sel=1,undefined)")
  field(MASK, "1")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(SYS,recursive)-$(EVR,recursive):Pul9-Polarity-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVR,recursive):Pul9, PROP=Polarity")
  field(PINI, "YES")
  field(VAL , "$(Pul9-Polarity-Sel=0,undefined)")
  field(MASK, "1")
  field(ZNAM, "Active High")
  field(ONAM, "Active Low")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(SYS,recursive)-$(EVR,recursive):Pul9-Delay-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVR,recursive):Pul9, PROP=Delay")
  field(PINI, "YES")
  field(DESC, "Pulse Generator 9")
  field(VAL , "$(Pul9-Delay-SP=0,undefined)")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(LOPR, "0")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul9-Delay-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS,recursive)-$(EVR,recursive):Pul9-Delay-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVR,recursive):Pul9, PROP=Delay")
  field(VAL , 0)
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul9-Delay-Raw-RB")
}

record(longin, "$(SYS,recursive)-$(EVR,recursive):Pul9-Delay-Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVR,recursive):Pul9, PROP=Delay")
  field(EGU , "cnts")
  field(HOPR, "0xffffffff")
  field(LOPR, "0")
  field(HIGH, "0xffffffff")
  field( HSV, "MAJOR")
}

record(ao, "$(SYS,recursive)-$(EVR,recursive):Pul9-Width-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVR,recursive):Pul9, PROP=Width")
  field(PINI, "YES")
  field(DESC, "Pulser pulse width")
  field(VAL , "$(Pul9-Width-SP=0,undefined)")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(LOPR, "0")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul9-Width-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS,recursive)-$(EVR,recursive):Pul9-Width-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVR,recursive):Pul9, PROP=Width")
  field(VAL , 0)
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul9-Width-Raw-RB")
}

record(longin, "$(SYS,recursive)-$(EVR,recursive):Pul9-Width-Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVR,recursive):Pul9, PROP=Width")
  field(PINI, "YES")
  field(HOPR, "0xffff")
  field(LOPR, "0")
  field(HIGH, "0xffff")
  field( HSV, "MAJOR")
}

record(longout, "$(SYS,recursive)-$(EVR,recursive):Pul9-Prescaler-SP") {
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVR,recursive):Pul9, PROP=Prescaler")
  field(DESC, "Pulser prescaler")
  field(PINI, "YES")
  field(HOPR, "1")
  field(LOPR, "1")
  field(DRVH, "1")
  field(DRVL, "1")
  field(VAL , "$(Pul9-Prescaler-SP=1,undefined)")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul9-Prescaler-RB")
  field(DISP, "1")
  field(DISA, "1")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "$(SYS,recursive)-$(EVR,recursive):Pul9-Prescaler-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVR,recursive):Pul9, PROP=Prescaler")
  field(HOPR, "1")
  field(LOPR, "1")
  field(HIGH, "1")
  field( HSV, "MAJOR")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul9-Res-I")
}

record(calc, "$(SYS,recursive)-$(EVR,recursive):Pul9-Res-I") {
  field(DESC, "Resolution")
  field(INPA, "$(SYS,recursive)-$(EVR,recursive):Pul9-Prescaler-RB MS")
  field(INPB, "$(SYS,recursive)-$(EVR,recursive):Link-ClkPeriod-I CP")
  field(CALC, "1e9*(A?A:1)*B")
  field(EGU, "ns")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul9-Res-FO_")
}

record(fanout, "$(SYS,recursive)-$(EVR,recursive):Pul9-Res-FO_") {
  field(DESC, "Clock change resync")
  field(LNK1, "$(SYS,recursive)-$(EVR,recursive):Pul9-Delay-SP")
  field(LNK2, "$(SYS,recursive)-$(EVR,recursive):Pul9-Width-SP")
}
# Record set for an EVR's programmable pulse generator
#
# Macros:
#  SYS = System name
#  EVR = EVR devObj
#  OBJ = devObj name prefix
#  ID = Pulse gen ID number (corresponds to output mappings)
#  DMAX = Max delay setting
#  WMAX = Max width setting
#  PMAX = Max prescaler (divider) setting
#  NOPS = 0 - enable prescaler, 1 - disable prescaler

record(bo, "$(SYS,recursive)-$(EVR,recursive):Pul10-Ena-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVR,recursive):Pul10, PROP=Enable")
  field(PINI, "YES")
  field(VAL , "$(Pul10-Ena-Sel=1,undefined)")
  field(MASK, "1")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(SYS,recursive)-$(EVR,recursive):Pul10-Polarity-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVR,recursive):Pul10, PROP=Polarity")
  field(PINI, "YES")
  field(VAL , "$(Pul10-Polarity-Sel=0,undefined)")
  field(MASK, "1")
  field(ZNAM, "Active High")
  field(ONAM, "Active Low")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(SYS,recursive)-$(EVR,recursive):Pul10-Delay-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVR,recursive):Pul10, PROP=Delay")
  field(PINI, "YES")
  field(DESC, "Pulse Generator 10")
  field(VAL , "$(Pul10-Delay-SP=0,undefined)")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(LOPR, "0")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul10-Delay-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS,recursive)-$(EVR,recursive):Pul10-Delay-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVR,recursive):Pul10, PROP=Delay")
  field(VAL , 0)
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul10-Delay-Raw-RB")
}

record(longin, "$(SYS,recursive)-$(EVR,recursive):Pul10-Delay-Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVR,recursive):Pul10, PROP=Delay")
  field(EGU , "cnts")
  field(HOPR, "0xffffffff")
  field(LOPR, "0")
  field(HIGH, "0xffffffff")
  field( HSV, "MAJOR")
}

record(ao, "$(SYS,recursive)-$(EVR,recursive):Pul10-Width-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVR,recursive):Pul10, PROP=Width")
  field(PINI, "YES")
  field(DESC, "Pulser pulse width")
  field(VAL , "$(Pul10-Width-SP=0,undefined)")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(LOPR, "0")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul10-Width-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS,recursive)-$(EVR,recursive):Pul10-Width-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVR,recursive):Pul10, PROP=Width")
  field(VAL , 0)
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul10-Width-Raw-RB")
}

record(longin, "$(SYS,recursive)-$(EVR,recursive):Pul10-Width-Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVR,recursive):Pul10, PROP=Width")
  field(PINI, "YES")
  field(HOPR, "0xffff")
  field(LOPR, "0")
  field(HIGH, "0xffff")
  field( HSV, "MAJOR")
}

record(longout, "$(SYS,recursive)-$(EVR,recursive):Pul10-Prescaler-SP") {
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVR,recursive):Pul10, PROP=Prescaler")
  field(DESC, "Pulser prescaler")
  field(PINI, "YES")
  field(HOPR, "1")
  field(LOPR, "1")
  field(DRVH, "1")
  field(DRVL, "1")
  field(VAL , "$(Pul10-Prescaler-SP=1,undefined)")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul10-Prescaler-RB")
  field(DISP, "1")
  field(DISA, "1")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "$(SYS,recursive)-$(EVR,recursive):Pul10-Prescaler-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVR,recursive):Pul10, PROP=Prescaler")
  field(HOPR, "1")
  field(LOPR, "1")
  field(HIGH, "1")
  field( HSV, "MAJOR")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul10-Res-I")
}

record(calc, "$(SYS,recursive)-$(EVR,recursive):Pul10-Res-I") {
  field(DESC, "Resolution")
  field(INPA, "$(SYS,recursive)-$(EVR,recursive):Pul10-Prescaler-RB MS")
  field(INPB, "$(SYS,recursive)-$(EVR,recursive):Link-ClkPeriod-I CP")
  field(CALC, "1e9*(A?A:1)*B")
  field(EGU, "ns")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul10-Res-FO_")
}

record(fanout, "$(SYS,recursive)-$(EVR,recursive):Pul10-Res-FO_") {
  field(DESC, "Clock change resync")
  field(LNK1, "$(SYS,recursive)-$(EVR,recursive):Pul10-Delay-SP")
  field(LNK2, "$(SYS,recursive)-$(EVR,recursive):Pul10-Width-SP")
}
# Record set for an EVR's programmable pulse generator
#
# Macros:
#  SYS = System name
#  EVR = EVR devObj
#  OBJ = devObj name prefix
#  ID = Pulse gen ID number (corresponds to output mappings)
#  DMAX = Max delay setting
#  WMAX = Max width setting
#  PMAX = Max prescaler (divider) setting
#  NOPS = 0 - enable prescaler, 1 - disable prescaler

record(bo, "$(SYS,recursive)-$(EVR,recursive):Pul11-Ena-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVR,recursive):Pul11, PROP=Enable")
  field(PINI, "YES")
  field(VAL , "$(Pul11-Ena-Sel=1,undefined)")
  field(MASK, "1")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(SYS,recursive)-$(EVR,recursive):Pul11-Polarity-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVR,recursive):Pul11, PROP=Polarity")
  field(PINI, "YES")
  field(VAL , "$(Pul11-Polarity-Sel=0,undefined)")
  field(MASK, "1")
  field(ZNAM, "Active High")
  field(ONAM, "Active Low")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(SYS,recursive)-$(EVR,recursive):Pul11-Delay-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVR,recursive):Pul11, PROP=Delay")
  field(PINI, "YES")
  field(DESC, "Pulse Generator 11")
  field(VAL , "$(Pul11-Delay-SP=0,undefined)")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(LOPR, "0")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul11-Delay-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS,recursive)-$(EVR,recursive):Pul11-Delay-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVR,recursive):Pul11, PROP=Delay")
  field(VAL , 0)
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul11-Delay-Raw-RB")
}

record(longin, "$(SYS,recursive)-$(EVR,recursive):Pul11-Delay-Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVR,recursive):Pul11, PROP=Delay")
  field(EGU , "cnts")
  field(HOPR, "0xffffffff")
  field(LOPR, "0")
  field(HIGH, "0xffffffff")
  field( HSV, "MAJOR")
}

record(ao, "$(SYS,recursive)-$(EVR,recursive):Pul11-Width-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVR,recursive):Pul11, PROP=Width")
  field(PINI, "YES")
  field(DESC, "Pulser pulse width")
  field(VAL , "$(Pul11-Width-SP=0,undefined)")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(LOPR, "0")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul11-Width-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS,recursive)-$(EVR,recursive):Pul11-Width-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVR,recursive):Pul11, PROP=Width")
  field(VAL , 0)
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul11-Width-Raw-RB")
}

record(longin, "$(SYS,recursive)-$(EVR,recursive):Pul11-Width-Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVR,recursive):Pul11, PROP=Width")
  field(PINI, "YES")
  field(HOPR, "0xffff")
  field(LOPR, "0")
  field(HIGH, "0xffff")
  field( HSV, "MAJOR")
}

record(longout, "$(SYS,recursive)-$(EVR,recursive):Pul11-Prescaler-SP") {
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVR,recursive):Pul11, PROP=Prescaler")
  field(DESC, "Pulser prescaler")
  field(PINI, "YES")
  field(HOPR, "1")
  field(LOPR, "1")
  field(DRVH, "1")
  field(DRVL, "1")
  field(VAL , "$(Pul11-Prescaler-SP=1,undefined)")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul11-Prescaler-RB")
  field(DISP, "1")
  field(DISA, "1")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "$(SYS,recursive)-$(EVR,recursive):Pul11-Prescaler-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVR,recursive):Pul11, PROP=Prescaler")
  field(HOPR, "1")
  field(LOPR, "1")
  field(HIGH, "1")
  field( HSV, "MAJOR")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul11-Res-I")
}

record(calc, "$(SYS,recursive)-$(EVR,recursive):Pul11-Res-I") {
  field(DESC, "Resolution")
  field(INPA, "$(SYS,recursive)-$(EVR,recursive):Pul11-Prescaler-RB MS")
  field(INPB, "$(SYS,recursive)-$(EVR,recursive):Link-ClkPeriod-I CP")
  field(CALC, "1e9*(A?A:1)*B")
  field(EGU, "ns")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul11-Res-FO_")
}

record(fanout, "$(SYS,recursive)-$(EVR,recursive):Pul11-Res-FO_") {
  field(DESC, "Clock change resync")
  field(LNK1, "$(SYS,recursive)-$(EVR,recursive):Pul11-Delay-SP")
  field(LNK2, "$(SYS,recursive)-$(EVR,recursive):Pul11-Width-SP")
}
# Record set for an EVR's programmable pulse generator
#
# Macros:
#  SYS = System name
#  EVR = EVR devObj
#  OBJ = devObj name prefix
#  ID = Pulse gen ID number (corresponds to output mappings)
#  DMAX = Max delay setting
#  WMAX = Max width setting
#  PMAX = Max prescaler (divider) setting
#  NOPS = 0 - enable prescaler, 1 - disable prescaler

record(bo, "$(SYS,recursive)-$(EVR,recursive):Pul12-Ena-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVR,recursive):Pul12, PROP=Enable")
  field(PINI, "YES")
  field(VAL , "$(Pul12-Ena-Sel=1,undefined)")
  field(MASK, "1")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(SYS,recursive)-$(EVR,recursive):Pul12-Polarity-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVR,recursive):Pul12, PROP=Polarity")
  field(PINI, "YES")
  field(VAL , "$(Pul12-Polarity-Sel=0,undefined)")
  field(MASK, "1")
  field(ZNAM, "Active High")
  field(ONAM, "Active Low")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(SYS,recursive)-$(EVR,recursive):Pul12-Delay-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVR,recursive):Pul12, PROP=Delay")
  field(PINI, "YES")
  field(DESC, "Pulse Generator 12")
  field(VAL , "$(Pul12-Delay-SP=0,undefined)")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(LOPR, "0")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul12-Delay-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS,recursive)-$(EVR,recursive):Pul12-Delay-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVR,recursive):Pul12, PROP=Delay")
  field(VAL , 0)
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul12-Delay-Raw-RB")
}

record(longin, "$(SYS,recursive)-$(EVR,recursive):Pul12-Delay-Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVR,recursive):Pul12, PROP=Delay")
  field(EGU , "cnts")
  field(HOPR, "0xffffffff")
  field(LOPR, "0")
  field(HIGH, "0xffffffff")
  field( HSV, "MAJOR")
}

record(ao, "$(SYS,recursive)-$(EVR,recursive):Pul12-Width-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVR,recursive):Pul12, PROP=Width")
  field(PINI, "YES")
  field(DESC, "Pulser pulse width")
  field(VAL , "$(Pul12-Width-SP=0,undefined)")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(LOPR, "0")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul12-Width-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS,recursive)-$(EVR,recursive):Pul12-Width-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVR,recursive):Pul12, PROP=Width")
  field(VAL , 0)
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul12-Width-Raw-RB")
}

record(longin, "$(SYS,recursive)-$(EVR,recursive):Pul12-Width-Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVR,recursive):Pul12, PROP=Width")
  field(PINI, "YES")
  field(HOPR, "0xffff")
  field(LOPR, "0")
  field(HIGH, "0xffff")
  field( HSV, "MAJOR")
}

record(longout, "$(SYS,recursive)-$(EVR,recursive):Pul12-Prescaler-SP") {
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVR,recursive):Pul12, PROP=Prescaler")
  field(DESC, "Pulser prescaler")
  field(PINI, "YES")
  field(HOPR, "1")
  field(LOPR, "1")
  field(DRVH, "1")
  field(DRVL, "1")
  field(VAL , "$(Pul12-Prescaler-SP=1,undefined)")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul12-Prescaler-RB")
  field(DISP, "1")
  field(DISA, "1")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "$(SYS,recursive)-$(EVR,recursive):Pul12-Prescaler-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVR,recursive):Pul12, PROP=Prescaler")
  field(HOPR, "1")
  field(LOPR, "1")
  field(HIGH, "1")
  field( HSV, "MAJOR")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul12-Res-I")
}

record(calc, "$(SYS,recursive)-$(EVR,recursive):Pul12-Res-I") {
  field(DESC, "Resolution")
  field(INPA, "$(SYS,recursive)-$(EVR,recursive):Pul12-Prescaler-RB MS")
  field(INPB, "$(SYS,recursive)-$(EVR,recursive):Link-ClkPeriod-I CP")
  field(CALC, "1e9*(A?A:1)*B")
  field(EGU, "ns")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul12-Res-FO_")
}

record(fanout, "$(SYS,recursive)-$(EVR,recursive):Pul12-Res-FO_") {
  field(DESC, "Clock change resync")
  field(LNK1, "$(SYS,recursive)-$(EVR,recursive):Pul12-Delay-SP")
  field(LNK2, "$(SYS,recursive)-$(EVR,recursive):Pul12-Width-SP")
}
# Record set for an EVR's programmable pulse generator
#
# Macros:
#  SYS = System name
#  EVR = EVR devObj
#  OBJ = devObj name prefix
#  ID = Pulse gen ID number (corresponds to output mappings)
#  DMAX = Max delay setting
#  WMAX = Max width setting
#  PMAX = Max prescaler (divider) setting
#  NOPS = 0 - enable prescaler, 1 - disable prescaler

record(bo, "$(SYS,recursive)-$(EVR,recursive):Pul13-Ena-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVR,recursive):Pul13, PROP=Enable")
  field(PINI, "YES")
  field(VAL , "$(Pul13-Ena-Sel=1,undefined)")
  field(MASK, "1")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(SYS,recursive)-$(EVR,recursive):Pul13-Polarity-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVR,recursive):Pul13, PROP=Polarity")
  field(PINI, "YES")
  field(VAL , "$(Pul13-Polarity-Sel=0,undefined)")
  field(MASK, "1")
  field(ZNAM, "Active High")
  field(ONAM, "Active Low")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(SYS,recursive)-$(EVR,recursive):Pul13-Delay-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVR,recursive):Pul13, PROP=Delay")
  field(PINI, "YES")
  field(DESC, "Pulse Generator 13")
  field(VAL , "$(Pul13-Delay-SP=0,undefined)")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(LOPR, "0")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul13-Delay-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS,recursive)-$(EVR,recursive):Pul13-Delay-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVR,recursive):Pul13, PROP=Delay")
  field(VAL , 0)
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul13-Delay-Raw-RB")
}

record(longin, "$(SYS,recursive)-$(EVR,recursive):Pul13-Delay-Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVR,recursive):Pul13, PROP=Delay")
  field(EGU , "cnts")
  field(HOPR, "0xffffffff")
  field(LOPR, "0")
  field(HIGH, "0xffffffff")
  field( HSV, "MAJOR")
}

record(ao, "$(SYS,recursive)-$(EVR,recursive):Pul13-Width-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVR,recursive):Pul13, PROP=Width")
  field(PINI, "YES")
  field(DESC, "Pulser pulse width")
  field(VAL , "$(Pul13-Width-SP=0,undefined)")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(LOPR, "0")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul13-Width-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS,recursive)-$(EVR,recursive):Pul13-Width-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVR,recursive):Pul13, PROP=Width")
  field(VAL , 0)
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul13-Width-Raw-RB")
}

record(longin, "$(SYS,recursive)-$(EVR,recursive):Pul13-Width-Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVR,recursive):Pul13, PROP=Width")
  field(PINI, "YES")
  field(HOPR, "0xffff")
  field(LOPR, "0")
  field(HIGH, "0xffff")
  field( HSV, "MAJOR")
}

record(longout, "$(SYS,recursive)-$(EVR,recursive):Pul13-Prescaler-SP") {
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVR,recursive):Pul13, PROP=Prescaler")
  field(DESC, "Pulser prescaler")
  field(PINI, "YES")
  field(HOPR, "1")
  field(LOPR, "1")
  field(DRVH, "1")
  field(DRVL, "1")
  field(VAL , "$(Pul13-Prescaler-SP=1,undefined)")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul13-Prescaler-RB")
  field(DISP, "1")
  field(DISA, "1")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "$(SYS,recursive)-$(EVR,recursive):Pul13-Prescaler-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVR,recursive):Pul13, PROP=Prescaler")
  field(HOPR, "1")
  field(LOPR, "1")
  field(HIGH, "1")
  field( HSV, "MAJOR")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul13-Res-I")
}

record(calc, "$(SYS,recursive)-$(EVR,recursive):Pul13-Res-I") {
  field(DESC, "Resolution")
  field(INPA, "$(SYS,recursive)-$(EVR,recursive):Pul13-Prescaler-RB MS")
  field(INPB, "$(SYS,recursive)-$(EVR,recursive):Link-ClkPeriod-I CP")
  field(CALC, "1e9*(A?A:1)*B")
  field(EGU, "ns")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul13-Res-FO_")
}

record(fanout, "$(SYS,recursive)-$(EVR,recursive):Pul13-Res-FO_") {
  field(DESC, "Clock change resync")
  field(LNK1, "$(SYS,recursive)-$(EVR,recursive):Pul13-Delay-SP")
  field(LNK2, "$(SYS,recursive)-$(EVR,recursive):Pul13-Width-SP")
}
# Record set for an EVR's programmable pulse generator
#
# Macros:
#  SYS = System name
#  EVR = EVR devObj
#  OBJ = devObj name prefix
#  ID = Pulse gen ID number (corresponds to output mappings)
#  DMAX = Max delay setting
#  WMAX = Max width setting
#  PMAX = Max prescaler (divider) setting
#  NOPS = 0 - enable prescaler, 1 - disable prescaler

record(bo, "$(SYS,recursive)-$(EVR,recursive):Pul14-Ena-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVR,recursive):Pul14, PROP=Enable")
  field(PINI, "YES")
  field(VAL , "$(Pul14-Ena-Sel=1,undefined)")
  field(MASK, "1")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(SYS,recursive)-$(EVR,recursive):Pul14-Polarity-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVR,recursive):Pul14, PROP=Polarity")
  field(PINI, "YES")
  field(VAL , "$(Pul14-Polarity-Sel=0,undefined)")
  field(MASK, "1")
  field(ZNAM, "Active High")
  field(ONAM, "Active Low")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(SYS,recursive)-$(EVR,recursive):Pul14-Delay-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVR,recursive):Pul14, PROP=Delay")
  field(PINI, "YES")
  field(DESC, "Pulse Generator 14")
  field(VAL , "$(Pul14-Delay-SP=0,undefined)")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(LOPR, "0")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul14-Delay-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS,recursive)-$(EVR,recursive):Pul14-Delay-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVR,recursive):Pul14, PROP=Delay")
  field(VAL , 0)
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul14-Delay-Raw-RB")
}

record(longin, "$(SYS,recursive)-$(EVR,recursive):Pul14-Delay-Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVR,recursive):Pul14, PROP=Delay")
  field(EGU , "cnts")
  field(HOPR, "0xffffffff")
  field(LOPR, "0")
  field(HIGH, "0xffffffff")
  field( HSV, "MAJOR")
}

record(ao, "$(SYS,recursive)-$(EVR,recursive):Pul14-Width-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVR,recursive):Pul14, PROP=Width")
  field(PINI, "YES")
  field(DESC, "Pulser pulse width")
  field(VAL , "$(Pul14-Width-SP=0,undefined)")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(LOPR, "0")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul14-Width-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS,recursive)-$(EVR,recursive):Pul14-Width-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVR,recursive):Pul14, PROP=Width")
  field(VAL , 0)
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul14-Width-Raw-RB")
}

record(longin, "$(SYS,recursive)-$(EVR,recursive):Pul14-Width-Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVR,recursive):Pul14, PROP=Width")
  field(PINI, "YES")
  field(HOPR, "0xffff")
  field(LOPR, "0")
  field(HIGH, "0xffff")
  field( HSV, "MAJOR")
}

record(longout, "$(SYS,recursive)-$(EVR,recursive):Pul14-Prescaler-SP") {
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVR,recursive):Pul14, PROP=Prescaler")
  field(DESC, "Pulser prescaler")
  field(PINI, "YES")
  field(HOPR, "1")
  field(LOPR, "1")
  field(DRVH, "1")
  field(DRVL, "1")
  field(VAL , "$(Pul14-Prescaler-SP=1,undefined)")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul14-Prescaler-RB")
  field(DISP, "1")
  field(DISA, "1")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "$(SYS,recursive)-$(EVR,recursive):Pul14-Prescaler-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVR,recursive):Pul14, PROP=Prescaler")
  field(HOPR, "1")
  field(LOPR, "1")
  field(HIGH, "1")
  field( HSV, "MAJOR")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul14-Res-I")
}

record(calc, "$(SYS,recursive)-$(EVR,recursive):Pul14-Res-I") {
  field(DESC, "Resolution")
  field(INPA, "$(SYS,recursive)-$(EVR,recursive):Pul14-Prescaler-RB MS")
  field(INPB, "$(SYS,recursive)-$(EVR,recursive):Link-ClkPeriod-I CP")
  field(CALC, "1e9*(A?A:1)*B")
  field(EGU, "ns")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul14-Res-FO_")
}

record(fanout, "$(SYS,recursive)-$(EVR,recursive):Pul14-Res-FO_") {
  field(DESC, "Clock change resync")
  field(LNK1, "$(SYS,recursive)-$(EVR,recursive):Pul14-Delay-SP")
  field(LNK2, "$(SYS,recursive)-$(EVR,recursive):Pul14-Width-SP")
}
# Record set for an EVR's programmable pulse generator
#
# Macros:
#  SYS = System name
#  EVR = EVR devObj
#  OBJ = devObj name prefix
#  ID = Pulse gen ID number (corresponds to output mappings)
#  DMAX = Max delay setting
#  WMAX = Max width setting
#  PMAX = Max prescaler (divider) setting
#  NOPS = 0 - enable prescaler, 1 - disable prescaler

record(bo, "$(SYS,recursive)-$(EVR,recursive):Pul15-Ena-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVR,recursive):Pul15, PROP=Enable")
  field(PINI, "YES")
  field(VAL , "$(Pul15-Ena-Sel=1,undefined)")
  field(MASK, "1")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(SYS,recursive)-$(EVR,recursive):Pul15-Polarity-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVR,recursive):Pul15, PROP=Polarity")
  field(PINI, "YES")
  field(VAL , "$(Pul15-Polarity-Sel=0,undefined)")
  field(MASK, "1")
  field(ZNAM, "Active High")
  field(ONAM, "Active Low")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(SYS,recursive)-$(EVR,recursive):Pul15-Delay-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVR,recursive):Pul15, PROP=Delay")
  field(PINI, "YES")
  field(DESC, "Pulse Generator 15")
  field(VAL , "$(Pul15-Delay-SP=0,undefined)")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(LOPR, "0")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul15-Delay-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS,recursive)-$(EVR,recursive):Pul15-Delay-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVR,recursive):Pul15, PROP=Delay")
  field(VAL , 0)
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul15-Delay-Raw-RB")
}

record(longin, "$(SYS,recursive)-$(EVR,recursive):Pul15-Delay-Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVR,recursive):Pul15, PROP=Delay")
  field(EGU , "cnts")
  field(HOPR, "0xffffffff")
  field(LOPR, "0")
  field(HIGH, "0xffffffff")
  field( HSV, "MAJOR")
}

record(ao, "$(SYS,recursive)-$(EVR,recursive):Pul15-Width-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVR,recursive):Pul15, PROP=Width")
  field(PINI, "YES")
  field(DESC, "Pulser pulse width")
  field(VAL , "$(Pul15-Width-SP=0,undefined)")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(LOPR, "0")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul15-Width-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(SYS,recursive)-$(EVR,recursive):Pul15-Width-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVR,recursive):Pul15, PROP=Width")
  field(VAL , 0)
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul15-Width-Raw-RB")
}

record(longin, "$(SYS,recursive)-$(EVR,recursive):Pul15-Width-Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVR,recursive):Pul15, PROP=Width")
  field(PINI, "YES")
  field(HOPR, "0xffff")
  field(LOPR, "0")
  field(HIGH, "0xffff")
  field( HSV, "MAJOR")
}

record(longout, "$(SYS,recursive)-$(EVR,recursive):Pul15-Prescaler-SP") {
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVR,recursive):Pul15, PROP=Prescaler")
  field(DESC, "Pulser prescaler")
  field(PINI, "YES")
  field(HOPR, "1")
  field(LOPR, "1")
  field(DRVH, "1")
  field(DRVL, "1")
  field(VAL , "$(Pul15-Prescaler-SP=1,undefined)")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul15-Prescaler-RB")
  field(DISP, "1")
  field(DISA, "1")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "$(SYS,recursive)-$(EVR,recursive):Pul15-Prescaler-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVR,recursive):Pul15, PROP=Prescaler")
  field(HOPR, "1")
  field(LOPR, "1")
  field(HIGH, "1")
  field( HSV, "MAJOR")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul15-Res-I")
}

record(calc, "$(SYS,recursive)-$(EVR,recursive):Pul15-Res-I") {
  field(DESC, "Resolution")
  field(INPA, "$(SYS,recursive)-$(EVR,recursive):Pul15-Prescaler-RB MS")
  field(INPB, "$(SYS,recursive)-$(EVR,recursive):Link-ClkPeriod-I CP")
  field(CALC, "1e9*(A?A:1)*B")
  field(EGU, "ns")
  field(FLNK, "$(SYS,recursive)-$(EVR,recursive):Pul15-Res-FO_")
}

record(fanout, "$(SYS,recursive)-$(EVR,recursive):Pul15-Res-FO_") {
  field(DESC, "Clock change resync")
  field(LNK1, "$(SYS,recursive)-$(EVR,recursive):Pul15-Delay-SP")
  field(LNK2, "$(SYS,recursive)-$(EVR,recursive):Pul15-Width-SP")
}
# Record set for an EVR's physical output
#
# Macros-
#  SYS = System name
#  EVR = EVR devObj name
#  ID  = ID # of the output
#  OBJ = devObj name prefix
#  DESC = Physical label found on output jack

record(bo, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut0-Ena-SP") {
  field( DTYP, "Obj Prop bool")
  field( DESC, "Output UNIV0")
  field( OUT , "@OBJ=$(EVR,recursive):FrontUnivOut0, PROP=Enable")
  field( PINI, "YES")
  field( ZNAM, "Disabled")
  field( ONAM, "Enabled")
  field( VAL , "$(FrontUnivOut0-Ena-SP=1,undefined)") # Default to enabled
  info(autosaveFields_pass0, "VAL")
}

record(longout, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut0-Src-SP") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "UNIV0")
  field( OUT , "@OBJ=$(EVR,recursive):FrontUnivOut0, PROP=Map")
  field( FLNK, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut0-Src-RB")
  field( PINI, "YES")
  field( VAL , "$(FrontUnivOut0-Src-SP=63,undefined)")  # Defaults to Force high (if enabled -> Ena-SP)
  info(autosaveFields_pass0, "VAL HOPR LOPR DRVH DRVL")
}

# Settings
# Users use will set one of these at a time.

record(mbbo, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut0-Src-Pulse-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut0-Src-SP PP")
  field( ZRST, "Pulser 0")
  field( ONST, "Pulser 1")
  field( TWST, "Pulser 2")
  field( THST, "Pulser 3")
  field( FRST, "Pulser 4")
  field( FVST, "Pulser 5")
  field( SXST, "Pulser 6")
  field( SVST, "Pulser 7")
  field( EIST, "Pulser 8")
  field( NIST, "Pulser 9")
  field( TEST, "Pulser 10")
  field( ELST, "Pulser 11")
  field( TVST, "Pulser 12")
  field( TTST, "Pulser 13")
  field( FTST, "Pulser 14")
  field( FFST, "Pulser 15")
  field( ZRVL, "0")
  field( ONVL, "1")
  field( TWVL, "2")
  field( THVL, "3")
  field( FRVL, "4")
  field( FVVL, "5")
  field( SXVL, "6")
  field( SVVL, "7")
  field( EIVL, "8")
  field( NIVL, "9")
  field( TEVL, "10")
  field( ELVL, "11")
  field( TVVL, "12")
  field( TTVL, "13")
  field( FTVL, "14")
  field( FFVL, "15")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut0-Src-DBus-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut0-Src-SP PP")
  field( ZRST, "DBus 0")
  field( ONST, "DBus 1")
  field( TWST, "DBus 2")
  field( THST, "DBus 3")
  field( FRST, "DBus 4")
  field( FVST, "DBus 5")
  field( SXST, "DBus 6")
  field( SVST, "DBus 7")
  field( ZRVL, "32")
  field( ONVL, "33")
  field( TWVL, "34")
  field( THVL, "35")
  field( FRVL, "36")
  field( FVVL, "37")
  field( SXVL, "38")
  field( SVVL, "39")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut0-Src-Scale-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut0-Src-SP PP")
  field( ZRST, "Prescaler 0")
  field( ONST, "Prescaler 1")
  field( TWST, "Prescaler 2")
  field( ZRVL, "40")
  field( ONVL, "41")
  field( TWVL, "42")
  field( THST, "Force Low")
  field( FRST, "Force High")
  field( THVL, "63")
  field( FRVL, "62")
  field( VAL , "3")
  field( FVSV, "INVALID")
  field( SXSV, "INVALID")
  field( SVSV, "INVALID")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

# Mapping readback

record(longin, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut0-Src-RB") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "UNIV0")
  field( INP , "@OBJ=$(EVR,recursive):FrontUnivOut0, PROP=Map")
  field( FLNK, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut0-Src-Pulse-RB")
}

record(mbbi, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut0-Src-Pulse-RB") {
  field( DTYP, "Raw Soft Channel")
  field( INP , "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut0-Src-RB")
  field( ZRST, "Pulser 0")
  field( ONST, "Pulser 1")
  field( TWST, "Pulser 2")
  field( THST, "Pulser 3")
  field( FRST, "Pulser 4")
  field( FVST, "Pulser 5")
  field( SXST, "Pulser 6")
  field( SVST, "Pulser 7")
  field( EIST, "Pulser 8")
  field( NIST, "Pulser 9")
  field( TEST, "Pulser 10")
  field( ELST, "Pulser 11")
  field( TVST, "Pulser 12")
  field( TTST, "Pulser 13")
  field( FTST, "Pulser 14")
  field( FFST, "Pulser 15")
  field( ZRVL, "0")
  field( ONVL, "1")
  field( TWVL, "2")
  field( THVL, "3")
  field( FRVL, "4")
  field( FVVL, "5")
  field( SXVL, "6")
  field( SVVL, "7")
  field( EIVL, "8")
  field( NIVL, "9")
  field( TEVL, "10")
  field( ELVL, "11")
  field( TVVL, "12")
  field( TTVL, "13")
  field( FTVL, "14")
  field( FFVL, "15")
  field( UNSV, "MAJOR")
  field( FLNK, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut0-Src-DBus-RB")
}

record(mbbi, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut0-Src-DBus-RB") {
  field( DTYP, "Raw Soft Channel")
  field( INP , "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut0-Src-RB")
  field( ZRST, "DBus 0")
  field( ONST, "DBus 1")
  field( TWST, "DBus 2")
  field( THST, "DBus 3")
  field( FRST, "DBus 4")
  field( FVST, "DBus 5")
  field( SXST, "DBus 6")
  field( SVST, "DBus 7")
  field( ZRVL, "32")
  field( ONVL, "33")
  field( TWVL, "34")
  field( THVL, "35")
  field( FRVL, "36")
  field( FVVL, "37")
  field( SXVL, "38")
  field( SVVL, "39")
  field( EISV, "MAJOR")
  field( NISV, "MAJOR")
  field( TESV, "MAJOR")
  field( ELSV, "MAJOR")
  field( TVSV, "MAJOR")
  field( TTSV, "MAJOR")
  field( FTSV, "MAJOR")
  field( FFSV, "MAJOR")
  field( UNSV, "MAJOR")
  field( FLNK, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut0-Src-Scale-RB")
}

record(mbbi, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut0-Src-Scale-RB") {
  field( DTYP, "Raw Soft Channel")
  field( INP , "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut0-Src-RB")
  field( ZRST, "Prescaler 0")
  field( ONST, "Prescaler 1")
  field( TWST, "Prescaler 2")
  field( ZRVL, "40")
  field( ONVL, "41")
  field( TWVL, "42")
  field( THST, "Force Low")
  field( FRST, "Force High")
  field( THVL, "63")
  field( FRVL, "62")
  field( FVSV, "MAJOR")
  field( SXSV, "MAJOR")
  field( SVSV, "MAJOR")
  field( EISV, "MAJOR")
  field( NISV, "MAJOR")
  field( TESV, "MAJOR")
  field( ELSV, "MAJOR")
  field( TVSV, "MAJOR")
  field( TTSV, "MAJOR")
  field( FTSV, "MAJOR")
  field( FFSV, "MAJOR")
  field( UNSV, "MAJOR")
  field( UNSV, "MAJOR")
}

# Select which is displayed

# Place for user provided note of what is
# connected to this output.
record(waveform, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut0-User-SP") {
  field( DESC, "Desc. of user or purpose")
  field( FTVL, "CHAR")
  field( NELM, "128")
  field( NORD, "1") # default include null termination
  info(autosaveFields_pass1, "VAL")
}
# Record set for an EVR's physical output
#
# Macros-
#  SYS = System name
#  EVR = EVR devObj name
#  ID  = ID # of the output
#  OBJ = devObj name prefix
#  DESC = Physical label found on output jack

record(bo, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut1-Ena-SP") {
  field( DTYP, "Obj Prop bool")
  field( DESC, "Output UNIV1")
  field( OUT , "@OBJ=$(EVR,recursive):FrontUnivOut1, PROP=Enable")
  field( PINI, "YES")
  field( ZNAM, "Disabled")
  field( ONAM, "Enabled")
  field( VAL , "$(FrontUnivOut1-Ena-SP=1,undefined)") # Default to enabled
  info(autosaveFields_pass0, "VAL")
}

record(longout, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut1-Src-SP") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "UNIV1")
  field( OUT , "@OBJ=$(EVR,recursive):FrontUnivOut1, PROP=Map")
  field( FLNK, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut1-Src-RB")
  field( PINI, "YES")
  field( VAL , "$(FrontUnivOut1-Src-SP=63,undefined)")  # Defaults to Force high (if enabled -> Ena-SP)
  info(autosaveFields_pass0, "VAL HOPR LOPR DRVH DRVL")
}

# Settings
# Users use will set one of these at a time.

record(mbbo, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut1-Src-Pulse-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut1-Src-SP PP")
  field( ZRST, "Pulser 0")
  field( ONST, "Pulser 1")
  field( TWST, "Pulser 2")
  field( THST, "Pulser 3")
  field( FRST, "Pulser 4")
  field( FVST, "Pulser 5")
  field( SXST, "Pulser 6")
  field( SVST, "Pulser 7")
  field( EIST, "Pulser 8")
  field( NIST, "Pulser 9")
  field( TEST, "Pulser 10")
  field( ELST, "Pulser 11")
  field( TVST, "Pulser 12")
  field( TTST, "Pulser 13")
  field( FTST, "Pulser 14")
  field( FFST, "Pulser 15")
  field( ZRVL, "0")
  field( ONVL, "1")
  field( TWVL, "2")
  field( THVL, "3")
  field( FRVL, "4")
  field( FVVL, "5")
  field( SXVL, "6")
  field( SVVL, "7")
  field( EIVL, "8")
  field( NIVL, "9")
  field( TEVL, "10")
  field( ELVL, "11")
  field( TVVL, "12")
  field( TTVL, "13")
  field( FTVL, "14")
  field( FFVL, "15")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut1-Src-DBus-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut1-Src-SP PP")
  field( ZRST, "DBus 0")
  field( ONST, "DBus 1")
  field( TWST, "DBus 2")
  field( THST, "DBus 3")
  field( FRST, "DBus 4")
  field( FVST, "DBus 5")
  field( SXST, "DBus 6")
  field( SVST, "DBus 7")
  field( ZRVL, "32")
  field( ONVL, "33")
  field( TWVL, "34")
  field( THVL, "35")
  field( FRVL, "36")
  field( FVVL, "37")
  field( SXVL, "38")
  field( SVVL, "39")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut1-Src-Scale-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut1-Src-SP PP")
  field( ZRST, "Prescaler 0")
  field( ONST, "Prescaler 1")
  field( TWST, "Prescaler 2")
  field( ZRVL, "40")
  field( ONVL, "41")
  field( TWVL, "42")
  field( THST, "Force Low")
  field( FRST, "Force High")
  field( THVL, "63")
  field( FRVL, "62")
  field( VAL , "3")
  field( FVSV, "INVALID")
  field( SXSV, "INVALID")
  field( SVSV, "INVALID")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

# Mapping readback

record(longin, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut1-Src-RB") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "UNIV1")
  field( INP , "@OBJ=$(EVR,recursive):FrontUnivOut1, PROP=Map")
  field( FLNK, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut1-Src-Pulse-RB")
}

record(mbbi, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut1-Src-Pulse-RB") {
  field( DTYP, "Raw Soft Channel")
  field( INP , "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut1-Src-RB")
  field( ZRST, "Pulser 0")
  field( ONST, "Pulser 1")
  field( TWST, "Pulser 2")
  field( THST, "Pulser 3")
  field( FRST, "Pulser 4")
  field( FVST, "Pulser 5")
  field( SXST, "Pulser 6")
  field( SVST, "Pulser 7")
  field( EIST, "Pulser 8")
  field( NIST, "Pulser 9")
  field( TEST, "Pulser 10")
  field( ELST, "Pulser 11")
  field( TVST, "Pulser 12")
  field( TTST, "Pulser 13")
  field( FTST, "Pulser 14")
  field( FFST, "Pulser 15")
  field( ZRVL, "0")
  field( ONVL, "1")
  field( TWVL, "2")
  field( THVL, "3")
  field( FRVL, "4")
  field( FVVL, "5")
  field( SXVL, "6")
  field( SVVL, "7")
  field( EIVL, "8")
  field( NIVL, "9")
  field( TEVL, "10")
  field( ELVL, "11")
  field( TVVL, "12")
  field( TTVL, "13")
  field( FTVL, "14")
  field( FFVL, "15")
  field( UNSV, "MAJOR")
  field( FLNK, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut1-Src-DBus-RB")
}

record(mbbi, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut1-Src-DBus-RB") {
  field( DTYP, "Raw Soft Channel")
  field( INP , "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut1-Src-RB")
  field( ZRST, "DBus 0")
  field( ONST, "DBus 1")
  field( TWST, "DBus 2")
  field( THST, "DBus 3")
  field( FRST, "DBus 4")
  field( FVST, "DBus 5")
  field( SXST, "DBus 6")
  field( SVST, "DBus 7")
  field( ZRVL, "32")
  field( ONVL, "33")
  field( TWVL, "34")
  field( THVL, "35")
  field( FRVL, "36")
  field( FVVL, "37")
  field( SXVL, "38")
  field( SVVL, "39")
  field( EISV, "MAJOR")
  field( NISV, "MAJOR")
  field( TESV, "MAJOR")
  field( ELSV, "MAJOR")
  field( TVSV, "MAJOR")
  field( TTSV, "MAJOR")
  field( FTSV, "MAJOR")
  field( FFSV, "MAJOR")
  field( UNSV, "MAJOR")
  field( FLNK, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut1-Src-Scale-RB")
}

record(mbbi, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut1-Src-Scale-RB") {
  field( DTYP, "Raw Soft Channel")
  field( INP , "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut1-Src-RB")
  field( ZRST, "Prescaler 0")
  field( ONST, "Prescaler 1")
  field( TWST, "Prescaler 2")
  field( ZRVL, "40")
  field( ONVL, "41")
  field( TWVL, "42")
  field( THST, "Force Low")
  field( FRST, "Force High")
  field( THVL, "63")
  field( FRVL, "62")
  field( FVSV, "MAJOR")
  field( SXSV, "MAJOR")
  field( SVSV, "MAJOR")
  field( EISV, "MAJOR")
  field( NISV, "MAJOR")
  field( TESV, "MAJOR")
  field( ELSV, "MAJOR")
  field( TVSV, "MAJOR")
  field( TTSV, "MAJOR")
  field( FTSV, "MAJOR")
  field( FFSV, "MAJOR")
  field( UNSV, "MAJOR")
  field( UNSV, "MAJOR")
}

# Select which is displayed

# Place for user provided note of what is
# connected to this output.
record(waveform, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut1-User-SP") {
  field( DESC, "Desc. of user or purpose")
  field( FTVL, "CHAR")
  field( NELM, "128")
  field( NORD, "1") # default include null termination
  info(autosaveFields_pass1, "VAL")
}
# Record set for an EVR's physical output
#
# Macros-
#  SYS = System name
#  EVR = EVR devObj name
#  ID  = ID # of the output
#  OBJ = devObj name prefix
#  DESC = Physical label found on output jack

record(bo, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut2-Ena-SP") {
  field( DTYP, "Obj Prop bool")
  field( DESC, "Output UNIV2")
  field( OUT , "@OBJ=$(EVR,recursive):FrontUnivOut2, PROP=Enable")
  field( PINI, "YES")
  field( ZNAM, "Disabled")
  field( ONAM, "Enabled")
  field( VAL , "$(FrontUnivOut2-Ena-SP=1,undefined)") # Default to enabled
  info(autosaveFields_pass0, "VAL")
}

record(longout, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut2-Src-SP") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "UNIV2")
  field( OUT , "@OBJ=$(EVR,recursive):FrontUnivOut2, PROP=Map")
  field( FLNK, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut2-Src-RB")
  field( PINI, "YES")
  field( VAL , "$(FrontUnivOut2-Src-SP=63,undefined)")  # Defaults to Force high (if enabled -> Ena-SP)
  info(autosaveFields_pass0, "VAL HOPR LOPR DRVH DRVL")
}

# Settings
# Users use will set one of these at a time.

record(mbbo, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut2-Src-Pulse-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut2-Src-SP PP")
  field( ZRST, "Pulser 0")
  field( ONST, "Pulser 1")
  field( TWST, "Pulser 2")
  field( THST, "Pulser 3")
  field( FRST, "Pulser 4")
  field( FVST, "Pulser 5")
  field( SXST, "Pulser 6")
  field( SVST, "Pulser 7")
  field( EIST, "Pulser 8")
  field( NIST, "Pulser 9")
  field( TEST, "Pulser 10")
  field( ELST, "Pulser 11")
  field( TVST, "Pulser 12")
  field( TTST, "Pulser 13")
  field( FTST, "Pulser 14")
  field( FFST, "Pulser 15")
  field( ZRVL, "0")
  field( ONVL, "1")
  field( TWVL, "2")
  field( THVL, "3")
  field( FRVL, "4")
  field( FVVL, "5")
  field( SXVL, "6")
  field( SVVL, "7")
  field( EIVL, "8")
  field( NIVL, "9")
  field( TEVL, "10")
  field( ELVL, "11")
  field( TVVL, "12")
  field( TTVL, "13")
  field( FTVL, "14")
  field( FFVL, "15")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut2-Src-DBus-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut2-Src-SP PP")
  field( ZRST, "DBus 0")
  field( ONST, "DBus 1")
  field( TWST, "DBus 2")
  field( THST, "DBus 3")
  field( FRST, "DBus 4")
  field( FVST, "DBus 5")
  field( SXST, "DBus 6")
  field( SVST, "DBus 7")
  field( ZRVL, "32")
  field( ONVL, "33")
  field( TWVL, "34")
  field( THVL, "35")
  field( FRVL, "36")
  field( FVVL, "37")
  field( SXVL, "38")
  field( SVVL, "39")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut2-Src-Scale-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut2-Src-SP PP")
  field( ZRST, "Prescaler 0")
  field( ONST, "Prescaler 1")
  field( TWST, "Prescaler 2")
  field( ZRVL, "40")
  field( ONVL, "41")
  field( TWVL, "42")
  field( THST, "Force Low")
  field( FRST, "Force High")
  field( THVL, "63")
  field( FRVL, "62")
  field( VAL , "3")
  field( FVSV, "INVALID")
  field( SXSV, "INVALID")
  field( SVSV, "INVALID")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

# Mapping readback

record(longin, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut2-Src-RB") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "UNIV2")
  field( INP , "@OBJ=$(EVR,recursive):FrontUnivOut2, PROP=Map")
  field( FLNK, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut2-Src-Pulse-RB")
}

record(mbbi, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut2-Src-Pulse-RB") {
  field( DTYP, "Raw Soft Channel")
  field( INP , "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut2-Src-RB")
  field( ZRST, "Pulser 0")
  field( ONST, "Pulser 1")
  field( TWST, "Pulser 2")
  field( THST, "Pulser 3")
  field( FRST, "Pulser 4")
  field( FVST, "Pulser 5")
  field( SXST, "Pulser 6")
  field( SVST, "Pulser 7")
  field( EIST, "Pulser 8")
  field( NIST, "Pulser 9")
  field( TEST, "Pulser 10")
  field( ELST, "Pulser 11")
  field( TVST, "Pulser 12")
  field( TTST, "Pulser 13")
  field( FTST, "Pulser 14")
  field( FFST, "Pulser 15")
  field( ZRVL, "0")
  field( ONVL, "1")
  field( TWVL, "2")
  field( THVL, "3")
  field( FRVL, "4")
  field( FVVL, "5")
  field( SXVL, "6")
  field( SVVL, "7")
  field( EIVL, "8")
  field( NIVL, "9")
  field( TEVL, "10")
  field( ELVL, "11")
  field( TVVL, "12")
  field( TTVL, "13")
  field( FTVL, "14")
  field( FFVL, "15")
  field( UNSV, "MAJOR")
  field( FLNK, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut2-Src-DBus-RB")
}

record(mbbi, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut2-Src-DBus-RB") {
  field( DTYP, "Raw Soft Channel")
  field( INP , "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut2-Src-RB")
  field( ZRST, "DBus 0")
  field( ONST, "DBus 1")
  field( TWST, "DBus 2")
  field( THST, "DBus 3")
  field( FRST, "DBus 4")
  field( FVST, "DBus 5")
  field( SXST, "DBus 6")
  field( SVST, "DBus 7")
  field( ZRVL, "32")
  field( ONVL, "33")
  field( TWVL, "34")
  field( THVL, "35")
  field( FRVL, "36")
  field( FVVL, "37")
  field( SXVL, "38")
  field( SVVL, "39")
  field( EISV, "MAJOR")
  field( NISV, "MAJOR")
  field( TESV, "MAJOR")
  field( ELSV, "MAJOR")
  field( TVSV, "MAJOR")
  field( TTSV, "MAJOR")
  field( FTSV, "MAJOR")
  field( FFSV, "MAJOR")
  field( UNSV, "MAJOR")
  field( FLNK, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut2-Src-Scale-RB")
}

record(mbbi, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut2-Src-Scale-RB") {
  field( DTYP, "Raw Soft Channel")
  field( INP , "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut2-Src-RB")
  field( ZRST, "Prescaler 0")
  field( ONST, "Prescaler 1")
  field( TWST, "Prescaler 2")
  field( ZRVL, "40")
  field( ONVL, "41")
  field( TWVL, "42")
  field( THST, "Force Low")
  field( FRST, "Force High")
  field( THVL, "63")
  field( FRVL, "62")
  field( FVSV, "MAJOR")
  field( SXSV, "MAJOR")
  field( SVSV, "MAJOR")
  field( EISV, "MAJOR")
  field( NISV, "MAJOR")
  field( TESV, "MAJOR")
  field( ELSV, "MAJOR")
  field( TVSV, "MAJOR")
  field( TTSV, "MAJOR")
  field( FTSV, "MAJOR")
  field( FFSV, "MAJOR")
  field( UNSV, "MAJOR")
  field( UNSV, "MAJOR")
}

# Select which is displayed

# Place for user provided note of what is
# connected to this output.
record(waveform, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut2-User-SP") {
  field( DESC, "Desc. of user or purpose")
  field( FTVL, "CHAR")
  field( NELM, "128")
  field( NORD, "1") # default include null termination
  info(autosaveFields_pass1, "VAL")
}
# Record set for an EVR's physical output
#
# Macros-
#  SYS = System name
#  EVR = EVR devObj name
#  ID  = ID # of the output
#  OBJ = devObj name prefix
#  DESC = Physical label found on output jack

record(bo, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut3-Ena-SP") {
  field( DTYP, "Obj Prop bool")
  field( DESC, "Output UNIV3")
  field( OUT , "@OBJ=$(EVR,recursive):FrontUnivOut3, PROP=Enable")
  field( PINI, "YES")
  field( ZNAM, "Disabled")
  field( ONAM, "Enabled")
  field( VAL , "$(FrontUnivOut3-Ena-SP=1,undefined)") # Default to enabled
  info(autosaveFields_pass0, "VAL")
}

record(longout, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut3-Src-SP") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "UNIV3")
  field( OUT , "@OBJ=$(EVR,recursive):FrontUnivOut3, PROP=Map")
  field( FLNK, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut3-Src-RB")
  field( PINI, "YES")
  field( VAL , "$(FrontUnivOut3-Src-SP=63,undefined)")  # Defaults to Force high (if enabled -> Ena-SP)
  info(autosaveFields_pass0, "VAL HOPR LOPR DRVH DRVL")
}

# Settings
# Users use will set one of these at a time.

record(mbbo, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut3-Src-Pulse-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut3-Src-SP PP")
  field( ZRST, "Pulser 0")
  field( ONST, "Pulser 1")
  field( TWST, "Pulser 2")
  field( THST, "Pulser 3")
  field( FRST, "Pulser 4")
  field( FVST, "Pulser 5")
  field( SXST, "Pulser 6")
  field( SVST, "Pulser 7")
  field( EIST, "Pulser 8")
  field( NIST, "Pulser 9")
  field( TEST, "Pulser 10")
  field( ELST, "Pulser 11")
  field( TVST, "Pulser 12")
  field( TTST, "Pulser 13")
  field( FTST, "Pulser 14")
  field( FFST, "Pulser 15")
  field( ZRVL, "0")
  field( ONVL, "1")
  field( TWVL, "2")
  field( THVL, "3")
  field( FRVL, "4")
  field( FVVL, "5")
  field( SXVL, "6")
  field( SVVL, "7")
  field( EIVL, "8")
  field( NIVL, "9")
  field( TEVL, "10")
  field( ELVL, "11")
  field( TVVL, "12")
  field( TTVL, "13")
  field( FTVL, "14")
  field( FFVL, "15")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut3-Src-DBus-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut3-Src-SP PP")
  field( ZRST, "DBus 0")
  field( ONST, "DBus 1")
  field( TWST, "DBus 2")
  field( THST, "DBus 3")
  field( FRST, "DBus 4")
  field( FVST, "DBus 5")
  field( SXST, "DBus 6")
  field( SVST, "DBus 7")
  field( ZRVL, "32")
  field( ONVL, "33")
  field( TWVL, "34")
  field( THVL, "35")
  field( FRVL, "36")
  field( FVVL, "37")
  field( SXVL, "38")
  field( SVVL, "39")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut3-Src-Scale-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut3-Src-SP PP")
  field( ZRST, "Prescaler 0")
  field( ONST, "Prescaler 1")
  field( TWST, "Prescaler 2")
  field( ZRVL, "40")
  field( ONVL, "41")
  field( TWVL, "42")
  field( THST, "Force Low")
  field( FRST, "Force High")
  field( THVL, "63")
  field( FRVL, "62")
  field( VAL , "3")
  field( FVSV, "INVALID")
  field( SXSV, "INVALID")
  field( SVSV, "INVALID")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

# Mapping readback

record(longin, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut3-Src-RB") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "UNIV3")
  field( INP , "@OBJ=$(EVR,recursive):FrontUnivOut3, PROP=Map")
  field( FLNK, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut3-Src-Pulse-RB")
}

record(mbbi, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut3-Src-Pulse-RB") {
  field( DTYP, "Raw Soft Channel")
  field( INP , "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut3-Src-RB")
  field( ZRST, "Pulser 0")
  field( ONST, "Pulser 1")
  field( TWST, "Pulser 2")
  field( THST, "Pulser 3")
  field( FRST, "Pulser 4")
  field( FVST, "Pulser 5")
  field( SXST, "Pulser 6")
  field( SVST, "Pulser 7")
  field( EIST, "Pulser 8")
  field( NIST, "Pulser 9")
  field( TEST, "Pulser 10")
  field( ELST, "Pulser 11")
  field( TVST, "Pulser 12")
  field( TTST, "Pulser 13")
  field( FTST, "Pulser 14")
  field( FFST, "Pulser 15")
  field( ZRVL, "0")
  field( ONVL, "1")
  field( TWVL, "2")
  field( THVL, "3")
  field( FRVL, "4")
  field( FVVL, "5")
  field( SXVL, "6")
  field( SVVL, "7")
  field( EIVL, "8")
  field( NIVL, "9")
  field( TEVL, "10")
  field( ELVL, "11")
  field( TVVL, "12")
  field( TTVL, "13")
  field( FTVL, "14")
  field( FFVL, "15")
  field( UNSV, "MAJOR")
  field( FLNK, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut3-Src-DBus-RB")
}

record(mbbi, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut3-Src-DBus-RB") {
  field( DTYP, "Raw Soft Channel")
  field( INP , "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut3-Src-RB")
  field( ZRST, "DBus 0")
  field( ONST, "DBus 1")
  field( TWST, "DBus 2")
  field( THST, "DBus 3")
  field( FRST, "DBus 4")
  field( FVST, "DBus 5")
  field( SXST, "DBus 6")
  field( SVST, "DBus 7")
  field( ZRVL, "32")
  field( ONVL, "33")
  field( TWVL, "34")
  field( THVL, "35")
  field( FRVL, "36")
  field( FVVL, "37")
  field( SXVL, "38")
  field( SVVL, "39")
  field( EISV, "MAJOR")
  field( NISV, "MAJOR")
  field( TESV, "MAJOR")
  field( ELSV, "MAJOR")
  field( TVSV, "MAJOR")
  field( TTSV, "MAJOR")
  field( FTSV, "MAJOR")
  field( FFSV, "MAJOR")
  field( UNSV, "MAJOR")
  field( FLNK, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut3-Src-Scale-RB")
}

record(mbbi, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut3-Src-Scale-RB") {
  field( DTYP, "Raw Soft Channel")
  field( INP , "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut3-Src-RB")
  field( ZRST, "Prescaler 0")
  field( ONST, "Prescaler 1")
  field( TWST, "Prescaler 2")
  field( ZRVL, "40")
  field( ONVL, "41")
  field( TWVL, "42")
  field( THST, "Force Low")
  field( FRST, "Force High")
  field( THVL, "63")
  field( FRVL, "62")
  field( FVSV, "MAJOR")
  field( SXSV, "MAJOR")
  field( SVSV, "MAJOR")
  field( EISV, "MAJOR")
  field( NISV, "MAJOR")
  field( TESV, "MAJOR")
  field( ELSV, "MAJOR")
  field( TVSV, "MAJOR")
  field( TTSV, "MAJOR")
  field( FTSV, "MAJOR")
  field( FFSV, "MAJOR")
  field( UNSV, "MAJOR")
  field( UNSV, "MAJOR")
}

# Select which is displayed

# Place for user provided note of what is
# connected to this output.
record(waveform, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut3-User-SP") {
  field( DESC, "Desc. of user or purpose")
  field( FTVL, "CHAR")
  field( NELM, "128")
  field( NORD, "1") # default include null termination
  info(autosaveFields_pass1, "VAL")
}
# Record set for an EVR's physical output
#
# Macros-
#  SYS = System name
#  EVR = EVR devObj name
#  ID  = ID # of the output
#  OBJ = devObj name prefix
#  DESC = Physical label found on output jack

record(bo, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut4-Ena-SP") {
  field( DTYP, "Obj Prop bool")
  field( DESC, "Output UNIV4")
  field( OUT , "@OBJ=$(EVR,recursive):FrontUnivOut4, PROP=Enable")
  field( PINI, "YES")
  field( ZNAM, "Disabled")
  field( ONAM, "Enabled")
  field( VAL , "$(FrontUnivOut4-Ena-SP=1,undefined)") # Default to enabled
  info(autosaveFields_pass0, "VAL")
}

record(longout, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut4-Src-SP") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "UNIV4")
  field( OUT , "@OBJ=$(EVR,recursive):FrontUnivOut4, PROP=Map")
  field( FLNK, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut4-Src-RB")
  field( PINI, "YES")
  field( VAL , "$(FrontUnivOut4-Src-SP=63,undefined)")  # Defaults to Force high (if enabled -> Ena-SP)
  info(autosaveFields_pass0, "VAL HOPR LOPR DRVH DRVL")
}

# Settings
# Users use will set one of these at a time.

record(mbbo, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut4-Src-Pulse-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut4-Src-SP PP")
  field( ZRST, "Pulser 0")
  field( ONST, "Pulser 1")
  field( TWST, "Pulser 2")
  field( THST, "Pulser 3")
  field( FRST, "Pulser 4")
  field( FVST, "Pulser 5")
  field( SXST, "Pulser 6")
  field( SVST, "Pulser 7")
  field( EIST, "Pulser 8")
  field( NIST, "Pulser 9")
  field( TEST, "Pulser 10")
  field( ELST, "Pulser 11")
  field( TVST, "Pulser 12")
  field( TTST, "Pulser 13")
  field( FTST, "Pulser 14")
  field( FFST, "Pulser 15")
  field( ZRVL, "0")
  field( ONVL, "1")
  field( TWVL, "2")
  field( THVL, "3")
  field( FRVL, "4")
  field( FVVL, "5")
  field( SXVL, "6")
  field( SVVL, "7")
  field( EIVL, "8")
  field( NIVL, "9")
  field( TEVL, "10")
  field( ELVL, "11")
  field( TVVL, "12")
  field( TTVL, "13")
  field( FTVL, "14")
  field( FFVL, "15")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut4-Src-DBus-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut4-Src-SP PP")
  field( ZRST, "DBus 0")
  field( ONST, "DBus 1")
  field( TWST, "DBus 2")
  field( THST, "DBus 3")
  field( FRST, "DBus 4")
  field( FVST, "DBus 5")
  field( SXST, "DBus 6")
  field( SVST, "DBus 7")
  field( ZRVL, "32")
  field( ONVL, "33")
  field( TWVL, "34")
  field( THVL, "35")
  field( FRVL, "36")
  field( FVVL, "37")
  field( SXVL, "38")
  field( SVVL, "39")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut4-Src-Scale-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut4-Src-SP PP")
  field( ZRST, "Prescaler 0")
  field( ONST, "Prescaler 1")
  field( TWST, "Prescaler 2")
  field( ZRVL, "40")
  field( ONVL, "41")
  field( TWVL, "42")
  field( THST, "Force Low")
  field( FRST, "Force High")
  field( THVL, "63")
  field( FRVL, "62")
  field( VAL , "3")
  field( FVSV, "INVALID")
  field( SXSV, "INVALID")
  field( SVSV, "INVALID")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

# Mapping readback

record(longin, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut4-Src-RB") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "UNIV4")
  field( INP , "@OBJ=$(EVR,recursive):FrontUnivOut4, PROP=Map")
  field( FLNK, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut4-Src-Pulse-RB")
}

record(mbbi, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut4-Src-Pulse-RB") {
  field( DTYP, "Raw Soft Channel")
  field( INP , "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut4-Src-RB")
  field( ZRST, "Pulser 0")
  field( ONST, "Pulser 1")
  field( TWST, "Pulser 2")
  field( THST, "Pulser 3")
  field( FRST, "Pulser 4")
  field( FVST, "Pulser 5")
  field( SXST, "Pulser 6")
  field( SVST, "Pulser 7")
  field( EIST, "Pulser 8")
  field( NIST, "Pulser 9")
  field( TEST, "Pulser 10")
  field( ELST, "Pulser 11")
  field( TVST, "Pulser 12")
  field( TTST, "Pulser 13")
  field( FTST, "Pulser 14")
  field( FFST, "Pulser 15")
  field( ZRVL, "0")
  field( ONVL, "1")
  field( TWVL, "2")
  field( THVL, "3")
  field( FRVL, "4")
  field( FVVL, "5")
  field( SXVL, "6")
  field( SVVL, "7")
  field( EIVL, "8")
  field( NIVL, "9")
  field( TEVL, "10")
  field( ELVL, "11")
  field( TVVL, "12")
  field( TTVL, "13")
  field( FTVL, "14")
  field( FFVL, "15")
  field( UNSV, "MAJOR")
  field( FLNK, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut4-Src-DBus-RB")
}

record(mbbi, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut4-Src-DBus-RB") {
  field( DTYP, "Raw Soft Channel")
  field( INP , "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut4-Src-RB")
  field( ZRST, "DBus 0")
  field( ONST, "DBus 1")
  field( TWST, "DBus 2")
  field( THST, "DBus 3")
  field( FRST, "DBus 4")
  field( FVST, "DBus 5")
  field( SXST, "DBus 6")
  field( SVST, "DBus 7")
  field( ZRVL, "32")
  field( ONVL, "33")
  field( TWVL, "34")
  field( THVL, "35")
  field( FRVL, "36")
  field( FVVL, "37")
  field( SXVL, "38")
  field( SVVL, "39")
  field( EISV, "MAJOR")
  field( NISV, "MAJOR")
  field( TESV, "MAJOR")
  field( ELSV, "MAJOR")
  field( TVSV, "MAJOR")
  field( TTSV, "MAJOR")
  field( FTSV, "MAJOR")
  field( FFSV, "MAJOR")
  field( UNSV, "MAJOR")
  field( FLNK, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut4-Src-Scale-RB")
}

record(mbbi, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut4-Src-Scale-RB") {
  field( DTYP, "Raw Soft Channel")
  field( INP , "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut4-Src-RB")
  field( ZRST, "Prescaler 0")
  field( ONST, "Prescaler 1")
  field( TWST, "Prescaler 2")
  field( ZRVL, "40")
  field( ONVL, "41")
  field( TWVL, "42")
  field( THST, "Force Low")
  field( FRST, "Force High")
  field( THVL, "63")
  field( FRVL, "62")
  field( FVSV, "MAJOR")
  field( SXSV, "MAJOR")
  field( SVSV, "MAJOR")
  field( EISV, "MAJOR")
  field( NISV, "MAJOR")
  field( TESV, "MAJOR")
  field( ELSV, "MAJOR")
  field( TVSV, "MAJOR")
  field( TTSV, "MAJOR")
  field( FTSV, "MAJOR")
  field( FFSV, "MAJOR")
  field( UNSV, "MAJOR")
  field( UNSV, "MAJOR")
}

# Select which is displayed

# Place for user provided note of what is
# connected to this output.
record(waveform, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut4-User-SP") {
  field( DESC, "Desc. of user or purpose")
  field( FTVL, "CHAR")
  field( NELM, "128")
  field( NORD, "1") # default include null termination
  info(autosaveFields_pass1, "VAL")
}
# Record set for an EVR's physical output
#
# Macros-
#  SYS = System name
#  EVR = EVR devObj name
#  ID  = ID # of the output
#  OBJ = devObj name prefix
#  DESC = Physical label found on output jack

record(bo, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut5-Ena-SP") {
  field( DTYP, "Obj Prop bool")
  field( DESC, "Output UNIV5")
  field( OUT , "@OBJ=$(EVR,recursive):FrontUnivOut5, PROP=Enable")
  field( PINI, "YES")
  field( ZNAM, "Disabled")
  field( ONAM, "Enabled")
  field( VAL , "$(FrontUnivOut5-Ena-SP=1,undefined)") # Default to enabled
  info(autosaveFields_pass0, "VAL")
}

record(longout, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut5-Src-SP") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "UNIV5")
  field( OUT , "@OBJ=$(EVR,recursive):FrontUnivOut5, PROP=Map")
  field( FLNK, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut5-Src-RB")
  field( PINI, "YES")
  field( VAL , "$(FrontUnivOut5-Src-SP=63,undefined)")  # Defaults to Force high (if enabled -> Ena-SP)
  info(autosaveFields_pass0, "VAL HOPR LOPR DRVH DRVL")
}

# Settings
# Users use will set one of these at a time.

record(mbbo, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut5-Src-Pulse-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut5-Src-SP PP")
  field( ZRST, "Pulser 0")
  field( ONST, "Pulser 1")
  field( TWST, "Pulser 2")
  field( THST, "Pulser 3")
  field( FRST, "Pulser 4")
  field( FVST, "Pulser 5")
  field( SXST, "Pulser 6")
  field( SVST, "Pulser 7")
  field( EIST, "Pulser 8")
  field( NIST, "Pulser 9")
  field( TEST, "Pulser 10")
  field( ELST, "Pulser 11")
  field( TVST, "Pulser 12")
  field( TTST, "Pulser 13")
  field( FTST, "Pulser 14")
  field( FFST, "Pulser 15")
  field( ZRVL, "0")
  field( ONVL, "1")
  field( TWVL, "2")
  field( THVL, "3")
  field( FRVL, "4")
  field( FVVL, "5")
  field( SXVL, "6")
  field( SVVL, "7")
  field( EIVL, "8")
  field( NIVL, "9")
  field( TEVL, "10")
  field( ELVL, "11")
  field( TVVL, "12")
  field( TTVL, "13")
  field( FTVL, "14")
  field( FFVL, "15")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut5-Src-DBus-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut5-Src-SP PP")
  field( ZRST, "DBus 0")
  field( ONST, "DBus 1")
  field( TWST, "DBus 2")
  field( THST, "DBus 3")
  field( FRST, "DBus 4")
  field( FVST, "DBus 5")
  field( SXST, "DBus 6")
  field( SVST, "DBus 7")
  field( ZRVL, "32")
  field( ONVL, "33")
  field( TWVL, "34")
  field( THVL, "35")
  field( FRVL, "36")
  field( FVVL, "37")
  field( SXVL, "38")
  field( SVVL, "39")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut5-Src-Scale-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut5-Src-SP PP")
  field( ZRST, "Prescaler 0")
  field( ONST, "Prescaler 1")
  field( TWST, "Prescaler 2")
  field( ZRVL, "40")
  field( ONVL, "41")
  field( TWVL, "42")
  field( THST, "Force Low")
  field( FRST, "Force High")
  field( THVL, "63")
  field( FRVL, "62")
  field( VAL , "3")
  field( FVSV, "INVALID")
  field( SXSV, "INVALID")
  field( SVSV, "INVALID")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

# Mapping readback

record(longin, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut5-Src-RB") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "UNIV5")
  field( INP , "@OBJ=$(EVR,recursive):FrontUnivOut5, PROP=Map")
  field( FLNK, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut5-Src-Pulse-RB")
}

record(mbbi, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut5-Src-Pulse-RB") {
  field( DTYP, "Raw Soft Channel")
  field( INP , "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut5-Src-RB")
  field( ZRST, "Pulser 0")
  field( ONST, "Pulser 1")
  field( TWST, "Pulser 2")
  field( THST, "Pulser 3")
  field( FRST, "Pulser 4")
  field( FVST, "Pulser 5")
  field( SXST, "Pulser 6")
  field( SVST, "Pulser 7")
  field( EIST, "Pulser 8")
  field( NIST, "Pulser 9")
  field( TEST, "Pulser 10")
  field( ELST, "Pulser 11")
  field( TVST, "Pulser 12")
  field( TTST, "Pulser 13")
  field( FTST, "Pulser 14")
  field( FFST, "Pulser 15")
  field( ZRVL, "0")
  field( ONVL, "1")
  field( TWVL, "2")
  field( THVL, "3")
  field( FRVL, "4")
  field( FVVL, "5")
  field( SXVL, "6")
  field( SVVL, "7")
  field( EIVL, "8")
  field( NIVL, "9")
  field( TEVL, "10")
  field( ELVL, "11")
  field( TVVL, "12")
  field( TTVL, "13")
  field( FTVL, "14")
  field( FFVL, "15")
  field( UNSV, "MAJOR")
  field( FLNK, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut5-Src-DBus-RB")
}

record(mbbi, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut5-Src-DBus-RB") {
  field( DTYP, "Raw Soft Channel")
  field( INP , "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut5-Src-RB")
  field( ZRST, "DBus 0")
  field( ONST, "DBus 1")
  field( TWST, "DBus 2")
  field( THST, "DBus 3")
  field( FRST, "DBus 4")
  field( FVST, "DBus 5")
  field( SXST, "DBus 6")
  field( SVST, "DBus 7")
  field( ZRVL, "32")
  field( ONVL, "33")
  field( TWVL, "34")
  field( THVL, "35")
  field( FRVL, "36")
  field( FVVL, "37")
  field( SXVL, "38")
  field( SVVL, "39")
  field( EISV, "MAJOR")
  field( NISV, "MAJOR")
  field( TESV, "MAJOR")
  field( ELSV, "MAJOR")
  field( TVSV, "MAJOR")
  field( TTSV, "MAJOR")
  field( FTSV, "MAJOR")
  field( FFSV, "MAJOR")
  field( UNSV, "MAJOR")
  field( FLNK, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut5-Src-Scale-RB")
}

record(mbbi, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut5-Src-Scale-RB") {
  field( DTYP, "Raw Soft Channel")
  field( INP , "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut5-Src-RB")
  field( ZRST, "Prescaler 0")
  field( ONST, "Prescaler 1")
  field( TWST, "Prescaler 2")
  field( ZRVL, "40")
  field( ONVL, "41")
  field( TWVL, "42")
  field( THST, "Force Low")
  field( FRST, "Force High")
  field( THVL, "63")
  field( FRVL, "62")
  field( FVSV, "MAJOR")
  field( SXSV, "MAJOR")
  field( SVSV, "MAJOR")
  field( EISV, "MAJOR")
  field( NISV, "MAJOR")
  field( TESV, "MAJOR")
  field( ELSV, "MAJOR")
  field( TVSV, "MAJOR")
  field( TTSV, "MAJOR")
  field( FTSV, "MAJOR")
  field( FFSV, "MAJOR")
  field( UNSV, "MAJOR")
  field( UNSV, "MAJOR")
}

# Select which is displayed

# Place for user provided note of what is
# connected to this output.
record(waveform, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut5-User-SP") {
  field( DESC, "Desc. of user or purpose")
  field( FTVL, "CHAR")
  field( NELM, "128")
  field( NORD, "1") # default include null termination
  info(autosaveFields_pass1, "VAL")
}
# Record set for an EVR's physical output
#
# Macros-
#  SYS = System name
#  EVR = EVR devObj name
#  ID  = ID # of the output
#  OBJ = devObj name prefix
#  DESC = Physical label found on output jack

record(bo, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut6-Ena-SP") {
  field( DTYP, "Obj Prop bool")
  field( DESC, "Output UNIV6")
  field( OUT , "@OBJ=$(EVR,recursive):FrontUnivOut6, PROP=Enable")
  field( PINI, "YES")
  field( ZNAM, "Disabled")
  field( ONAM, "Enabled")
  field( VAL , "$(FrontUnivOut6-Ena-SP=1,undefined)") # Default to enabled
  info(autosaveFields_pass0, "VAL")
}

record(longout, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut6-Src-SP") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "UNIV6")
  field( OUT , "@OBJ=$(EVR,recursive):FrontUnivOut6, PROP=Map")
  field( FLNK, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut6-Src-RB")
  field( PINI, "YES")
  field( VAL , "$(FrontUnivOut6-Src-SP=63,undefined)")  # Defaults to Force high (if enabled -> Ena-SP)
  info(autosaveFields_pass0, "VAL HOPR LOPR DRVH DRVL")
}

# Settings
# Users use will set one of these at a time.

record(mbbo, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut6-Src-Pulse-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut6-Src-SP PP")
  field( ZRST, "Pulser 0")
  field( ONST, "Pulser 1")
  field( TWST, "Pulser 2")
  field( THST, "Pulser 3")
  field( FRST, "Pulser 4")
  field( FVST, "Pulser 5")
  field( SXST, "Pulser 6")
  field( SVST, "Pulser 7")
  field( EIST, "Pulser 8")
  field( NIST, "Pulser 9")
  field( TEST, "Pulser 10")
  field( ELST, "Pulser 11")
  field( TVST, "Pulser 12")
  field( TTST, "Pulser 13")
  field( FTST, "Pulser 14")
  field( FFST, "Pulser 15")
  field( ZRVL, "0")
  field( ONVL, "1")
  field( TWVL, "2")
  field( THVL, "3")
  field( FRVL, "4")
  field( FVVL, "5")
  field( SXVL, "6")
  field( SVVL, "7")
  field( EIVL, "8")
  field( NIVL, "9")
  field( TEVL, "10")
  field( ELVL, "11")
  field( TVVL, "12")
  field( TTVL, "13")
  field( FTVL, "14")
  field( FFVL, "15")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut6-Src-DBus-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut6-Src-SP PP")
  field( ZRST, "DBus 0")
  field( ONST, "DBus 1")
  field( TWST, "DBus 2")
  field( THST, "DBus 3")
  field( FRST, "DBus 4")
  field( FVST, "DBus 5")
  field( SXST, "DBus 6")
  field( SVST, "DBus 7")
  field( ZRVL, "32")
  field( ONVL, "33")
  field( TWVL, "34")
  field( THVL, "35")
  field( FRVL, "36")
  field( FVVL, "37")
  field( SXVL, "38")
  field( SVVL, "39")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut6-Src-Scale-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut6-Src-SP PP")
  field( ZRST, "Prescaler 0")
  field( ONST, "Prescaler 1")
  field( TWST, "Prescaler 2")
  field( ZRVL, "40")
  field( ONVL, "41")
  field( TWVL, "42")
  field( THST, "Force Low")
  field( FRST, "Force High")
  field( THVL, "63")
  field( FRVL, "62")
  field( VAL , "3")
  field( FVSV, "INVALID")
  field( SXSV, "INVALID")
  field( SVSV, "INVALID")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

# Mapping readback

record(longin, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut6-Src-RB") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "UNIV6")
  field( INP , "@OBJ=$(EVR,recursive):FrontUnivOut6, PROP=Map")
  field( FLNK, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut6-Src-Pulse-RB")
}

record(mbbi, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut6-Src-Pulse-RB") {
  field( DTYP, "Raw Soft Channel")
  field( INP , "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut6-Src-RB")
  field( ZRST, "Pulser 0")
  field( ONST, "Pulser 1")
  field( TWST, "Pulser 2")
  field( THST, "Pulser 3")
  field( FRST, "Pulser 4")
  field( FVST, "Pulser 5")
  field( SXST, "Pulser 6")
  field( SVST, "Pulser 7")
  field( EIST, "Pulser 8")
  field( NIST, "Pulser 9")
  field( TEST, "Pulser 10")
  field( ELST, "Pulser 11")
  field( TVST, "Pulser 12")
  field( TTST, "Pulser 13")
  field( FTST, "Pulser 14")
  field( FFST, "Pulser 15")
  field( ZRVL, "0")
  field( ONVL, "1")
  field( TWVL, "2")
  field( THVL, "3")
  field( FRVL, "4")
  field( FVVL, "5")
  field( SXVL, "6")
  field( SVVL, "7")
  field( EIVL, "8")
  field( NIVL, "9")
  field( TEVL, "10")
  field( ELVL, "11")
  field( TVVL, "12")
  field( TTVL, "13")
  field( FTVL, "14")
  field( FFVL, "15")
  field( UNSV, "MAJOR")
  field( FLNK, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut6-Src-DBus-RB")
}

record(mbbi, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut6-Src-DBus-RB") {
  field( DTYP, "Raw Soft Channel")
  field( INP , "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut6-Src-RB")
  field( ZRST, "DBus 0")
  field( ONST, "DBus 1")
  field( TWST, "DBus 2")
  field( THST, "DBus 3")
  field( FRST, "DBus 4")
  field( FVST, "DBus 5")
  field( SXST, "DBus 6")
  field( SVST, "DBus 7")
  field( ZRVL, "32")
  field( ONVL, "33")
  field( TWVL, "34")
  field( THVL, "35")
  field( FRVL, "36")
  field( FVVL, "37")
  field( SXVL, "38")
  field( SVVL, "39")
  field( EISV, "MAJOR")
  field( NISV, "MAJOR")
  field( TESV, "MAJOR")
  field( ELSV, "MAJOR")
  field( TVSV, "MAJOR")
  field( TTSV, "MAJOR")
  field( FTSV, "MAJOR")
  field( FFSV, "MAJOR")
  field( UNSV, "MAJOR")
  field( FLNK, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut6-Src-Scale-RB")
}

record(mbbi, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut6-Src-Scale-RB") {
  field( DTYP, "Raw Soft Channel")
  field( INP , "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut6-Src-RB")
  field( ZRST, "Prescaler 0")
  field( ONST, "Prescaler 1")
  field( TWST, "Prescaler 2")
  field( ZRVL, "40")
  field( ONVL, "41")
  field( TWVL, "42")
  field( THST, "Force Low")
  field( FRST, "Force High")
  field( THVL, "63")
  field( FRVL, "62")
  field( FVSV, "MAJOR")
  field( SXSV, "MAJOR")
  field( SVSV, "MAJOR")
  field( EISV, "MAJOR")
  field( NISV, "MAJOR")
  field( TESV, "MAJOR")
  field( ELSV, "MAJOR")
  field( TVSV, "MAJOR")
  field( TTSV, "MAJOR")
  field( FTSV, "MAJOR")
  field( FFSV, "MAJOR")
  field( UNSV, "MAJOR")
  field( UNSV, "MAJOR")
}

# Select which is displayed

# Place for user provided note of what is
# connected to this output.
record(waveform, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut6-User-SP") {
  field( DESC, "Desc. of user or purpose")
  field( FTVL, "CHAR")
  field( NELM, "128")
  field( NORD, "1") # default include null termination
  info(autosaveFields_pass1, "VAL")
}
# Record set for an EVR's physical output
#
# Macros-
#  SYS = System name
#  EVR = EVR devObj name
#  ID  = ID # of the output
#  OBJ = devObj name prefix
#  DESC = Physical label found on output jack

record(bo, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut7-Ena-SP") {
  field( DTYP, "Obj Prop bool")
  field( DESC, "Output UNIV7")
  field( OUT , "@OBJ=$(EVR,recursive):FrontUnivOut7, PROP=Enable")
  field( PINI, "YES")
  field( ZNAM, "Disabled")
  field( ONAM, "Enabled")
  field( VAL , "$(FrontUnivOut7-Ena-SP=1,undefined)") # Default to enabled
  info(autosaveFields_pass0, "VAL")
}

record(longout, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut7-Src-SP") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "UNIV7")
  field( OUT , "@OBJ=$(EVR,recursive):FrontUnivOut7, PROP=Map")
  field( FLNK, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut7-Src-RB")
  field( PINI, "YES")
  field( VAL , "$(FrontUnivOut7-Src-SP=63,undefined)")  # Defaults to Force high (if enabled -> Ena-SP)
  info(autosaveFields_pass0, "VAL HOPR LOPR DRVH DRVL")
}

# Settings
# Users use will set one of these at a time.

record(mbbo, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut7-Src-Pulse-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut7-Src-SP PP")
  field( ZRST, "Pulser 0")
  field( ONST, "Pulser 1")
  field( TWST, "Pulser 2")
  field( THST, "Pulser 3")
  field( FRST, "Pulser 4")
  field( FVST, "Pulser 5")
  field( SXST, "Pulser 6")
  field( SVST, "Pulser 7")
  field( EIST, "Pulser 8")
  field( NIST, "Pulser 9")
  field( TEST, "Pulser 10")
  field( ELST, "Pulser 11")
  field( TVST, "Pulser 12")
  field( TTST, "Pulser 13")
  field( FTST, "Pulser 14")
  field( FFST, "Pulser 15")
  field( ZRVL, "0")
  field( ONVL, "1")
  field( TWVL, "2")
  field( THVL, "3")
  field( FRVL, "4")
  field( FVVL, "5")
  field( SXVL, "6")
  field( SVVL, "7")
  field( EIVL, "8")
  field( NIVL, "9")
  field( TEVL, "10")
  field( ELVL, "11")
  field( TVVL, "12")
  field( TTVL, "13")
  field( FTVL, "14")
  field( FFVL, "15")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut7-Src-DBus-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut7-Src-SP PP")
  field( ZRST, "DBus 0")
  field( ONST, "DBus 1")
  field( TWST, "DBus 2")
  field( THST, "DBus 3")
  field( FRST, "DBus 4")
  field( FVST, "DBus 5")
  field( SXST, "DBus 6")
  field( SVST, "DBus 7")
  field( ZRVL, "32")
  field( ONVL, "33")
  field( TWVL, "34")
  field( THVL, "35")
  field( FRVL, "36")
  field( FVVL, "37")
  field( SXVL, "38")
  field( SVVL, "39")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut7-Src-Scale-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut7-Src-SP PP")
  field( ZRST, "Prescaler 0")
  field( ONST, "Prescaler 1")
  field( TWST, "Prescaler 2")
  field( ZRVL, "40")
  field( ONVL, "41")
  field( TWVL, "42")
  field( THST, "Force Low")
  field( FRST, "Force High")
  field( THVL, "63")
  field( FRVL, "62")
  field( VAL , "3")
  field( FVSV, "INVALID")
  field( SXSV, "INVALID")
  field( SVSV, "INVALID")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

# Mapping readback

record(longin, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut7-Src-RB") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "UNIV7")
  field( INP , "@OBJ=$(EVR,recursive):FrontUnivOut7, PROP=Map")
  field( FLNK, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut7-Src-Pulse-RB")
}

record(mbbi, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut7-Src-Pulse-RB") {
  field( DTYP, "Raw Soft Channel")
  field( INP , "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut7-Src-RB")
  field( ZRST, "Pulser 0")
  field( ONST, "Pulser 1")
  field( TWST, "Pulser 2")
  field( THST, "Pulser 3")
  field( FRST, "Pulser 4")
  field( FVST, "Pulser 5")
  field( SXST, "Pulser 6")
  field( SVST, "Pulser 7")
  field( EIST, "Pulser 8")
  field( NIST, "Pulser 9")
  field( TEST, "Pulser 10")
  field( ELST, "Pulser 11")
  field( TVST, "Pulser 12")
  field( TTST, "Pulser 13")
  field( FTST, "Pulser 14")
  field( FFST, "Pulser 15")
  field( ZRVL, "0")
  field( ONVL, "1")
  field( TWVL, "2")
  field( THVL, "3")
  field( FRVL, "4")
  field( FVVL, "5")
  field( SXVL, "6")
  field( SVVL, "7")
  field( EIVL, "8")
  field( NIVL, "9")
  field( TEVL, "10")
  field( ELVL, "11")
  field( TVVL, "12")
  field( TTVL, "13")
  field( FTVL, "14")
  field( FFVL, "15")
  field( UNSV, "MAJOR")
  field( FLNK, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut7-Src-DBus-RB")
}

record(mbbi, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut7-Src-DBus-RB") {
  field( DTYP, "Raw Soft Channel")
  field( INP , "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut7-Src-RB")
  field( ZRST, "DBus 0")
  field( ONST, "DBus 1")
  field( TWST, "DBus 2")
  field( THST, "DBus 3")
  field( FRST, "DBus 4")
  field( FVST, "DBus 5")
  field( SXST, "DBus 6")
  field( SVST, "DBus 7")
  field( ZRVL, "32")
  field( ONVL, "33")
  field( TWVL, "34")
  field( THVL, "35")
  field( FRVL, "36")
  field( FVVL, "37")
  field( SXVL, "38")
  field( SVVL, "39")
  field( EISV, "MAJOR")
  field( NISV, "MAJOR")
  field( TESV, "MAJOR")
  field( ELSV, "MAJOR")
  field( TVSV, "MAJOR")
  field( TTSV, "MAJOR")
  field( FTSV, "MAJOR")
  field( FFSV, "MAJOR")
  field( UNSV, "MAJOR")
  field( FLNK, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut7-Src-Scale-RB")
}

record(mbbi, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut7-Src-Scale-RB") {
  field( DTYP, "Raw Soft Channel")
  field( INP , "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut7-Src-RB")
  field( ZRST, "Prescaler 0")
  field( ONST, "Prescaler 1")
  field( TWST, "Prescaler 2")
  field( ZRVL, "40")
  field( ONVL, "41")
  field( TWVL, "42")
  field( THST, "Force Low")
  field( FRST, "Force High")
  field( THVL, "63")
  field( FRVL, "62")
  field( FVSV, "MAJOR")
  field( SXSV, "MAJOR")
  field( SVSV, "MAJOR")
  field( EISV, "MAJOR")
  field( NISV, "MAJOR")
  field( TESV, "MAJOR")
  field( ELSV, "MAJOR")
  field( TVSV, "MAJOR")
  field( TTSV, "MAJOR")
  field( FTSV, "MAJOR")
  field( FFSV, "MAJOR")
  field( UNSV, "MAJOR")
  field( UNSV, "MAJOR")
}

# Select which is displayed

# Place for user provided note of what is
# connected to this output.
record(waveform, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut7-User-SP") {
  field( DESC, "Desc. of user or purpose")
  field( FTVL, "CHAR")
  field( NELM, "128")
  field( NORD, "1") # default include null termination
  info(autosaveFields_pass1, "VAL")
}
# Record set for an EVR's physical output
#
# Macros-
#  SYS = System name
#  EVR = EVR devObj name
#  ID  = ID # of the output
#  OBJ = devObj name prefix
#  DESC = Physical label found on output jack

record(bo, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut8-Ena-SP") {
  field( DTYP, "Obj Prop bool")
  field( DESC, "Output UNIV8")
  field( OUT , "@OBJ=$(EVR,recursive):FrontUnivOut8, PROP=Enable")
  field( PINI, "YES")
  field( ZNAM, "Disabled")
  field( ONAM, "Enabled")
  field( VAL , "$(FrontUnivOut8-Ena-SP=1,undefined)") # Default to enabled
  info(autosaveFields_pass0, "VAL")
}

record(longout, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut8-Src-SP") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "UNIV8")
  field( OUT , "@OBJ=$(EVR,recursive):FrontUnivOut8, PROP=Map")
  field( FLNK, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut8-Src-RB")
  field( PINI, "YES")
  field( VAL , "$(FrontUnivOut8-Src-SP=63,undefined)")  # Defaults to Force high (if enabled -> Ena-SP)
  info(autosaveFields_pass0, "VAL HOPR LOPR DRVH DRVL")
}

# Settings
# Users use will set one of these at a time.

record(mbbo, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut8-Src-Pulse-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut8-Src-SP PP")
  field( ZRST, "Pulser 0")
  field( ONST, "Pulser 1")
  field( TWST, "Pulser 2")
  field( THST, "Pulser 3")
  field( FRST, "Pulser 4")
  field( FVST, "Pulser 5")
  field( SXST, "Pulser 6")
  field( SVST, "Pulser 7")
  field( EIST, "Pulser 8")
  field( NIST, "Pulser 9")
  field( TEST, "Pulser 10")
  field( ELST, "Pulser 11")
  field( TVST, "Pulser 12")
  field( TTST, "Pulser 13")
  field( FTST, "Pulser 14")
  field( FFST, "Pulser 15")
  field( ZRVL, "0")
  field( ONVL, "1")
  field( TWVL, "2")
  field( THVL, "3")
  field( FRVL, "4")
  field( FVVL, "5")
  field( SXVL, "6")
  field( SVVL, "7")
  field( EIVL, "8")
  field( NIVL, "9")
  field( TEVL, "10")
  field( ELVL, "11")
  field( TVVL, "12")
  field( TTVL, "13")
  field( FTVL, "14")
  field( FFVL, "15")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut8-Src-DBus-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut8-Src-SP PP")
  field( ZRST, "DBus 0")
  field( ONST, "DBus 1")
  field( TWST, "DBus 2")
  field( THST, "DBus 3")
  field( FRST, "DBus 4")
  field( FVST, "DBus 5")
  field( SXST, "DBus 6")
  field( SVST, "DBus 7")
  field( ZRVL, "32")
  field( ONVL, "33")
  field( TWVL, "34")
  field( THVL, "35")
  field( FRVL, "36")
  field( FVVL, "37")
  field( SXVL, "38")
  field( SVVL, "39")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut8-Src-Scale-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut8-Src-SP PP")
  field( ZRST, "Prescaler 0")
  field( ONST, "Prescaler 1")
  field( TWST, "Prescaler 2")
  field( ZRVL, "40")
  field( ONVL, "41")
  field( TWVL, "42")
  field( THST, "Force Low")
  field( FRST, "Force High")
  field( THVL, "63")
  field( FRVL, "62")
  field( VAL , "3")
  field( FVSV, "INVALID")
  field( SXSV, "INVALID")
  field( SVSV, "INVALID")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

# Mapping readback

record(longin, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut8-Src-RB") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "UNIV8")
  field( INP , "@OBJ=$(EVR,recursive):FrontUnivOut8, PROP=Map")
  field( FLNK, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut8-Src-Pulse-RB")
}

record(mbbi, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut8-Src-Pulse-RB") {
  field( DTYP, "Raw Soft Channel")
  field( INP , "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut8-Src-RB")
  field( ZRST, "Pulser 0")
  field( ONST, "Pulser 1")
  field( TWST, "Pulser 2")
  field( THST, "Pulser 3")
  field( FRST, "Pulser 4")
  field( FVST, "Pulser 5")
  field( SXST, "Pulser 6")
  field( SVST, "Pulser 7")
  field( EIST, "Pulser 8")
  field( NIST, "Pulser 9")
  field( TEST, "Pulser 10")
  field( ELST, "Pulser 11")
  field( TVST, "Pulser 12")
  field( TTST, "Pulser 13")
  field( FTST, "Pulser 14")
  field( FFST, "Pulser 15")
  field( ZRVL, "0")
  field( ONVL, "1")
  field( TWVL, "2")
  field( THVL, "3")
  field( FRVL, "4")
  field( FVVL, "5")
  field( SXVL, "6")
  field( SVVL, "7")
  field( EIVL, "8")
  field( NIVL, "9")
  field( TEVL, "10")
  field( ELVL, "11")
  field( TVVL, "12")
  field( TTVL, "13")
  field( FTVL, "14")
  field( FFVL, "15")
  field( UNSV, "MAJOR")
  field( FLNK, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut8-Src-DBus-RB")
}

record(mbbi, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut8-Src-DBus-RB") {
  field( DTYP, "Raw Soft Channel")
  field( INP , "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut8-Src-RB")
  field( ZRST, "DBus 0")
  field( ONST, "DBus 1")
  field( TWST, "DBus 2")
  field( THST, "DBus 3")
  field( FRST, "DBus 4")
  field( FVST, "DBus 5")
  field( SXST, "DBus 6")
  field( SVST, "DBus 7")
  field( ZRVL, "32")
  field( ONVL, "33")
  field( TWVL, "34")
  field( THVL, "35")
  field( FRVL, "36")
  field( FVVL, "37")
  field( SXVL, "38")
  field( SVVL, "39")
  field( EISV, "MAJOR")
  field( NISV, "MAJOR")
  field( TESV, "MAJOR")
  field( ELSV, "MAJOR")
  field( TVSV, "MAJOR")
  field( TTSV, "MAJOR")
  field( FTSV, "MAJOR")
  field( FFSV, "MAJOR")
  field( UNSV, "MAJOR")
  field( FLNK, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut8-Src-Scale-RB")
}

record(mbbi, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut8-Src-Scale-RB") {
  field( DTYP, "Raw Soft Channel")
  field( INP , "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut8-Src-RB")
  field( ZRST, "Prescaler 0")
  field( ONST, "Prescaler 1")
  field( TWST, "Prescaler 2")
  field( ZRVL, "40")
  field( ONVL, "41")
  field( TWVL, "42")
  field( THST, "Force Low")
  field( FRST, "Force High")
  field( THVL, "63")
  field( FRVL, "62")
  field( FVSV, "MAJOR")
  field( SXSV, "MAJOR")
  field( SVSV, "MAJOR")
  field( EISV, "MAJOR")
  field( NISV, "MAJOR")
  field( TESV, "MAJOR")
  field( ELSV, "MAJOR")
  field( TVSV, "MAJOR")
  field( TTSV, "MAJOR")
  field( FTSV, "MAJOR")
  field( FFSV, "MAJOR")
  field( UNSV, "MAJOR")
  field( UNSV, "MAJOR")
}

# Select which is displayed

# Place for user provided note of what is
# connected to this output.
record(waveform, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut8-User-SP") {
  field( DESC, "Desc. of user or purpose")
  field( FTVL, "CHAR")
  field( NELM, "128")
  field( NORD, "1") # default include null termination
  info(autosaveFields_pass1, "VAL")
}
# Record set for an EVR's physical output
#
# Macros-
#  SYS = System name
#  EVR = EVR devObj name
#  ID  = ID # of the output
#  OBJ = devObj name prefix
#  DESC = Physical label found on output jack

record(bo, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut9-Ena-SP") {
  field( DTYP, "Obj Prop bool")
  field( DESC, "Output UNIV9")
  field( OUT , "@OBJ=$(EVR,recursive):FrontUnivOut9, PROP=Enable")
  field( PINI, "YES")
  field( ZNAM, "Disabled")
  field( ONAM, "Enabled")
  field( VAL , "$(FrontUnivOut9-Ena-SP=1,undefined)") # Default to enabled
  info(autosaveFields_pass0, "VAL")
}

record(longout, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut9-Src-SP") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "UNIV9")
  field( OUT , "@OBJ=$(EVR,recursive):FrontUnivOut9, PROP=Map")
  field( FLNK, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut9-Src-RB")
  field( PINI, "YES")
  field( VAL , "$(FrontUnivOut9-Src-SP=63,undefined)")  # Defaults to Force high (if enabled -> Ena-SP)
  info(autosaveFields_pass0, "VAL HOPR LOPR DRVH DRVL")
}

# Settings
# Users use will set one of these at a time.

record(mbbo, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut9-Src-Pulse-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut9-Src-SP PP")
  field( ZRST, "Pulser 0")
  field( ONST, "Pulser 1")
  field( TWST, "Pulser 2")
  field( THST, "Pulser 3")
  field( FRST, "Pulser 4")
  field( FVST, "Pulser 5")
  field( SXST, "Pulser 6")
  field( SVST, "Pulser 7")
  field( EIST, "Pulser 8")
  field( NIST, "Pulser 9")
  field( TEST, "Pulser 10")
  field( ELST, "Pulser 11")
  field( TVST, "Pulser 12")
  field( TTST, "Pulser 13")
  field( FTST, "Pulser 14")
  field( FFST, "Pulser 15")
  field( ZRVL, "0")
  field( ONVL, "1")
  field( TWVL, "2")
  field( THVL, "3")
  field( FRVL, "4")
  field( FVVL, "5")
  field( SXVL, "6")
  field( SVVL, "7")
  field( EIVL, "8")
  field( NIVL, "9")
  field( TEVL, "10")
  field( ELVL, "11")
  field( TVVL, "12")
  field( TTVL, "13")
  field( FTVL, "14")
  field( FFVL, "15")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut9-Src-DBus-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut9-Src-SP PP")
  field( ZRST, "DBus 0")
  field( ONST, "DBus 1")
  field( TWST, "DBus 2")
  field( THST, "DBus 3")
  field( FRST, "DBus 4")
  field( FVST, "DBus 5")
  field( SXST, "DBus 6")
  field( SVST, "DBus 7")
  field( ZRVL, "32")
  field( ONVL, "33")
  field( TWVL, "34")
  field( THVL, "35")
  field( FRVL, "36")
  field( FVVL, "37")
  field( SXVL, "38")
  field( SVVL, "39")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut9-Src-Scale-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut9-Src-SP PP")
  field( ZRST, "Prescaler 0")
  field( ONST, "Prescaler 1")
  field( TWST, "Prescaler 2")
  field( ZRVL, "40")
  field( ONVL, "41")
  field( TWVL, "42")
  field( THST, "Force Low")
  field( FRST, "Force High")
  field( THVL, "63")
  field( FRVL, "62")
  field( VAL , "3")
  field( FVSV, "INVALID")
  field( SXSV, "INVALID")
  field( SVSV, "INVALID")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

# Mapping readback

record(longin, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut9-Src-RB") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "UNIV9")
  field( INP , "@OBJ=$(EVR,recursive):FrontUnivOut9, PROP=Map")
  field( FLNK, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut9-Src-Pulse-RB")
}

record(mbbi, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut9-Src-Pulse-RB") {
  field( DTYP, "Raw Soft Channel")
  field( INP , "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut9-Src-RB")
  field( ZRST, "Pulser 0")
  field( ONST, "Pulser 1")
  field( TWST, "Pulser 2")
  field( THST, "Pulser 3")
  field( FRST, "Pulser 4")
  field( FVST, "Pulser 5")
  field( SXST, "Pulser 6")
  field( SVST, "Pulser 7")
  field( EIST, "Pulser 8")
  field( NIST, "Pulser 9")
  field( TEST, "Pulser 10")
  field( ELST, "Pulser 11")
  field( TVST, "Pulser 12")
  field( TTST, "Pulser 13")
  field( FTST, "Pulser 14")
  field( FFST, "Pulser 15")
  field( ZRVL, "0")
  field( ONVL, "1")
  field( TWVL, "2")
  field( THVL, "3")
  field( FRVL, "4")
  field( FVVL, "5")
  field( SXVL, "6")
  field( SVVL, "7")
  field( EIVL, "8")
  field( NIVL, "9")
  field( TEVL, "10")
  field( ELVL, "11")
  field( TVVL, "12")
  field( TTVL, "13")
  field( FTVL, "14")
  field( FFVL, "15")
  field( UNSV, "MAJOR")
  field( FLNK, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut9-Src-DBus-RB")
}

record(mbbi, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut9-Src-DBus-RB") {
  field( DTYP, "Raw Soft Channel")
  field( INP , "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut9-Src-RB")
  field( ZRST, "DBus 0")
  field( ONST, "DBus 1")
  field( TWST, "DBus 2")
  field( THST, "DBus 3")
  field( FRST, "DBus 4")
  field( FVST, "DBus 5")
  field( SXST, "DBus 6")
  field( SVST, "DBus 7")
  field( ZRVL, "32")
  field( ONVL, "33")
  field( TWVL, "34")
  field( THVL, "35")
  field( FRVL, "36")
  field( FVVL, "37")
  field( SXVL, "38")
  field( SVVL, "39")
  field( EISV, "MAJOR")
  field( NISV, "MAJOR")
  field( TESV, "MAJOR")
  field( ELSV, "MAJOR")
  field( TVSV, "MAJOR")
  field( TTSV, "MAJOR")
  field( FTSV, "MAJOR")
  field( FFSV, "MAJOR")
  field( UNSV, "MAJOR")
  field( FLNK, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut9-Src-Scale-RB")
}

record(mbbi, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut9-Src-Scale-RB") {
  field( DTYP, "Raw Soft Channel")
  field( INP , "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut9-Src-RB")
  field( ZRST, "Prescaler 0")
  field( ONST, "Prescaler 1")
  field( TWST, "Prescaler 2")
  field( ZRVL, "40")
  field( ONVL, "41")
  field( TWVL, "42")
  field( THST, "Force Low")
  field( FRST, "Force High")
  field( THVL, "63")
  field( FRVL, "62")
  field( FVSV, "MAJOR")
  field( SXSV, "MAJOR")
  field( SVSV, "MAJOR")
  field( EISV, "MAJOR")
  field( NISV, "MAJOR")
  field( TESV, "MAJOR")
  field( ELSV, "MAJOR")
  field( TVSV, "MAJOR")
  field( TTSV, "MAJOR")
  field( FTSV, "MAJOR")
  field( FFSV, "MAJOR")
  field( UNSV, "MAJOR")
  field( UNSV, "MAJOR")
}

# Select which is displayed

# Place for user provided note of what is
# connected to this output.
record(waveform, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut9-User-SP") {
  field( DESC, "Desc. of user or purpose")
  field( FTVL, "CHAR")
  field( NELM, "128")
  field( NORD, "1") # default include null termination
  info(autosaveFields_pass1, "VAL")
}
# Record set for an EVR's physical output
#
# Macros-
#  SYS = System name
#  EVR = EVR devObj name
#  ID  = ID # of the output
#  OBJ = devObj name prefix
#  DESC = Physical label found on output jack

record(bo, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut10-Ena-SP") {
  field( DTYP, "Obj Prop bool")
  field( DESC, "Output UNIV10")
  field( OUT , "@OBJ=$(EVR,recursive):FrontUnivOut10, PROP=Enable")
  field( PINI, "YES")
  field( ZNAM, "Disabled")
  field( ONAM, "Enabled")
  field( VAL , "$(FrontUnivOut10-Ena-SP=1,undefined)") # Default to enabled
  info(autosaveFields_pass0, "VAL")
}

record(longout, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut10-Src-SP") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "UNIV10")
  field( OUT , "@OBJ=$(EVR,recursive):FrontUnivOut10, PROP=Map")
  field( FLNK, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut10-Src-RB")
  field( PINI, "YES")
  field( VAL , "$(FrontUnivOut10-Src-SP=63,undefined)")  # Defaults to Force high (if enabled -> Ena-SP)
  info(autosaveFields_pass0, "VAL HOPR LOPR DRVH DRVL")
}

# Settings
# Users use will set one of these at a time.

record(mbbo, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut10-Src-Pulse-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut10-Src-SP PP")
  field( ZRST, "Pulser 0")
  field( ONST, "Pulser 1")
  field( TWST, "Pulser 2")
  field( THST, "Pulser 3")
  field( FRST, "Pulser 4")
  field( FVST, "Pulser 5")
  field( SXST, "Pulser 6")
  field( SVST, "Pulser 7")
  field( EIST, "Pulser 8")
  field( NIST, "Pulser 9")
  field( TEST, "Pulser 10")
  field( ELST, "Pulser 11")
  field( TVST, "Pulser 12")
  field( TTST, "Pulser 13")
  field( FTST, "Pulser 14")
  field( FFST, "Pulser 15")
  field( ZRVL, "0")
  field( ONVL, "1")
  field( TWVL, "2")
  field( THVL, "3")
  field( FRVL, "4")
  field( FVVL, "5")
  field( SXVL, "6")
  field( SVVL, "7")
  field( EIVL, "8")
  field( NIVL, "9")
  field( TEVL, "10")
  field( ELVL, "11")
  field( TVVL, "12")
  field( TTVL, "13")
  field( FTVL, "14")
  field( FFVL, "15")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut10-Src-DBus-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut10-Src-SP PP")
  field( ZRST, "DBus 0")
  field( ONST, "DBus 1")
  field( TWST, "DBus 2")
  field( THST, "DBus 3")
  field( FRST, "DBus 4")
  field( FVST, "DBus 5")
  field( SXST, "DBus 6")
  field( SVST, "DBus 7")
  field( ZRVL, "32")
  field( ONVL, "33")
  field( TWVL, "34")
  field( THVL, "35")
  field( FRVL, "36")
  field( FVVL, "37")
  field( SXVL, "38")
  field( SVVL, "39")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut10-Src-Scale-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut10-Src-SP PP")
  field( ZRST, "Prescaler 0")
  field( ONST, "Prescaler 1")
  field( TWST, "Prescaler 2")
  field( ZRVL, "40")
  field( ONVL, "41")
  field( TWVL, "42")
  field( THST, "Force Low")
  field( FRST, "Force High")
  field( THVL, "63")
  field( FRVL, "62")
  field( VAL , "3")
  field( FVSV, "INVALID")
  field( SXSV, "INVALID")
  field( SVSV, "INVALID")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

# Mapping readback

record(longin, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut10-Src-RB") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "UNIV10")
  field( INP , "@OBJ=$(EVR,recursive):FrontUnivOut10, PROP=Map")
  field( FLNK, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut10-Src-Pulse-RB")
}

record(mbbi, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut10-Src-Pulse-RB") {
  field( DTYP, "Raw Soft Channel")
  field( INP , "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut10-Src-RB")
  field( ZRST, "Pulser 0")
  field( ONST, "Pulser 1")
  field( TWST, "Pulser 2")
  field( THST, "Pulser 3")
  field( FRST, "Pulser 4")
  field( FVST, "Pulser 5")
  field( SXST, "Pulser 6")
  field( SVST, "Pulser 7")
  field( EIST, "Pulser 8")
  field( NIST, "Pulser 9")
  field( TEST, "Pulser 10")
  field( ELST, "Pulser 11")
  field( TVST, "Pulser 12")
  field( TTST, "Pulser 13")
  field( FTST, "Pulser 14")
  field( FFST, "Pulser 15")
  field( ZRVL, "0")
  field( ONVL, "1")
  field( TWVL, "2")
  field( THVL, "3")
  field( FRVL, "4")
  field( FVVL, "5")
  field( SXVL, "6")
  field( SVVL, "7")
  field( EIVL, "8")
  field( NIVL, "9")
  field( TEVL, "10")
  field( ELVL, "11")
  field( TVVL, "12")
  field( TTVL, "13")
  field( FTVL, "14")
  field( FFVL, "15")
  field( UNSV, "MAJOR")
  field( FLNK, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut10-Src-DBus-RB")
}

record(mbbi, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut10-Src-DBus-RB") {
  field( DTYP, "Raw Soft Channel")
  field( INP , "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut10-Src-RB")
  field( ZRST, "DBus 0")
  field( ONST, "DBus 1")
  field( TWST, "DBus 2")
  field( THST, "DBus 3")
  field( FRST, "DBus 4")
  field( FVST, "DBus 5")
  field( SXST, "DBus 6")
  field( SVST, "DBus 7")
  field( ZRVL, "32")
  field( ONVL, "33")
  field( TWVL, "34")
  field( THVL, "35")
  field( FRVL, "36")
  field( FVVL, "37")
  field( SXVL, "38")
  field( SVVL, "39")
  field( EISV, "MAJOR")
  field( NISV, "MAJOR")
  field( TESV, "MAJOR")
  field( ELSV, "MAJOR")
  field( TVSV, "MAJOR")
  field( TTSV, "MAJOR")
  field( FTSV, "MAJOR")
  field( FFSV, "MAJOR")
  field( UNSV, "MAJOR")
  field( FLNK, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut10-Src-Scale-RB")
}

record(mbbi, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut10-Src-Scale-RB") {
  field( DTYP, "Raw Soft Channel")
  field( INP , "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut10-Src-RB")
  field( ZRST, "Prescaler 0")
  field( ONST, "Prescaler 1")
  field( TWST, "Prescaler 2")
  field( ZRVL, "40")
  field( ONVL, "41")
  field( TWVL, "42")
  field( THST, "Force Low")
  field( FRST, "Force High")
  field( THVL, "63")
  field( FRVL, "62")
  field( FVSV, "MAJOR")
  field( SXSV, "MAJOR")
  field( SVSV, "MAJOR")
  field( EISV, "MAJOR")
  field( NISV, "MAJOR")
  field( TESV, "MAJOR")
  field( ELSV, "MAJOR")
  field( TVSV, "MAJOR")
  field( TTSV, "MAJOR")
  field( FTSV, "MAJOR")
  field( FFSV, "MAJOR")
  field( UNSV, "MAJOR")
  field( UNSV, "MAJOR")
}

# Select which is displayed

# Place for user provided note of what is
# connected to this output.
record(waveform, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut10-User-SP") {
  field( DESC, "Desc. of user or purpose")
  field( FTVL, "CHAR")
  field( NELM, "128")
  field( NORD, "1") # default include null termination
  info(autosaveFields_pass1, "VAL")
}
# Record set for an EVR's physical output
#
# Macros-
#  SYS = System name
#  EVR = EVR devObj name
#  ID  = ID # of the output
#  OBJ = devObj name prefix
#  DESC = Physical label found on output jack

record(bo, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut11-Ena-SP") {
  field( DTYP, "Obj Prop bool")
  field( DESC, "Output UNIV11")
  field( OUT , "@OBJ=$(EVR,recursive):FrontUnivOut11, PROP=Enable")
  field( PINI, "YES")
  field( ZNAM, "Disabled")
  field( ONAM, "Enabled")
  field( VAL , "$(FrontUnivOut11-Ena-SP=1,undefined)") # Default to enabled
  info(autosaveFields_pass0, "VAL")
}

record(longout, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut11-Src-SP") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "UNIV11")
  field( OUT , "@OBJ=$(EVR,recursive):FrontUnivOut11, PROP=Map")
  field( FLNK, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut11-Src-RB")
  field( PINI, "YES")
  field( VAL , "$(FrontUnivOut11-Src-SP=63,undefined)")  # Defaults to Force high (if enabled -> Ena-SP)
  info(autosaveFields_pass0, "VAL HOPR LOPR DRVH DRVL")
}

# Settings
# Users use will set one of these at a time.

record(mbbo, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut11-Src-Pulse-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut11-Src-SP PP")
  field( ZRST, "Pulser 0")
  field( ONST, "Pulser 1")
  field( TWST, "Pulser 2")
  field( THST, "Pulser 3")
  field( FRST, "Pulser 4")
  field( FVST, "Pulser 5")
  field( SXST, "Pulser 6")
  field( SVST, "Pulser 7")
  field( EIST, "Pulser 8")
  field( NIST, "Pulser 9")
  field( TEST, "Pulser 10")
  field( ELST, "Pulser 11")
  field( TVST, "Pulser 12")
  field( TTST, "Pulser 13")
  field( FTST, "Pulser 14")
  field( FFST, "Pulser 15")
  field( ZRVL, "0")
  field( ONVL, "1")
  field( TWVL, "2")
  field( THVL, "3")
  field( FRVL, "4")
  field( FVVL, "5")
  field( SXVL, "6")
  field( SVVL, "7")
  field( EIVL, "8")
  field( NIVL, "9")
  field( TEVL, "10")
  field( ELVL, "11")
  field( TVVL, "12")
  field( TTVL, "13")
  field( FTVL, "14")
  field( FFVL, "15")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut11-Src-DBus-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut11-Src-SP PP")
  field( ZRST, "DBus 0")
  field( ONST, "DBus 1")
  field( TWST, "DBus 2")
  field( THST, "DBus 3")
  field( FRST, "DBus 4")
  field( FVST, "DBus 5")
  field( SXST, "DBus 6")
  field( SVST, "DBus 7")
  field( ZRVL, "32")
  field( ONVL, "33")
  field( TWVL, "34")
  field( THVL, "35")
  field( FRVL, "36")
  field( FVVL, "37")
  field( SXVL, "38")
  field( SVVL, "39")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut11-Src-Scale-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut11-Src-SP PP")
  field( ZRST, "Prescaler 0")
  field( ONST, "Prescaler 1")
  field( TWST, "Prescaler 2")
  field( ZRVL, "40")
  field( ONVL, "41")
  field( TWVL, "42")
  field( THST, "Force Low")
  field( FRST, "Force High")
  field( THVL, "63")
  field( FRVL, "62")
  field( VAL , "3")
  field( FVSV, "INVALID")
  field( SXSV, "INVALID")
  field( SVSV, "INVALID")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

# Mapping readback

record(longin, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut11-Src-RB") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "UNIV11")
  field( INP , "@OBJ=$(EVR,recursive):FrontUnivOut11, PROP=Map")
  field( FLNK, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut11-Src-Pulse-RB")
}

record(mbbi, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut11-Src-Pulse-RB") {
  field( DTYP, "Raw Soft Channel")
  field( INP , "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut11-Src-RB")
  field( ZRST, "Pulser 0")
  field( ONST, "Pulser 1")
  field( TWST, "Pulser 2")
  field( THST, "Pulser 3")
  field( FRST, "Pulser 4")
  field( FVST, "Pulser 5")
  field( SXST, "Pulser 6")
  field( SVST, "Pulser 7")
  field( EIST, "Pulser 8")
  field( NIST, "Pulser 9")
  field( TEST, "Pulser 10")
  field( ELST, "Pulser 11")
  field( TVST, "Pulser 12")
  field( TTST, "Pulser 13")
  field( FTST, "Pulser 14")
  field( FFST, "Pulser 15")
  field( ZRVL, "0")
  field( ONVL, "1")
  field( TWVL, "2")
  field( THVL, "3")
  field( FRVL, "4")
  field( FVVL, "5")
  field( SXVL, "6")
  field( SVVL, "7")
  field( EIVL, "8")
  field( NIVL, "9")
  field( TEVL, "10")
  field( ELVL, "11")
  field( TVVL, "12")
  field( TTVL, "13")
  field( FTVL, "14")
  field( FFVL, "15")
  field( UNSV, "MAJOR")
  field( FLNK, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut11-Src-DBus-RB")
}

record(mbbi, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut11-Src-DBus-RB") {
  field( DTYP, "Raw Soft Channel")
  field( INP , "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut11-Src-RB")
  field( ZRST, "DBus 0")
  field( ONST, "DBus 1")
  field( TWST, "DBus 2")
  field( THST, "DBus 3")
  field( FRST, "DBus 4")
  field( FVST, "DBus 5")
  field( SXST, "DBus 6")
  field( SVST, "DBus 7")
  field( ZRVL, "32")
  field( ONVL, "33")
  field( TWVL, "34")
  field( THVL, "35")
  field( FRVL, "36")
  field( FVVL, "37")
  field( SXVL, "38")
  field( SVVL, "39")
  field( EISV, "MAJOR")
  field( NISV, "MAJOR")
  field( TESV, "MAJOR")
  field( ELSV, "MAJOR")
  field( TVSV, "MAJOR")
  field( TTSV, "MAJOR")
  field( FTSV, "MAJOR")
  field( FFSV, "MAJOR")
  field( UNSV, "MAJOR")
  field( FLNK, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut11-Src-Scale-RB")
}

record(mbbi, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut11-Src-Scale-RB") {
  field( DTYP, "Raw Soft Channel")
  field( INP , "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut11-Src-RB")
  field( ZRST, "Prescaler 0")
  field( ONST, "Prescaler 1")
  field( TWST, "Prescaler 2")
  field( ZRVL, "40")
  field( ONVL, "41")
  field( TWVL, "42")
  field( THST, "Force Low")
  field( FRST, "Force High")
  field( THVL, "63")
  field( FRVL, "62")
  field( FVSV, "MAJOR")
  field( SXSV, "MAJOR")
  field( SVSV, "MAJOR")
  field( EISV, "MAJOR")
  field( NISV, "MAJOR")
  field( TESV, "MAJOR")
  field( ELSV, "MAJOR")
  field( TVSV, "MAJOR")
  field( TTSV, "MAJOR")
  field( FTSV, "MAJOR")
  field( FFSV, "MAJOR")
  field( UNSV, "MAJOR")
  field( UNSV, "MAJOR")
}

# Select which is displayed

# Place for user provided note of what is
# connected to this output.
record(waveform, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut11-User-SP") {
  field( DESC, "Desc. of user or purpose")
  field( FTVL, "CHAR")
  field( NELM, "128")
  field( NORD, "1") # default include null termination
  info(autosaveFields_pass1, "VAL")
}
# Record set for an EVR's physical output
#
# Macros-
#  SYS = System name
#  EVR = EVR devObj name
#  ID  = ID # of the output
#  OBJ = devObj name prefix
#  DESC = Physical label found on output jack

record(bo, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut12-Ena-SP") {
  field( DTYP, "Obj Prop bool")
  field( DESC, "Output UNIV12")
  field( OUT , "@OBJ=$(EVR,recursive):FrontUnivOut12, PROP=Enable")
  field( PINI, "YES")
  field( ZNAM, "Disabled")
  field( ONAM, "Enabled")
  field( VAL , "$(FrontUnivOut12-Ena-SP=1,undefined)") # Default to enabled
  info(autosaveFields_pass0, "VAL")
}

record(longout, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut12-Src-SP") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "UNIV12")
  field( OUT , "@OBJ=$(EVR,recursive):FrontUnivOut12, PROP=Map")
  field( FLNK, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut12-Src-RB")
  field( PINI, "YES")
  field( VAL , "$(FrontUnivOut12-Src-SP=63,undefined)")  # Defaults to Force high (if enabled -> Ena-SP)
  info(autosaveFields_pass0, "VAL HOPR LOPR DRVH DRVL")
}

# Settings
# Users use will set one of these at a time.

record(mbbo, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut12-Src-Pulse-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut12-Src-SP PP")
  field( ZRST, "Pulser 0")
  field( ONST, "Pulser 1")
  field( TWST, "Pulser 2")
  field( THST, "Pulser 3")
  field( FRST, "Pulser 4")
  field( FVST, "Pulser 5")
  field( SXST, "Pulser 6")
  field( SVST, "Pulser 7")
  field( EIST, "Pulser 8")
  field( NIST, "Pulser 9")
  field( TEST, "Pulser 10")
  field( ELST, "Pulser 11")
  field( TVST, "Pulser 12")
  field( TTST, "Pulser 13")
  field( FTST, "Pulser 14")
  field( FFST, "Pulser 15")
  field( ZRVL, "0")
  field( ONVL, "1")
  field( TWVL, "2")
  field( THVL, "3")
  field( FRVL, "4")
  field( FVVL, "5")
  field( SXVL, "6")
  field( SVVL, "7")
  field( EIVL, "8")
  field( NIVL, "9")
  field( TEVL, "10")
  field( ELVL, "11")
  field( TVVL, "12")
  field( TTVL, "13")
  field( FTVL, "14")
  field( FFVL, "15")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut12-Src-DBus-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut12-Src-SP PP")
  field( ZRST, "DBus 0")
  field( ONST, "DBus 1")
  field( TWST, "DBus 2")
  field( THST, "DBus 3")
  field( FRST, "DBus 4")
  field( FVST, "DBus 5")
  field( SXST, "DBus 6")
  field( SVST, "DBus 7")
  field( ZRVL, "32")
  field( ONVL, "33")
  field( TWVL, "34")
  field( THVL, "35")
  field( FRVL, "36")
  field( FVVL, "37")
  field( SXVL, "38")
  field( SVVL, "39")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut12-Src-Scale-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut12-Src-SP PP")
  field( ZRST, "Prescaler 0")
  field( ONST, "Prescaler 1")
  field( TWST, "Prescaler 2")
  field( ZRVL, "40")
  field( ONVL, "41")
  field( TWVL, "42")
  field( THST, "Force Low")
  field( FRST, "Force High")
  field( THVL, "63")
  field( FRVL, "62")
  field( VAL , "3")
  field( FVSV, "INVALID")
  field( SXSV, "INVALID")
  field( SVSV, "INVALID")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

# Mapping readback

record(longin, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut12-Src-RB") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "UNIV12")
  field( INP , "@OBJ=$(EVR,recursive):FrontUnivOut12, PROP=Map")
  field( FLNK, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut12-Src-Pulse-RB")
}

record(mbbi, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut12-Src-Pulse-RB") {
  field( DTYP, "Raw Soft Channel")
  field( INP , "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut12-Src-RB")
  field( ZRST, "Pulser 0")
  field( ONST, "Pulser 1")
  field( TWST, "Pulser 2")
  field( THST, "Pulser 3")
  field( FRST, "Pulser 4")
  field( FVST, "Pulser 5")
  field( SXST, "Pulser 6")
  field( SVST, "Pulser 7")
  field( EIST, "Pulser 8")
  field( NIST, "Pulser 9")
  field( TEST, "Pulser 10")
  field( ELST, "Pulser 11")
  field( TVST, "Pulser 12")
  field( TTST, "Pulser 13")
  field( FTST, "Pulser 14")
  field( FFST, "Pulser 15")
  field( ZRVL, "0")
  field( ONVL, "1")
  field( TWVL, "2")
  field( THVL, "3")
  field( FRVL, "4")
  field( FVVL, "5")
  field( SXVL, "6")
  field( SVVL, "7")
  field( EIVL, "8")
  field( NIVL, "9")
  field( TEVL, "10")
  field( ELVL, "11")
  field( TVVL, "12")
  field( TTVL, "13")
  field( FTVL, "14")
  field( FFVL, "15")
  field( UNSV, "MAJOR")
  field( FLNK, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut12-Src-DBus-RB")
}

record(mbbi, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut12-Src-DBus-RB") {
  field( DTYP, "Raw Soft Channel")
  field( INP , "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut12-Src-RB")
  field( ZRST, "DBus 0")
  field( ONST, "DBus 1")
  field( TWST, "DBus 2")
  field( THST, "DBus 3")
  field( FRST, "DBus 4")
  field( FVST, "DBus 5")
  field( SXST, "DBus 6")
  field( SVST, "DBus 7")
  field( ZRVL, "32")
  field( ONVL, "33")
  field( TWVL, "34")
  field( THVL, "35")
  field( FRVL, "36")
  field( FVVL, "37")
  field( SXVL, "38")
  field( SVVL, "39")
  field( EISV, "MAJOR")
  field( NISV, "MAJOR")
  field( TESV, "MAJOR")
  field( ELSV, "MAJOR")
  field( TVSV, "MAJOR")
  field( TTSV, "MAJOR")
  field( FTSV, "MAJOR")
  field( FFSV, "MAJOR")
  field( UNSV, "MAJOR")
  field( FLNK, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut12-Src-Scale-RB")
}

record(mbbi, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut12-Src-Scale-RB") {
  field( DTYP, "Raw Soft Channel")
  field( INP , "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut12-Src-RB")
  field( ZRST, "Prescaler 0")
  field( ONST, "Prescaler 1")
  field( TWST, "Prescaler 2")
  field( ZRVL, "40")
  field( ONVL, "41")
  field( TWVL, "42")
  field( THST, "Force Low")
  field( FRST, "Force High")
  field( THVL, "63")
  field( FRVL, "62")
  field( FVSV, "MAJOR")
  field( SXSV, "MAJOR")
  field( SVSV, "MAJOR")
  field( EISV, "MAJOR")
  field( NISV, "MAJOR")
  field( TESV, "MAJOR")
  field( ELSV, "MAJOR")
  field( TVSV, "MAJOR")
  field( TTSV, "MAJOR")
  field( FTSV, "MAJOR")
  field( FFSV, "MAJOR")
  field( UNSV, "MAJOR")
  field( UNSV, "MAJOR")
}

# Select which is displayed

# Place for user provided note of what is
# connected to this output.
record(waveform, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut12-User-SP") {
  field( DESC, "Desc. of user or purpose")
  field( FTVL, "CHAR")
  field( NELM, "128")
  field( NORD, "1") # default include null termination
  info(autosaveFields_pass1, "VAL")
}
# Record set for an EVR's physical output
#
# Macros-
#  SYS = System name
#  EVR = EVR devObj name
#  ID  = ID # of the output
#  OBJ = devObj name prefix
#  DESC = Physical label found on output jack

record(bo, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut13-Ena-SP") {
  field( DTYP, "Obj Prop bool")
  field( DESC, "Output UNIV13")
  field( OUT , "@OBJ=$(EVR,recursive):FrontUnivOut13, PROP=Enable")
  field( PINI, "YES")
  field( ZNAM, "Disabled")
  field( ONAM, "Enabled")
  field( VAL , "$(FrontUnivOut13-Ena-SP=1,undefined)") # Default to enabled
  info(autosaveFields_pass0, "VAL")
}

record(longout, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut13-Src-SP") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "UNIV13")
  field( OUT , "@OBJ=$(EVR,recursive):FrontUnivOut13, PROP=Map")
  field( FLNK, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut13-Src-RB")
  field( PINI, "YES")
  field( VAL , "$(FrontUnivOut13-Src-SP=63,undefined)")  # Defaults to Force high (if enabled -> Ena-SP)
  info(autosaveFields_pass0, "VAL HOPR LOPR DRVH DRVL")
}

# Settings
# Users use will set one of these at a time.

record(mbbo, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut13-Src-Pulse-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut13-Src-SP PP")
  field( ZRST, "Pulser 0")
  field( ONST, "Pulser 1")
  field( TWST, "Pulser 2")
  field( THST, "Pulser 3")
  field( FRST, "Pulser 4")
  field( FVST, "Pulser 5")
  field( SXST, "Pulser 6")
  field( SVST, "Pulser 7")
  field( EIST, "Pulser 8")
  field( NIST, "Pulser 9")
  field( TEST, "Pulser 10")
  field( ELST, "Pulser 11")
  field( TVST, "Pulser 12")
  field( TTST, "Pulser 13")
  field( FTST, "Pulser 14")
  field( FFST, "Pulser 15")
  field( ZRVL, "0")
  field( ONVL, "1")
  field( TWVL, "2")
  field( THVL, "3")
  field( FRVL, "4")
  field( FVVL, "5")
  field( SXVL, "6")
  field( SVVL, "7")
  field( EIVL, "8")
  field( NIVL, "9")
  field( TEVL, "10")
  field( ELVL, "11")
  field( TVVL, "12")
  field( TTVL, "13")
  field( FTVL, "14")
  field( FFVL, "15")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut13-Src-DBus-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut13-Src-SP PP")
  field( ZRST, "DBus 0")
  field( ONST, "DBus 1")
  field( TWST, "DBus 2")
  field( THST, "DBus 3")
  field( FRST, "DBus 4")
  field( FVST, "DBus 5")
  field( SXST, "DBus 6")
  field( SVST, "DBus 7")
  field( ZRVL, "32")
  field( ONVL, "33")
  field( TWVL, "34")
  field( THVL, "35")
  field( FRVL, "36")
  field( FVVL, "37")
  field( SXVL, "38")
  field( SVVL, "39")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut13-Src-Scale-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut13-Src-SP PP")
  field( ZRST, "Prescaler 0")
  field( ONST, "Prescaler 1")
  field( TWST, "Prescaler 2")
  field( ZRVL, "40")
  field( ONVL, "41")
  field( TWVL, "42")
  field( THST, "Force Low")
  field( FRST, "Force High")
  field( THVL, "63")
  field( FRVL, "62")
  field( VAL , "3")
  field( FVSV, "INVALID")
  field( SXSV, "INVALID")
  field( SVSV, "INVALID")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

# Mapping readback

record(longin, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut13-Src-RB") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "UNIV13")
  field( INP , "@OBJ=$(EVR,recursive):FrontUnivOut13, PROP=Map")
  field( FLNK, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut13-Src-Pulse-RB")
}

record(mbbi, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut13-Src-Pulse-RB") {
  field( DTYP, "Raw Soft Channel")
  field( INP , "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut13-Src-RB")
  field( ZRST, "Pulser 0")
  field( ONST, "Pulser 1")
  field( TWST, "Pulser 2")
  field( THST, "Pulser 3")
  field( FRST, "Pulser 4")
  field( FVST, "Pulser 5")
  field( SXST, "Pulser 6")
  field( SVST, "Pulser 7")
  field( EIST, "Pulser 8")
  field( NIST, "Pulser 9")
  field( TEST, "Pulser 10")
  field( ELST, "Pulser 11")
  field( TVST, "Pulser 12")
  field( TTST, "Pulser 13")
  field( FTST, "Pulser 14")
  field( FFST, "Pulser 15")
  field( ZRVL, "0")
  field( ONVL, "1")
  field( TWVL, "2")
  field( THVL, "3")
  field( FRVL, "4")
  field( FVVL, "5")
  field( SXVL, "6")
  field( SVVL, "7")
  field( EIVL, "8")
  field( NIVL, "9")
  field( TEVL, "10")
  field( ELVL, "11")
  field( TVVL, "12")
  field( TTVL, "13")
  field( FTVL, "14")
  field( FFVL, "15")
  field( UNSV, "MAJOR")
  field( FLNK, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut13-Src-DBus-RB")
}

record(mbbi, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut13-Src-DBus-RB") {
  field( DTYP, "Raw Soft Channel")
  field( INP , "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut13-Src-RB")
  field( ZRST, "DBus 0")
  field( ONST, "DBus 1")
  field( TWST, "DBus 2")
  field( THST, "DBus 3")
  field( FRST, "DBus 4")
  field( FVST, "DBus 5")
  field( SXST, "DBus 6")
  field( SVST, "DBus 7")
  field( ZRVL, "32")
  field( ONVL, "33")
  field( TWVL, "34")
  field( THVL, "35")
  field( FRVL, "36")
  field( FVVL, "37")
  field( SXVL, "38")
  field( SVVL, "39")
  field( EISV, "MAJOR")
  field( NISV, "MAJOR")
  field( TESV, "MAJOR")
  field( ELSV, "MAJOR")
  field( TVSV, "MAJOR")
  field( TTSV, "MAJOR")
  field( FTSV, "MAJOR")
  field( FFSV, "MAJOR")
  field( UNSV, "MAJOR")
  field( FLNK, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut13-Src-Scale-RB")
}

record(mbbi, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut13-Src-Scale-RB") {
  field( DTYP, "Raw Soft Channel")
  field( INP , "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut13-Src-RB")
  field( ZRST, "Prescaler 0")
  field( ONST, "Prescaler 1")
  field( TWST, "Prescaler 2")
  field( ZRVL, "40")
  field( ONVL, "41")
  field( TWVL, "42")
  field( THST, "Force Low")
  field( FRST, "Force High")
  field( THVL, "63")
  field( FRVL, "62")
  field( FVSV, "MAJOR")
  field( SXSV, "MAJOR")
  field( SVSV, "MAJOR")
  field( EISV, "MAJOR")
  field( NISV, "MAJOR")
  field( TESV, "MAJOR")
  field( ELSV, "MAJOR")
  field( TVSV, "MAJOR")
  field( TTSV, "MAJOR")
  field( FTSV, "MAJOR")
  field( FFSV, "MAJOR")
  field( UNSV, "MAJOR")
  field( UNSV, "MAJOR")
}

# Select which is displayed

# Place for user provided note of what is
# connected to this output.
record(waveform, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut13-User-SP") {
  field( DESC, "Desc. of user or purpose")
  field( FTVL, "CHAR")
  field( NELM, "128")
  field( NORD, "1") # default include null termination
  info(autosaveFields_pass1, "VAL")
}
# Record set for an EVR's physical output
#
# Macros-
#  SYS = System name
#  EVR = EVR devObj name
#  ID  = ID # of the output
#  OBJ = devObj name prefix
#  DESC = Physical label found on output jack

record(bo, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut14-Ena-SP") {
  field( DTYP, "Obj Prop bool")
  field( DESC, "Output UNIV14")
  field( OUT , "@OBJ=$(EVR,recursive):FrontUnivOut14, PROP=Enable")
  field( PINI, "YES")
  field( ZNAM, "Disabled")
  field( ONAM, "Enabled")
  field( VAL , "$(FrontUnivOut14-Ena-SP=1,undefined)") # Default to enabled
  info(autosaveFields_pass0, "VAL")
}

record(longout, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut14-Src-SP") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "UNIV14")
  field( OUT , "@OBJ=$(EVR,recursive):FrontUnivOut14, PROP=Map")
  field( FLNK, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut14-Src-RB")
  field( PINI, "YES")
  field( VAL , "$(FrontUnivOut14-Src-SP=63,undefined)")  # Defaults to Force high (if enabled -> Ena-SP)
  info(autosaveFields_pass0, "VAL HOPR LOPR DRVH DRVL")
}

# Settings
# Users use will set one of these at a time.

record(mbbo, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut14-Src-Pulse-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut14-Src-SP PP")
  field( ZRST, "Pulser 0")
  field( ONST, "Pulser 1")
  field( TWST, "Pulser 2")
  field( THST, "Pulser 3")
  field( FRST, "Pulser 4")
  field( FVST, "Pulser 5")
  field( SXST, "Pulser 6")
  field( SVST, "Pulser 7")
  field( EIST, "Pulser 8")
  field( NIST, "Pulser 9")
  field( TEST, "Pulser 10")
  field( ELST, "Pulser 11")
  field( TVST, "Pulser 12")
  field( TTST, "Pulser 13")
  field( FTST, "Pulser 14")
  field( FFST, "Pulser 15")
  field( ZRVL, "0")
  field( ONVL, "1")
  field( TWVL, "2")
  field( THVL, "3")
  field( FRVL, "4")
  field( FVVL, "5")
  field( SXVL, "6")
  field( SVVL, "7")
  field( EIVL, "8")
  field( NIVL, "9")
  field( TEVL, "10")
  field( ELVL, "11")
  field( TVVL, "12")
  field( TTVL, "13")
  field( FTVL, "14")
  field( FFVL, "15")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut14-Src-DBus-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut14-Src-SP PP")
  field( ZRST, "DBus 0")
  field( ONST, "DBus 1")
  field( TWST, "DBus 2")
  field( THST, "DBus 3")
  field( FRST, "DBus 4")
  field( FVST, "DBus 5")
  field( SXST, "DBus 6")
  field( SVST, "DBus 7")
  field( ZRVL, "32")
  field( ONVL, "33")
  field( TWVL, "34")
  field( THVL, "35")
  field( FRVL, "36")
  field( FVVL, "37")
  field( SXVL, "38")
  field( SVVL, "39")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut14-Src-Scale-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut14-Src-SP PP")
  field( ZRST, "Prescaler 0")
  field( ONST, "Prescaler 1")
  field( TWST, "Prescaler 2")
  field( ZRVL, "40")
  field( ONVL, "41")
  field( TWVL, "42")
  field( THST, "Force Low")
  field( FRST, "Force High")
  field( THVL, "63")
  field( FRVL, "62")
  field( VAL , "3")
  field( FVSV, "INVALID")
  field( SXSV, "INVALID")
  field( SVSV, "INVALID")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

# Mapping readback

record(longin, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut14-Src-RB") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "UNIV14")
  field( INP , "@OBJ=$(EVR,recursive):FrontUnivOut14, PROP=Map")
  field( FLNK, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut14-Src-Pulse-RB")
}

record(mbbi, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut14-Src-Pulse-RB") {
  field( DTYP, "Raw Soft Channel")
  field( INP , "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut14-Src-RB")
  field( ZRST, "Pulser 0")
  field( ONST, "Pulser 1")
  field( TWST, "Pulser 2")
  field( THST, "Pulser 3")
  field( FRST, "Pulser 4")
  field( FVST, "Pulser 5")
  field( SXST, "Pulser 6")
  field( SVST, "Pulser 7")
  field( EIST, "Pulser 8")
  field( NIST, "Pulser 9")
  field( TEST, "Pulser 10")
  field( ELST, "Pulser 11")
  field( TVST, "Pulser 12")
  field( TTST, "Pulser 13")
  field( FTST, "Pulser 14")
  field( FFST, "Pulser 15")
  field( ZRVL, "0")
  field( ONVL, "1")
  field( TWVL, "2")
  field( THVL, "3")
  field( FRVL, "4")
  field( FVVL, "5")
  field( SXVL, "6")
  field( SVVL, "7")
  field( EIVL, "8")
  field( NIVL, "9")
  field( TEVL, "10")
  field( ELVL, "11")
  field( TVVL, "12")
  field( TTVL, "13")
  field( FTVL, "14")
  field( FFVL, "15")
  field( UNSV, "MAJOR")
  field( FLNK, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut14-Src-DBus-RB")
}

record(mbbi, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut14-Src-DBus-RB") {
  field( DTYP, "Raw Soft Channel")
  field( INP , "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut14-Src-RB")
  field( ZRST, "DBus 0")
  field( ONST, "DBus 1")
  field( TWST, "DBus 2")
  field( THST, "DBus 3")
  field( FRST, "DBus 4")
  field( FVST, "DBus 5")
  field( SXST, "DBus 6")
  field( SVST, "DBus 7")
  field( ZRVL, "32")
  field( ONVL, "33")
  field( TWVL, "34")
  field( THVL, "35")
  field( FRVL, "36")
  field( FVVL, "37")
  field( SXVL, "38")
  field( SVVL, "39")
  field( EISV, "MAJOR")
  field( NISV, "MAJOR")
  field( TESV, "MAJOR")
  field( ELSV, "MAJOR")
  field( TVSV, "MAJOR")
  field( TTSV, "MAJOR")
  field( FTSV, "MAJOR")
  field( FFSV, "MAJOR")
  field( UNSV, "MAJOR")
  field( FLNK, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut14-Src-Scale-RB")
}

record(mbbi, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut14-Src-Scale-RB") {
  field( DTYP, "Raw Soft Channel")
  field( INP , "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut14-Src-RB")
  field( ZRST, "Prescaler 0")
  field( ONST, "Prescaler 1")
  field( TWST, "Prescaler 2")
  field( ZRVL, "40")
  field( ONVL, "41")
  field( TWVL, "42")
  field( THST, "Force Low")
  field( FRST, "Force High")
  field( THVL, "63")
  field( FRVL, "62")
  field( FVSV, "MAJOR")
  field( SXSV, "MAJOR")
  field( SVSV, "MAJOR")
  field( EISV, "MAJOR")
  field( NISV, "MAJOR")
  field( TESV, "MAJOR")
  field( ELSV, "MAJOR")
  field( TVSV, "MAJOR")
  field( TTSV, "MAJOR")
  field( FTSV, "MAJOR")
  field( FFSV, "MAJOR")
  field( UNSV, "MAJOR")
  field( UNSV, "MAJOR")
}

# Select which is displayed

# Place for user provided note of what is
# connected to this output.
record(waveform, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut14-User-SP") {
  field( DESC, "Desc. of user or purpose")
  field( FTVL, "CHAR")
  field( NELM, "128")
  field( NORD, "1") # default include null termination
  info(autosaveFields_pass1, "VAL")
}
# Record set for an EVR's physical output
#
# Macros-
#  SYS = System name
#  EVR = EVR devObj name
#  ID  = ID # of the output
#  OBJ = devObj name prefix
#  DESC = Physical label found on output jack

record(bo, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut15-Ena-SP") {
  field( DTYP, "Obj Prop bool")
  field( DESC, "Output UNIV15")
  field( OUT , "@OBJ=$(EVR,recursive):FrontUnivOut15, PROP=Enable")
  field( PINI, "YES")
  field( ZNAM, "Disabled")
  field( ONAM, "Enabled")
  field( VAL , "$(FrontUnivOut15-Ena-SP=1,undefined)") # Default to enabled
  info(autosaveFields_pass0, "VAL")
}

record(longout, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut15-Src-SP") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "UNIV15")
  field( OUT , "@OBJ=$(EVR,recursive):FrontUnivOut15, PROP=Map")
  field( FLNK, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut15-Src-RB")
  field( PINI, "YES")
  field( VAL , "$(FrontUnivOut15-Src-SP=63,undefined)")  # Defaults to Force high (if enabled -> Ena-SP)
  info(autosaveFields_pass0, "VAL HOPR LOPR DRVH DRVL")
}

# Settings
# Users use will set one of these at a time.

record(mbbo, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut15-Src-Pulse-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut15-Src-SP PP")
  field( ZRST, "Pulser 0")
  field( ONST, "Pulser 1")
  field( TWST, "Pulser 2")
  field( THST, "Pulser 3")
  field( FRST, "Pulser 4")
  field( FVST, "Pulser 5")
  field( SXST, "Pulser 6")
  field( SVST, "Pulser 7")
  field( EIST, "Pulser 8")
  field( NIST, "Pulser 9")
  field( TEST, "Pulser 10")
  field( ELST, "Pulser 11")
  field( TVST, "Pulser 12")
  field( TTST, "Pulser 13")
  field( FTST, "Pulser 14")
  field( FFST, "Pulser 15")
  field( ZRVL, "0")
  field( ONVL, "1")
  field( TWVL, "2")
  field( THVL, "3")
  field( FRVL, "4")
  field( FVVL, "5")
  field( SXVL, "6")
  field( SVVL, "7")
  field( EIVL, "8")
  field( NIVL, "9")
  field( TEVL, "10")
  field( ELVL, "11")
  field( TVVL, "12")
  field( TTVL, "13")
  field( FTVL, "14")
  field( FFVL, "15")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut15-Src-DBus-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut15-Src-SP PP")
  field( ZRST, "DBus 0")
  field( ONST, "DBus 1")
  field( TWST, "DBus 2")
  field( THST, "DBus 3")
  field( FRST, "DBus 4")
  field( FVST, "DBus 5")
  field( SXST, "DBus 6")
  field( SVST, "DBus 7")
  field( ZRVL, "32")
  field( ONVL, "33")
  field( TWVL, "34")
  field( THVL, "35")
  field( FRVL, "36")
  field( FVVL, "37")
  field( SXVL, "38")
  field( SVVL, "39")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut15-Src-Scale-SP") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut15-Src-SP PP")
  field( ZRST, "Prescaler 0")
  field( ONST, "Prescaler 1")
  field( TWST, "Prescaler 2")
  field( ZRVL, "40")
  field( ONVL, "41")
  field( TWVL, "42")
  field( THST, "Force Low")
  field( FRST, "Force High")
  field( THVL, "63")
  field( FRVL, "62")
  field( VAL , "3")
  field( FVSV, "INVALID")
  field( SXSV, "INVALID")
  field( SVSV, "INVALID")
  field( EISV, "INVALID")
  field( NISV, "INVALID")
  field( TESV, "INVALID")
  field( ELSV, "INVALID")
  field( TVSV, "INVALID")
  field( TTSV, "INVALID")
  field( FTSV, "INVALID")
  field( FFSV, "INVALID")
  field( UNSV, "INVALID")
  field( IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

# Mapping readback

record(longin, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut15-Src-RB") {
  field( DTYP, "Obj Prop uint32")
  field( DESC, "UNIV15")
  field( INP , "@OBJ=$(EVR,recursive):FrontUnivOut15, PROP=Map")
  field( FLNK, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut15-Src-Pulse-RB")
}

record(mbbi, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut15-Src-Pulse-RB") {
  field( DTYP, "Raw Soft Channel")
  field( INP , "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut15-Src-RB")
  field( ZRST, "Pulser 0")
  field( ONST, "Pulser 1")
  field( TWST, "Pulser 2")
  field( THST, "Pulser 3")
  field( FRST, "Pulser 4")
  field( FVST, "Pulser 5")
  field( SXST, "Pulser 6")
  field( SVST, "Pulser 7")
  field( EIST, "Pulser 8")
  field( NIST, "Pulser 9")
  field( TEST, "Pulser 10")
  field( ELST, "Pulser 11")
  field( TVST, "Pulser 12")
  field( TTST, "Pulser 13")
  field( FTST, "Pulser 14")
  field( FFST, "Pulser 15")
  field( ZRVL, "0")
  field( ONVL, "1")
  field( TWVL, "2")
  field( THVL, "3")
  field( FRVL, "4")
  field( FVVL, "5")
  field( SXVL, "6")
  field( SVVL, "7")
  field( EIVL, "8")
  field( NIVL, "9")
  field( TEVL, "10")
  field( ELVL, "11")
  field( TVVL, "12")
  field( TTVL, "13")
  field( FTVL, "14")
  field( FFVL, "15")
  field( UNSV, "MAJOR")
  field( FLNK, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut15-Src-DBus-RB")
}

record(mbbi, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut15-Src-DBus-RB") {
  field( DTYP, "Raw Soft Channel")
  field( INP , "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut15-Src-RB")
  field( ZRST, "DBus 0")
  field( ONST, "DBus 1")
  field( TWST, "DBus 2")
  field( THST, "DBus 3")
  field( FRST, "DBus 4")
  field( FVST, "DBus 5")
  field( SXST, "DBus 6")
  field( SVST, "DBus 7")
  field( ZRVL, "32")
  field( ONVL, "33")
  field( TWVL, "34")
  field( THVL, "35")
  field( FRVL, "36")
  field( FVVL, "37")
  field( SXVL, "38")
  field( SVVL, "39")
  field( EISV, "MAJOR")
  field( NISV, "MAJOR")
  field( TESV, "MAJOR")
  field( ELSV, "MAJOR")
  field( TVSV, "MAJOR")
  field( TTSV, "MAJOR")
  field( FTSV, "MAJOR")
  field( FFSV, "MAJOR")
  field( UNSV, "MAJOR")
  field( FLNK, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut15-Src-Scale-RB")
}

record(mbbi, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut15-Src-Scale-RB") {
  field( DTYP, "Raw Soft Channel")
  field( INP , "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut15-Src-RB")
  field( ZRST, "Prescaler 0")
  field( ONST, "Prescaler 1")
  field( TWST, "Prescaler 2")
  field( ZRVL, "40")
  field( ONVL, "41")
  field( TWVL, "42")
  field( THST, "Force Low")
  field( FRST, "Force High")
  field( THVL, "63")
  field( FRVL, "62")
  field( FVSV, "MAJOR")
  field( SXSV, "MAJOR")
  field( SVSV, "MAJOR")
  field( EISV, "MAJOR")
  field( NISV, "MAJOR")
  field( TESV, "MAJOR")
  field( ELSV, "MAJOR")
  field( TVSV, "MAJOR")
  field( TTSV, "MAJOR")
  field( FTSV, "MAJOR")
  field( FFSV, "MAJOR")
  field( UNSV, "MAJOR")
  field( UNSV, "MAJOR")
}

# Select which is displayed

# Place for user provided note of what is
# connected to this output.
record(waveform, "$(SYS,recursive)-$(EVR,recursive):FrontUnivOut15-User-SP") {
  field( DESC, "Desc. of user or purpose")
  field( FTVL, "CHAR")
  field( NELM, "128")
  field( NORD, "1") # default include null termination
  info(autosaveFields_pass1, "VAL")
}
