# Record set for an EVR's programmable pulse generator
#
# Macros:
#  PN = delaygen record name prefix
#  P  = base record name prefix
#  OBJ = devObj name
#  PID = Pulse gen ID number (corresponds to output mappings)
#  DMAX = Max delay setting
#  WMAX = Max width setting
#  PMAX = Max prescaler (divider) setting
#  NOPS = 0 - enable prescaler, 1 - disable prescaler

# When Disabled, the output of the Pulse Generator will remain in
# its inactive state (normally low). The generator must be enabled
# before mapped actions take effect.
#
record(bo, "$(PN)Ena-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(OBJ), PROP=Enable")
  field(PINI, "YES")
  field(VAL , "1")
  field(MASK, "1")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
  info(autosaveFields_pass0, "VAL")
}

# Pulser Soft set/reset
record(bo, "$(PN)Set-Cmd") {
  field(DESC, "Soft set")
  field(DTYP, "Obj Prop command")
  field(OUT , "@OBJ=$(OBJ), PROP=SoftSet")
}

record(bo, "$(PN)Reset-Cmd") {
  field(DESC, "Soft reset")
  field(DTYP, "Obj Prop command")
  field(OUT , "@OBJ=$(OBJ), PROP=SoftReset")
}

# Reverses the output polarity. When set, changes the Pulse Generator's
# output from normally low to normally high.
#
record(bo, "$(PN)Polarity-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(OBJ), PROP=Polarity")
  field(PINI, "YES")
  field(VAL , "0")
  field(MASK, "1")
  field(ZNAM, "Active High")
  field(ONAM, "Active Low")
  info(autosaveFields_pass0, "VAL")
}

# Determines the time between when the Pulse Generator is triggered
# and when it changes state from inactive to active (normally low to high).
record(ao, "$(PN)Delay-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(OBJ), PROP=Delay")
  field(PINI, "YES")
  field(DESC, "Pulse Generator $(PID)")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(PN)Delay-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(PN)Delay-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(OBJ), PROP=Delay")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(PN)Delay$(s=:)Raw-RB")
}

record(longin, "$(PN)Delay$(s=:)Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(OBJ), PROP=Delay")
  field(EGU , "cnts")
  field(HOPR, "$(DMAX=0xffff)")
  field(LOPR, "0")
  field(HIGH, "$(DMAX=0xffff)")
  field(HSV, "MAJOR")
}

# Determines the time between when the Pulse Generator changes state from
# inactive to active (normally low to high), and when it changes back to inactive.
#
record(ao, "$(PN)Width-SP") {
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(OBJ), PROP=Width")
  field(PINI, "YES")
  field(DESC, "Pulser pulse width")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(PN)Width-RB")
  info(autosaveFields_pass0, "VAL EGU ESLO PREC HOPR LOPR DRVL DRVH")
}

record(ai, "$(PN)Width-RB") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(OBJ), PROP=Width")
  field(VAL , "0")
  field(EGU , "us")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "3")
  field(FLNK, "$(PN)Width$(s=:)Raw-RB")
}

record(longin, "$(PN)Width$(s=:)Raw-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(OBJ), PROP=Width")
  field(PINI, "YES")
  field(HOPR, "$(WMAX=0xffff)")
  field(LOPR, "0")
  field(HIGH, "$(WMAX=0xffff)")
  field(HSV, "MAJOR")
}

# Decreases the resolution of both delay and width by an integer multiple.
#
# Achieves greater range at the expense of resolution.
#
record(longout, "$(PN)Prescaler-SP") {
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(OBJ), PROP=Prescaler")
  field(DESC, "Pulser prescaler")
  field(PINI, "YES")
  field(HOPR, "$(PMAX)")
  field(LOPR, "1")
  field(DRVH, "$(PMAX)")
  field(DRVL, "1")
  field(VAL , "1")
  field(FLNK, "$(PN)Prescaler-RB")
  field(DISP, "$(NOPS=0)")
  field(DISA, "$(NOPS=0)")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "$(PN)Prescaler-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(OBJ), PROP=Prescaler")
  field(HOPR, "$(PMAX=0xffff)")
  field(LOPR, "1")
  field(HIGH, "$(PMAX=0xffff)")
  field(HSV, "MAJOR")
  field(FLNK, "$(PN)Res-I")
}

record(calc, "$(PN)Res-I") {
  field(DESC, "Effective resolution")
  field(INPA, "$(PN)Prescaler-RB MS")
  field(INPB, "$(P)Link$(s=:)ClkPeriod-I CP")
  field(CALC, "1e9*(A?A:1)*B")
  field(EGU, "ns")
  field(FLNK, "$(PN)Res-FO_")
}

record(fanout, "$(PN)Res-FO_") {
  field(ASG, "private")
  field(DESC, "Clock change resync")
  field(LNK1, "$(PN)Delay-SP")
  field(LNK2, "$(PN)Width-SP")
}

record(waveform, "$(PN)Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}

# Triger pulser generator by one or more prescalers
record(mbboDirect, "$(PN)PSTrig-Sel")
{
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(OBJ), PROP=PSTrig")
  field(PINI, "YES")
  field(NOBT, "8")
  field(VAL , "0")
  field(FLNK, "$(PN)PSTrig-RB")
  info(autosaveFields_pass0, "RVAL")
}

record(mbbiDirect, "$(PN)PSTrig-RB")
{
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(OBJ), PROP=PSTrig")
  field(PINI, "YES")
  field(NOBT, "8")
  info(autosaveFields_pass0, "RVAL")
}

# Trigger pulser generator by one or more DBus bits
record(mbboDirect, "$(PN)DBusTrig-Sel")
{
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(OBJ), PROP=DBusTrig")
  field(PINI, "YES")
  field(NOBT, "8")
  field(VAL , "0")
  field(FLNK, "$(PN)DBusTrig-RB")
  info(autosaveFields_pass0, "RVAL")
}

record(mbbiDirect, "$(PN)DBusTrig-RB")
{
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(OBJ), PROP=DBusTrig")
  field(PINI, "YES")
  field(NOBT, "8")
  info(autosaveFields_pass0, "RVAL")
}
